%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x99bd9b8.c
%%CreationDate: Sat Sep 23 20:14:15 2006
%%BoundingBox: 143 341 469 451
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-191 -64 translate
-1 129 moveto 383 129 lineto 383 0 lineto -1 0 lineto closepath clip newpath
gsave
16 62 moveto
366 62 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
366 62 moveto
363 65 lineto
366 62 lineto
363 59 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
16 62 moveto
19 65 lineto
16 62 lineto
19 59 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 22 moveto
41 102 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 22 moveto
44 25 lineto
41 22 lineto
38 25 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 102 moveto
44 99 lineto
41 102 lineto
38 99 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 62 moveto
42 63.875 lineto
43 65.75 lineto
44 67.625 lineto
45 69.5 lineto
46 71.375 lineto
47 73.25 lineto
48 75.125 lineto
49 77 lineto
50 78.875 lineto
51 80.75 lineto
52 82.625 lineto
53 84.5 lineto
54 86.375 lineto
55 88.25 lineto
56 92 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
56 92 moveto
57 91.1549 lineto
58 90.309898 lineto
59 89.464798 lineto
60 88.619698 lineto
61 87.774597 lineto
62 86.929596 lineto
63 86.084503 lineto
64 85.239403 lineto
65 84.394402 lineto
66 83.549301 lineto
67 82.704201 lineto
68 81.8592 lineto
69 81.014099 lineto
70 80.168999 lineto
71 79.323898 lineto
72 78.478897 lineto
73 77.633797 lineto
74 76.788696 lineto
75 75.943703 lineto
76 75.098602 lineto
77 74.253502 lineto
78 73.408501 lineto
79 72.5634 lineto
80 71.718307 lineto
81 70.873238 lineto
82 70.028168 lineto
83 69.183098 lineto
84 68.338028 lineto
85 67.492958 lineto
86 66.647888 lineto
87 65.802818 lineto
88 64.957748 lineto
89 64.112679 lineto
90 63.267601 lineto
91 62.422531 lineto
92 61.577469 lineto
93 60.732399 lineto
94 59.887321 lineto
95 59.042252 lineto
96 58.197182 lineto
97 57.352112 lineto
98 56.507042 lineto
99 55.661972 lineto
100 54.816895 lineto
101 53.971832 lineto
102 53.126755 lineto
103 52.281693 lineto
104 51.4366 lineto
105 50.591499 lineto
106 49.746498 lineto
107 48.901398 lineto
108 48.056305 lineto
109 47.211304 lineto
110 46.366196 lineto
111 45.521103 lineto
112 44.676102 lineto
113 43.831001 lineto
114 42.985901 lineto
115 42.1408 lineto
116 41.295799 lineto
117 40.450699 lineto
118 39.605598 lineto
119 38.760597 lineto
120 37.915497 lineto
121 37.070404 lineto
122 36.225403 lineto
123 35.380302 lineto
124 34.535202 lineto
125 33.690102 lineto
126 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
126 32 moveto
127 33.875 lineto
128 35.75 lineto
129 37.625 lineto
130 39.5 lineto
131 41.375 lineto
132 43.25 lineto
133 45.125 lineto
134 47 lineto
135 48.875 lineto
136 50.75 lineto
137 52.625 lineto
138 54.5 lineto
139 56.375 lineto
140 58.25 lineto
141 62 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
141 62 moveto
142 63.875 lineto
143 65.75 lineto
144 67.625 lineto
145 69.5 lineto
146 71.375 lineto
147 73.25 lineto
148 75.125 lineto
149 77 lineto
150 78.875 lineto
151 80.75 lineto
152 82.625 lineto
153 84.5 lineto
154 86.375 lineto
155 88.25 lineto
156 92 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
156 92 moveto
157 91.1549 lineto
158 90.309898 lineto
159 89.464798 lineto
160 88.619698 lineto
161 87.774597 lineto
162 86.929596 lineto
163 86.084503 lineto
164 85.239403 lineto
165 84.394402 lineto
166 83.549301 lineto
167 82.704201 lineto
168 81.8592 lineto
169 81.014099 lineto
170 80.168999 lineto
171 79.323898 lineto
172 78.478897 lineto
173 77.633797 lineto
174 76.788696 lineto
175 75.943703 lineto
176 75.098602 lineto
177 74.253502 lineto
178 73.408501 lineto
179 72.5634 lineto
180 71.718307 lineto
181 70.873238 lineto
182 70.028168 lineto
183 69.183098 lineto
184 68.338028 lineto
185 67.492958 lineto
186 66.647888 lineto
187 65.802818 lineto
188 64.957748 lineto
189 64.112679 lineto
190 63.267601 lineto
191 62.422531 lineto
192 61.577469 lineto
193 60.732399 lineto
194 59.887321 lineto
195 59.042252 lineto
196 58.197182 lineto
197 57.352112 lineto
198 56.507042 lineto
199 55.661972 lineto
200 54.816895 lineto
201 53.971832 lineto
202 53.126755 lineto
203 52.281693 lineto
204 51.4366 lineto
205 50.591499 lineto
206 49.746498 lineto
207 48.901398 lineto
208 48.056305 lineto
209 47.211304 lineto
210 46.366196 lineto
211 45.521103 lineto
212 44.676102 lineto
213 43.831001 lineto
214 42.985901 lineto
215 42.1408 lineto
216 41.295799 lineto
217 40.450699 lineto
218 39.605598 lineto
219 38.760597 lineto
220 37.915497 lineto
221 37.070404 lineto
222 36.225403 lineto
223 35.380302 lineto
224 34.535202 lineto
225 33.690102 lineto
226 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
226 32 moveto
227 33.875 lineto
228 35.75 lineto
229 37.625 lineto
230 39.5 lineto
231 41.375 lineto
232 43.25 lineto
233 45.125 lineto
234 47 lineto
235 48.875 lineto
236 50.75 lineto
237 52.625 lineto
238 54.5 lineto
239 56.375 lineto
240 58.25 lineto
241 62 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
241 62 moveto
242 63.875 lineto
243 65.75 lineto
244 67.625 lineto
245 69.5 lineto
246 71.375 lineto
247 73.25 lineto
248 75.125 lineto
249 77 lineto
250 78.875 lineto
251 80.75 lineto
252 82.625 lineto
253 84.5 lineto
254 86.375 lineto
255 88.25 lineto
256 92 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
256 92 moveto
257 91.1549 lineto
258 90.309898 lineto
259 89.464798 lineto
260 88.619698 lineto
261 87.774597 lineto
262 86.929596 lineto
263 86.084503 lineto
264 85.239403 lineto
265 84.394402 lineto
266 83.549301 lineto
267 82.704201 lineto
268 81.8592 lineto
269 81.014099 lineto
270 80.168999 lineto
271 79.323898 lineto
272 78.478897 lineto
273 77.633797 lineto
274 76.788696 lineto
275 75.943703 lineto
276 75.098602 lineto
277 74.253502 lineto
278 73.408501 lineto
279 72.5634 lineto
280 71.718307 lineto
281 70.873238 lineto
282 70.028168 lineto
283 69.183098 lineto
284 68.338028 lineto
285 67.492958 lineto
286 66.647888 lineto
287 65.802818 lineto
288 64.957748 lineto
289 64.112679 lineto
290 63.267601 lineto
291 62.422531 lineto
292 61.577469 lineto
293 60.732399 lineto
294 59.887321 lineto
295 59.042252 lineto
296 58.197182 lineto
297 57.352112 lineto
298 56.507042 lineto
299 55.661972 lineto
300 54.816895 lineto
301 53.971832 lineto
302 53.126755 lineto
303 52.281693 lineto
304 51.4366 lineto
305 50.591499 lineto
306 49.746498 lineto
307 48.901398 lineto
308 48.056305 lineto
309 47.211304 lineto
310 46.366196 lineto
311 45.521103 lineto
312 44.676102 lineto
313 43.831001 lineto
314 42.985901 lineto
315 42.1408 lineto
316 41.295799 lineto
317 40.450699 lineto
318 39.605598 lineto
319 38.760597 lineto
320 37.915497 lineto
321 37.070404 lineto
322 36.225403 lineto
323 35.380302 lineto
324 34.535202 lineto
325 33.690102 lineto
326 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
140 60 moveto
140 64 lineto
142 64 lineto
142 60 lineto
140 60 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
140 60 moveto
140 64 lineto
142 64 lineto
142 60 lineto
140 60 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
240 60 moveto
240 64 lineto
242 64 lineto
242 60 lineto
240 60 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
240 60 moveto
240 64 lineto
242 64 lineto
242 60 lineto
240 60 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
340 60 moveto
340 64 lineto
342 64 lineto
342 60 lineto
340 60 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
340 60 moveto
340 64 lineto
342 64 lineto
342 60 lineto
340 60 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
54 106 [
[(\050M, 1\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
119 25 [
[(\050N-M, -1\051)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
