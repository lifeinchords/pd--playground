%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x87f69e0.c
%%CreationDate: Sat Sep  2 16:42:40 2006
%%BoundingBox: 147 308 466 484
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-186 -103 translate
-1 206 moveto 374 206 lineto 374 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
86 18 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
277 19 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
19 112 moveto
179 112 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
179 112 moveto
176 115 lineto
179 112 lineto
176 109 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 112 moveto
22 115 lineto
19 112 lineto
22 109 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
99 32 moveto
99 192 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
99 32 moveto
102 35 lineto
99 32 lineto
96 35 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
99 192 moveto
102 189 lineto
99 192 lineto
96 189 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
164 112 moveto
164 116.081001 lineto
163 120.146004 lineto
163 124.179001 lineto
162 128.164001 lineto
161 132.085999 lineto
159 135.927002 lineto
158 139.675003 lineto
156 143.313004 lineto
154 146.828003 lineto
152 150.205002 lineto
149 153.432007 lineto
146 156.494995 lineto
143 159.382004 lineto
140 162.082001 lineto
137 164.585007 lineto
134 166.880005 lineto
130 168.959 lineto
127 170.813004 lineto
123 172.434998 lineto
119 173.817993 lineto
115 174.957001 lineto
111 175.848007 lineto
107 176.487 lineto
103 176.871994 lineto
99 177 lineto
95 176.871994 lineto
91 176.488007 lineto
87 175.848999 lineto
83 174.959 lineto
79 173.820007 lineto
75 172.436996 lineto
71 170.815002 lineto
68 168.962006 lineto
64 166.884003 lineto
61 164.589005 lineto
58 162.085999 lineto
55 159.386002 lineto
52 156.498993 lineto
49 153.436005 lineto
46 150.210007 lineto
44 146.832993 lineto
42 143.317993 lineto
40 139.679993 lineto
39 135.932999 lineto
37 132.091003 lineto
36 128.169998 lineto
35 124.184998 lineto
35 120.152 lineto
34 116.086998 lineto
34 112.005997 lineto
34 107.924797 lineto
35 103.859596 lineto
35 99.8265 lineto
36 95.8414 lineto
37 91.920197 lineto
39 88.078201 lineto
40 84.330597 lineto
42 80.692101 lineto
44 77.177299 lineto
46 73.799805 lineto
49 70.573105 lineto
52 67.509903 lineto
54 64.6222 lineto
58 61.9216 lineto
61 59.418499 lineto
64 57.122898 lineto
68 55.043999 lineto
71 53.189701 lineto
75 51.5676 lineto
79 50.183899 lineto
83 49.044201 lineto
87 48.153 lineto
91 47.513599 lineto
95 47.128799 lineto
99 47 lineto
103 47.127701 lineto
107 47.511398 lineto
111 48.149601 lineto
115 49.0397 lineto
119 50.178299 lineto
123 51.560902 lineto
127 53.181999 lineto
130 55.035301 lineto
134 57.1133 lineto
137 59.407902 lineto
140 61.91 lineto
143 64.609901 lineto
146 67.496704 lineto
149 70.559204 lineto
152 73.785202 lineto
154 77.162003 lineto
156 80.6763 lineto
158 84.314201 lineto
159 88.061401 lineto
161 91.903 lineto
162 95.823898 lineto
163 99.808701 lineto
163 103.841599 lineto
164 107.9067 lineto
164 111.987999 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
36 110 moveto
37.332 111.332 37.332 112.668 36 114 curveto
34.666 115.334 33.334 115.334 32 114 curveto
30.666 112.666 30.666 111.334 32 110 curveto
33.334 108.666 34.666 108.666 36 110 curveto
1.000 1.000 1.000 setrgbcolor AdjustColor
eofill
36 110 moveto
37.332 111.332 37.332 112.668 36 114 curveto
34.666 115.334 33.334 115.334 32 114 curveto
30.666 112.666 30.666 111.334 32 110 curveto
33.334 108.666 34.666 108.666 36 110 curveto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
204 112 moveto
364 112 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
364 112 moveto
361 115 lineto
364 112 lineto
361 109 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
204 112 moveto
207 115 lineto
204 112 lineto
207 109 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
284 32 moveto
284 192 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
284 32 moveto
287 35 lineto
284 32 lineto
281 35 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
284 192 moveto
287 189 lineto
284 192 lineto
281 189 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
349 112 moveto
349 116.081001 lineto
348 120.146004 lineto
348 124.179001 lineto
347 128.164001 lineto
346 132.085999 lineto
344 135.927002 lineto
343 139.675003 lineto
341 143.313004 lineto
339 146.828003 lineto
337 150.205002 lineto
334 153.432007 lineto
331 156.494995 lineto
328 159.382004 lineto
325 162.082001 lineto
322 164.585007 lineto
319 166.880005 lineto
315 168.959 lineto
312 170.813004 lineto
308 172.434998 lineto
304 173.817993 lineto
300 174.957001 lineto
296 175.848007 lineto
292 176.487 lineto
288 176.871994 lineto
284 177 lineto
280 176.871994 lineto
276 176.488007 lineto
272 175.848999 lineto
268 174.959 lineto
264 173.820007 lineto
260 172.436996 lineto
256 170.815002 lineto
253 168.962006 lineto
249 166.884003 lineto
246 164.589005 lineto
243 162.085999 lineto
240 159.386002 lineto
237 156.498993 lineto
234 153.436005 lineto
231 150.210007 lineto
229 146.832993 lineto
227 143.317993 lineto
225 139.679993 lineto
224 135.932999 lineto
222 132.091003 lineto
221 128.169998 lineto
220 124.184998 lineto
220 120.152 lineto
219 116.086998 lineto
219 112.005997 lineto
219 107.924797 lineto
220 103.859596 lineto
220 99.8265 lineto
221 95.8414 lineto
222 91.920197 lineto
224 88.078201 lineto
225 84.330597 lineto
227 80.692101 lineto
229 77.177299 lineto
231 73.799805 lineto
234 70.573105 lineto
237 67.509903 lineto
239 64.6222 lineto
243 61.9216 lineto
246 59.418499 lineto
249 57.122898 lineto
253 55.043999 lineto
256 53.189701 lineto
260 51.5676 lineto
264 50.183899 lineto
268 49.044201 lineto
272 48.153 lineto
276 47.513599 lineto
280 47.128799 lineto
284 47 lineto
288 47.127701 lineto
292 47.511398 lineto
296 48.149601 lineto
300 49.0397 lineto
304 50.178299 lineto
308 51.560902 lineto
312 53.181999 lineto
315 55.035301 lineto
319 57.1133 lineto
322 59.407902 lineto
325 61.91 lineto
328 64.609901 lineto
331 67.496704 lineto
334 70.559204 lineto
337 73.785202 lineto
339 77.162003 lineto
341 80.6763 lineto
343 84.314201 lineto
344 88.061401 lineto
346 91.903 lineto
347 95.823898 lineto
348 99.808701 lineto
348 103.841599 lineto
349 107.9067 lineto
349 111.987999 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
351 110 moveto
352.332 111.332 352.332 112.668 351 114 curveto
349.666 115.334 348.334 115.334 347 114 curveto
345.666 112.666 345.666 111.334 347 110 curveto
348.334 108.666 349.666 108.666 351 110 curveto
1.000 1.000 1.000 setrgbcolor AdjustColor
eofill
351 110 moveto
352.332 111.332 352.332 112.668 351 114 curveto
349.666 115.334 348.334 115.334 347 114 curveto
345.666 112.666 345.666 111.334 347 110 curveto
348.334 108.666 349.666 108.666 351 110 curveto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
221 110 moveto
222.332 111.332 222.332 112.668 221 114 curveto
219.666 115.334 218.334 115.334 217 114 curveto
215.666 112.666 215.666 111.334 217 110 curveto
218.334 108.666 219.666 108.666 221 110 curveto
1.000 1.000 1.000 setrgbcolor AdjustColor
eofill
221 110 moveto
222.332 111.332 222.332 112.668 221 114 curveto
219.666 115.334 218.334 115.334 217 114 curveto
215.666 112.666 215.666 111.334 217 110 curveto
218.334 108.666 219.666 108.666 221 110 curveto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
287 168 moveto
281 162 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
287 162 moveto
281 168 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
287 63 moveto
281 57 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
287 57 moveto
281 63 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
160 115 moveto
154 109 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
160 109 moveto
154 115 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
