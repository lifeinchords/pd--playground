%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x9397bf0.c
%%CreationDate: Tue Aug 29 16:32:56 2006
%%BoundingBox: 144 300 469 492
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-190 -113 translate
-1 226 moveto 382 226 lineto 382 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
192 28 [
[(frequency)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
81 205 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 156 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
41 162 [
[(b  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
216 98 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
209 104 [
[(b  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
66 211 [
[(\050f )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
110 205 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
88 212 [
[(, a \051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
245 138 [
[(\050f )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
267 139 [
[(, a \051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
260 132 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 132 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
14 84 [
[(tude)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
14 97 [
[(ampli-)]
] 13 -0 0 0 false DrawText
grestore
gsave
204 89 moveto
257 89 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
257 89 moveto
254 92 lineto
257 89 lineto
254 86 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
204 89 moveto
207 92 lineto
204 89 lineto
207 86 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
36 147 moveto
84 147 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
84 147 moveto
81 150 lineto
84 147 lineto
81 144 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
36 147 moveto
39 150 lineto
36 147 lineto
39 144 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 172 moveto
59 179.337 61.8305 184.998 67.5 189 curveto
73.1695 193.002 76 196.332 76 199 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 172 moveto
56 175 lineto
59 172 lineto
62 175 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
203 76 moveto
203 105 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
258 76 moveto
258 105 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
34 138 moveto
34 167 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
85 136 moveto
85 165 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
60 152.984009 moveto
61 152.984009 lineto
62 152.984009 lineto
63 152.595001 lineto
64 151.725998 lineto
65 150.850998 lineto
66 149.975006 lineto
67 149.104004 lineto
68 148.242004 lineto
69 147.393005 lineto
70 146.563995 lineto
71 145.761002 lineto
72 144.985992 lineto
73 144.240997 lineto
74 143.531006 lineto
75 142.847992 lineto
76 142.19101 lineto
77 141.550995 lineto
78 140.917999 lineto
79 140.283997 lineto
80 139.641998 lineto
81 138.980011 lineto
82 138.298004 lineto
83 137.596405 lineto
84 136.870605 lineto
85 136.132202 lineto
86 135.388199 lineto
87 134.643707 lineto
88 133.901611 lineto
89 133.172089 lineto
90 132.447205 lineto
91 131.723907 lineto
92 130.999603 lineto
93 130.271301 lineto
94 129.531708 lineto
95 128.786301 lineto
96 128.038902 lineto
97 127.292397 lineto
98 126.5495 lineto
99 125.817497 lineto
100 125.092003 lineto
101 124.368698 lineto
102 123.644798 lineto
103 122.915802 lineto
104 122.174896 lineto
105 121.422302 lineto
106 120.660103 lineto
107 119.888496 lineto
108 119.1092 lineto
109 118.324997 lineto
110 117.5355 lineto
111 116.737801 lineto
112 115.929604 lineto
113 115.111801 lineto
114 114.282204 lineto
115 113.442101 lineto
116 112.597801 lineto
117 111.753197 lineto
118 110.912003 lineto
119 110.079803 lineto
120 109.260002 lineto
121 108.447502 lineto
122 107.644096 lineto
123 106.8423 lineto
124 106.035103 lineto
125 105.216301 lineto
126 104.382401 lineto
127 103.524597 lineto
128 102.6446 lineto
129 101.744301 lineto
130 100.821602 lineto
131 99.890305 lineto
132 98.957199 lineto
133 98.032799 lineto
134 97.129395 lineto
135 96.262405 lineto
136 95.4319 lineto
137 94.647797 lineto
138 93.9105 lineto
139 93.211502 lineto
140 92.550095 lineto
141 91.9161 lineto
142 91.3013 lineto
143 90.698502 lineto
144 90.1026 lineto
145 89.507706 lineto
146 88.9076 lineto
147 88.296799 lineto
148 87.669495 lineto
149 87.017303 lineto
150 86.330101 lineto
151 85.604797 lineto
152 84.836395 lineto
153 84.018005 lineto
154 83.159599 lineto
155 82.262695 lineto
156 81.334702 lineto
157 80.384903 lineto
158 79.422798 lineto
159 78.450401 lineto
160 77.473495 lineto
161 76.495399 lineto
162 75.517502 lineto
163 74.540901 lineto
164 73.570999 lineto
165 72.611404 lineto
166 71.666595 lineto
167 70.742401 lineto
168 69.843796 lineto
169 68.976997 lineto
170 68.147301 lineto
171 67.360901 lineto
172 66.6278 lineto
173 65.955399 lineto
174 65.354202 lineto
175 64.835602 lineto
176 64.410698 lineto
177 64.080799 lineto
178 63.857498 lineto
179 63.735397 lineto
180 63.707397 lineto
181 63.7715 lineto
182 63.9132 lineto
183 64.120598 lineto
184 64.386002 lineto
185 64.7033 lineto
186 65.061996 lineto
187 65.4636 lineto
188 65.905304 lineto
189 66.384903 lineto
190 66.901001 lineto
191 67.453697 lineto
192 68.037598 lineto
193 68.650002 lineto
194 69.286598 lineto
195 69.940002 lineto
196 70.6045 lineto
197 71.273605 lineto
198 71.940002 lineto
199 72.597198 lineto
200 73.243103 lineto
201 73.872101 lineto
202 74.483002 lineto
203 75.074295 lineto
204 75.6436 lineto
205 76.191895 lineto
206 76.715302 lineto
207 77.219002 lineto
208 77.710098 lineto
209 78.189697 lineto
210 78.676498 lineto
211 79.184204 lineto
212 79.724602 lineto
213 80.307495 lineto
214 80.953499 lineto
215 81.653801 lineto
216 82.413605 lineto
217 83.230202 lineto
218 84.0896 lineto
219 84.987999 lineto
220 85.907501 lineto
221 86.834198 lineto
222 87.753799 lineto
223 88.6493 lineto
224 89.500595 lineto
225 90.298996 lineto
226 91.0326 lineto
227 91.688797 lineto
228 92.270798 lineto
229 92.776901 lineto
230 93.2024 lineto
231 93.5439 lineto
232 93.802505 lineto
233 93.9534 lineto
234 93.980896 lineto
235 93.869904 lineto
236 93.6045 lineto
237 93.151703 lineto
238 92.540695 lineto
239 91.767395 lineto
240 90.852295 lineto
241 89.840401 lineto
242 88.765305 lineto
243 87.657394 lineto
244 86.556595 lineto
245 85.490204 lineto
246 84.457703 lineto
247 83.483704 lineto
248 82.556 lineto
249 81.669296 lineto
250 80.819702 lineto
251 79.997101 lineto
252 79.190399 lineto
253 78.397903 lineto
254 77.6166 lineto
255 76.840897 lineto
256 76.082504 lineto
257 75.345596 lineto
258 74.637695 lineto
259 73.968002 lineto
260 73.349701 lineto
261 72.774399 lineto
262 72.246201 lineto
263 71.758102 lineto
264 71.295898 lineto
265 70.847198 lineto
266 70.406601 lineto
267 69.962997 lineto
268 69.511398 lineto
269 69.056396 lineto
270 68.599396 lineto
271 68.138298 lineto
272 67.675201 lineto
273 67.208496 lineto
274 66.723198 lineto
275 66.212296 lineto
276 65.662498 lineto
277 65.061096 lineto
278 64.396 lineto
279 63.6539 lineto
280 62.8265 lineto
281 61.8937 lineto
282 60.8325 lineto
283 59.6199 lineto
284 58.2481 lineto
285 56.679298 lineto
286 54.9324 lineto
287 53.0499 lineto
288 51.027298 lineto
289 48.969398 lineto
290 46.94582 lineto
291 45.023941 lineto
292 43.268188 lineto
293 41.782181 lineto
294 40.556019 lineto
295 39.635891 lineto
296 39.032768 lineto
297 38.674183 lineto
298 38.55061 lineto
299 38.577301 lineto
300 38.671555 lineto
301 38.762718 lineto
302 38.830765 lineto
303 38.797398 lineto
304 38.685883 lineto
305 38.518192 lineto
306 38.299946 lineto
307 38.072365 lineto
308 37.878624 lineto
309 37.725807 lineto
310 37.620747 lineto
311 37.620747 lineto
312 37.620747 lineto
313 37.620747 lineto
314 37.620747 lineto
315 38 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 163 moveto
59 35 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 163 moveto
62 160 lineto
59 163 lineto
56 160 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
359 36 moveto
59 36 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
359 36 moveto
356 39 lineto
359 36 lineto
356 33 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
235 98 moveto
235 105.337 238.1635 110.332 244.5 113 curveto
250.8365 115.668 254 119.664 254 125 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
235 98 moveto
232 101 lineto
235 98 lineto
238 101 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
