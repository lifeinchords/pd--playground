%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x83f0bd0.c
%%CreationDate: Tue Aug 29 17:45:40 2006
%%BoundingBox: 143 170 469 622
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-191 -266 translate
-1 532 moveto 383 532 lineto 383 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
110 46 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
127 46 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
143 46 [
[(4  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
159 46 [
[(6  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
179 46 [
[(...)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
38 71 [
[(\050dB\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
158 29 [
[(partial number)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
5 88 [
[(amplitude)]
] 13 -0 0 0 false DrawText
grestore
gsave
109 352 moveto
109 222 lineto
365 222 lineto
365 352 lineto
109 352 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
110 364 [
[(Gaussian)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 248 [
[(20)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 274 [
[(40)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 300 [
[(60)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 326 [
[(80)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 352 [
[(100)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
109 222 moveto
111 222 lineto
113 256.767591 lineto
115 222 lineto
117 222 lineto
119 222 lineto
121 269.65618 lineto
123 222 lineto
125 222 lineto
127 222 lineto
129 287.933661 lineto
131 222 lineto
133 222 lineto
135 222 lineto
137 304.114372 lineto
139 222 lineto
141 222 lineto
143 222 lineto
145 317.382819 lineto
147 222 lineto
149 222 lineto
151 222 lineto
153 326.8307 lineto
155 222 lineto
157 222 lineto
159 222 lineto
161 330.894112 lineto
163 222 lineto
165 222 lineto
167 222 lineto
169 326.8307 lineto
171 222 lineto
173 222 lineto
175 222 lineto
177 317.382819 lineto
179 222 lineto
181 222 lineto
183 222 lineto
185 304.114109 lineto
187 222 lineto
189 222 lineto
191 222 lineto
193 287.926381 lineto
195 222 lineto
197 222 lineto
199 222 lineto
201 269.387991 lineto
203 222 lineto
205 222 lineto
207 222 lineto
209 248.8671 lineto
211 222 lineto
213 222 lineto
215 222 lineto
217 226.569006 lineto
219 222 lineto
221 222 lineto
223 222 lineto
225 222 lineto
227 222 lineto
229 222 lineto
231 222 lineto
233 222 lineto
235 222 lineto
237 222 lineto
239 222 lineto
241 222 lineto
243 222 lineto
245 222 lineto
247 222 lineto
249 222 lineto
251 222 lineto
253 222 lineto
255 222 lineto
257 222 lineto
259 222 lineto
261 222 lineto
263 222 lineto
265 222 lineto
267 222 lineto
269 222 lineto
271 222 lineto
273 222 lineto
275 222 lineto
277 222 lineto
279 222 lineto
281 222 lineto
283 222 lineto
285 222 lineto
287 222 lineto
289 222 lineto
291 222 lineto
293 222 lineto
295 222 lineto
297 222 lineto
299 222 lineto
301 222 lineto
303 222 lineto
305 222 lineto
307 222 lineto
309 222 lineto
311 222 lineto
313 222 lineto
315 222 lineto
317 222 lineto
319 222 lineto
321 222 lineto
323 222 lineto
325 222 lineto
327 222 lineto
329 222 lineto
331 222 lineto
333 222 lineto
335 222 lineto
337 222 lineto
339 222 lineto
341 222 lineto
343 222 lineto
345 222 lineto
347 222 lineto
349 222 lineto
351 222 lineto
353 222 lineto
355 222 lineto
357 222 lineto
359 222 lineto
361 222 lineto
363 222 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
109 180 moveto
109 50 lineto
365 50 lineto
365 180 lineto
109 180 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
110 192 [
[(Cauchy)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 76 [
[(20)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 102 [
[(40)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 128 [
[(60)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 154 [
[(80)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 180 [
[(100)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
109 50 moveto
111 50 lineto
113 105.718908 lineto
115 50 lineto
117 50 lineto
119 50 lineto
121 110.290232 lineto
123 50 lineto
125 50 lineto
127 50 lineto
129 119.855501 lineto
131 50 lineto
133 50 lineto
135 50 lineto
137 130.519662 lineto
139 50 lineto
141 50 lineto
143 50 lineto
145 141.357105 lineto
147 50 lineto
149 50 lineto
151 50 lineto
153 152.220038 lineto
155 50 lineto
157 50 lineto
159 50 lineto
161 163.086739 lineto
163 50 lineto
165 50 lineto
167 50 lineto
169 152.219393 lineto
171 50 lineto
173 50 lineto
175 50 lineto
177 141.352037 lineto
179 50 lineto
181 50 lineto
183 50 lineto
185 130.484691 lineto
187 50 lineto
189 50 lineto
191 50 lineto
193 119.617211 lineto
195 50 lineto
197 50 lineto
199 50 lineto
201 108.749081 lineto
203 50 lineto
205 50 lineto
207 50 lineto
209 97.875749 lineto
211 50 lineto
213 50 lineto
215 50 lineto
217 87.007751 lineto
219 50 lineto
221 50 lineto
223 50 lineto
225 76.14066 lineto
227 50 lineto
229 50 lineto
231 50 lineto
233 65.27071 lineto
235 50 lineto
237 50 lineto
239 50 lineto
241 54.385628 lineto
243 50 lineto
245 50 lineto
247 50 lineto
249 50 lineto
251 50 lineto
253 50 lineto
255 50 lineto
257 50 lineto
259 50 lineto
261 50 lineto
263 50 lineto
265 50 lineto
267 50 lineto
269 50 lineto
271 50 lineto
273 50 lineto
275 50 lineto
277 50 lineto
279 50 lineto
281 50 lineto
283 50 lineto
285 50 lineto
287 50 lineto
289 50 lineto
291 50 lineto
293 50 lineto
295 50 lineto
297 50 lineto
299 50 lineto
301 50 lineto
303 50 lineto
305 50 lineto
307 50 lineto
309 50 lineto
311 50 lineto
313 50 lineto
315 50 lineto
317 50 lineto
319 50 lineto
321 50 lineto
323 50 lineto
325 50 lineto
327 50 lineto
329 50 lineto
331 50 lineto
333 50 lineto
335 50 lineto
337 50 lineto
339 50 lineto
341 50 lineto
343 50 lineto
345 50 lineto
347 50 lineto
349 50 lineto
351 50 lineto
353 50 lineto
355 50 lineto
357 50 lineto
359 50 lineto
361 50 lineto
363 50 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
110 508 moveto
110 378 lineto
366 378 lineto
366 508 lineto
110 508 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
111 520 [
[(Hann)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
90 404 [
[(20)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
90 430 [
[(40)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
90 456 [
[(60)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
90 482 [
[(80)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
90 508 [
[(100)]
] 10 -0.5 0.5 0 false DrawText
grestore
gsave
110 378 moveto
112 378 lineto
114 378 lineto
116 378 lineto
118 378 lineto
120 378 lineto
122 437.942351 lineto
124 378 lineto
126 378 lineto
128 378 lineto
130 378 lineto
132 378 lineto
134 378 lineto
136 378 lineto
138 464.248631 lineto
140 378 lineto
142 378 lineto
144 378 lineto
146 476.692883 lineto
148 378 lineto
150 378 lineto
152 378 lineto
154 482.695237 lineto
156 378 lineto
158 378 lineto
160 378 lineto
162 484.519662 lineto
164 378 lineto
166 378 lineto
168 378 lineto
170 482.653124 lineto
172 378 lineto
174 378 lineto
176 378 lineto
178 476.692883 lineto
180 378 lineto
182 378 lineto
184 378 lineto
186 464.546593 lineto
188 378 lineto
190 378 lineto
192 378 lineto
194 378 lineto
196 378 lineto
198 378 lineto
200 378 lineto
202 442.766262 lineto
204 378 lineto
206 378 lineto
208 378 lineto
210 378 lineto
212 378 lineto
214 378 lineto
216 378 lineto
218 430.628031 lineto
220 378 lineto
222 378 lineto
224 378 lineto
226 378 lineto
228 378 lineto
230 378 lineto
232 378 lineto
234 422.038541 lineto
236 378 lineto
238 378 lineto
240 378 lineto
242 378 lineto
244 378 lineto
246 378 lineto
248 378 lineto
250 415.364601 lineto
252 378 lineto
254 378 lineto
256 378 lineto
258 378 lineto
260 378 lineto
262 378 lineto
264 378 lineto
266 409.922671 lineto
268 378 lineto
270 378 lineto
272 378 lineto
274 378 lineto
276 378 lineto
278 378 lineto
280 378 lineto
282 405.30338 lineto
284 378 lineto
286 378 lineto
288 378 lineto
290 378 lineto
292 378 lineto
294 378 lineto
296 378 lineto
298 401.31446 lineto
300 378 lineto
302 378 lineto
304 378 lineto
306 378 lineto
308 378 lineto
310 378 lineto
312 378 lineto
314 397.76923 lineto
316 378 lineto
318 378 lineto
320 378 lineto
322 378 lineto
324 378 lineto
326 378 lineto
328 378 lineto
330 394.61712 lineto
332 378 lineto
334 378 lineto
336 378 lineto
338 378 lineto
340 378 lineto
342 378 lineto
344 378 lineto
346 391.74035 lineto
348 378 lineto
350 378 lineto
352 378 lineto
354 378 lineto
356 378 lineto
358 378 lineto
360 378 lineto
362 389.127493 lineto
364 378 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
