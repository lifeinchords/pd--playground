%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x99a50f8.c
%%CreationDate: Sun Sep 17 11:03:16 2006
%%BoundingBox: 160 289 452 503
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-171 -126 translate
-1 252 moveto 343 252 lineto 343 0 lineto -1 0 lineto closepath clip newpath
gsave
41 195 moveto
78 195 lineto
78 178 lineto
41 178 lineto
41 195 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 179 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 195 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
71 195 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43 191 [
[(/ 100)]
] 13 -0 0 0 false DrawText
grestore
gsave
41 213 moveto
74 213 lineto
78 209 lineto
78 199 lineto
41 199 lineto
41 213 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 200 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 213 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43 209 [
[(0)]
] 13 -0 0 0 false DrawText
grestore
gsave
24 131 moveto
47 131 lineto
47 114 lineto
24 114 lineto
24 131 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 115 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 131 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
40 131 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 127 [
[(*~ )]
] 13 -0 0 0 false DrawText
grestore
gsave
23 238 moveto
81 238 lineto
81 221 lineto
23 221 lineto
23 238 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
23 222 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
23 238 moveto 7 0 rlineto 0 -0.999999999999998 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
74 238 moveto 7 0 rlineto 0 -0.999999999999998 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
25 234 [
[(osc~ 220)]
] 13 -0 0 0 false DrawText
grestore
gsave
41 174 moveto
106 174 lineto
106 157 lineto
41 157 lineto
41 174 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 158 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 174 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
99 174 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43 170 [
[(pack 0 50)]
] 13 -0 0 0 false DrawText
grestore
gsave
41 153 moveto
78 153 lineto
78 136 lineto
41 136 lineto
41 153 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 137 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 153 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
71 153 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43 149 [
[(line~)]
] 13 -0 0 0 false DrawText
grestore
gsave
24 109 moveto
68 109 lineto
68 92 lineto
24 92 lineto
24 109 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 93 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 109 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 109 moveto 7.00000000000001 0 rlineto 0 -1 rlineto -7.00000000000001 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 105 [
[(*~ 128)]
] 13 -0 0 0 false DrawText
grestore
gsave
24 67 moveto
145 67 lineto
145 50 lineto
24 50 lineto
24 67 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 51 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 67 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 63 [
[(tabread4~ E05-tab)]
] 13 -0 0 0 false DrawText
grestore
gsave
168 205 moveto
168 115 lineto
318 115 lineto
318 205 lineto
168 205 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
169 217 [
[(E05-tab)]
] 13 -0 0 0 false DrawText
grestore
gsave
168 105.933395 moveto
169 115 lineto
170 131.503296 lineto
171 145.950554 lineto
172 158.478355 lineto
173 164.063736 lineto
174 173.957474 lineto
175 182.251465 lineto
176 185.836166 lineto
177 191.953152 lineto
178 196.760277 lineto
179 200.36536 lineto
180 201.749695 lineto
181 203.744183 lineto
182 204.786747 lineto
183 204.980064 lineto
184 204.76672 lineto
185 203.8246 lineto
186 202.235741 lineto
187 201.223328 lineto
188 198.809349 lineto
189 195.936192 lineto
190 194.348949 lineto
191 190.913967 lineto
192 187.183601 lineto
193 183.216896 lineto
194 181.162422 lineto
195 176.944298 lineto
196 172.622185 lineto
197 168.243233 lineto
198 166.046204 lineto
199 161.662994 lineto
200 157.326401 lineto
201 155.186981 lineto
202 150.986862 lineto
203 146.917824 lineto
204 143.008499 lineto
205 141.121964 lineto
206 137.5 lineto
207 134.097549 lineto
208 132.484795 lineto
209 129.447113 lineto
210 126.672592 lineto
211 124.174507 lineto
212 123.032631 lineto
213 120.96907 lineto
214 119.2052 lineto
215 118.437454 lineto
216 117.13295 lineto
217 116.138321 lineto
218 115.454224 lineto
219 115.228378 lineto
220 115.007568 lineto
221 115.091263 lineto
222 115.474304 lineto
223 115.77594 lineto
224 116.59462 lineto
225 117.692795 lineto
226 118.343552 lineto
227 119.84137 lineto
228 121.590698 lineto
229 123.578262 lineto
230 124.656952 lineto
231 126.974724 lineto
232 129.49324 lineto
233 130.822586 lineto
234 133.610832 lineto
235 136.556938 lineto
236 139.642632 lineto
237 141.231895 lineto
238 144.491287 lineto
239 147.842171 lineto
240 149.545647 lineto
241 152.996201 lineto
242 156.487808 lineto
243 160 lineto
244 161.757385 lineto
245 165.261848 lineto
246 168.735489 lineto
247 172.157829 lineto
248 173.843437 lineto
249 177.151077 lineto
250 180.357368 lineto
251 181.916489 lineto
252 184.934723 lineto
253 187.80415 lineto
254 190.50676 lineto
255 191.79007 lineto
256 194.210258 lineto
257 196.421741 lineto
258 197.444412 lineto
259 199.31461 lineto
260 200.939739 lineto
261 202.307198 lineto
262 202.890625 lineto
263 203.85025 lineto
264 204.5257 lineto
265 204.754257 lineto
266 204.988346 lineto
267 204.920349 lineto
268 204.545769 lineto
269 204.242516 lineto
270 203.403221 lineto
271 202.253426 lineto
272 200.794796 lineto
273 199.950729 lineto
274 198.03616 lineto
275 195.825489 lineto
276 194.611752 lineto
277 191.973942 lineto
278 189.06604 lineto
279 185.902451 lineto
280 184.229935 lineto
281 180.715164 lineto
282 176.991501 lineto
283 175.058487 lineto
284 171.065903 lineto
285 166.927567 lineto
286 162.673599 lineto
287 160.513451 lineto
288 156.148865 lineto
289 151.756767 lineto
290 149.562973 lineto
291 145.206787 lineto
292 140.930573 lineto
293 136.783104 lineto
294 134.773766 lineto
295 130.91803 lineto
296 127.327797 lineto
297 124.063812 lineto
298 122.574219 lineto
299 119.921875 lineto
300 117.764267 lineto
301 116.893951 lineto
302 115.618439 lineto
303 115.030197 lineto
304 115.213257 lineto
305 115.621445 lineto
306 117.128143 lineto
307 119.634644 lineto
308 121.293472 lineto
309 125.486397 lineto
310 130.934723 lineto
311 137.748535 lineto
312 141.703133 lineto
313 150.781792 lineto
314 161.521645 lineto
315 167.55397 lineto
316 181.024719 lineto
317 196.482582 lineto
318 214.066601 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 88 moveto
68 88 lineto
68 71 lineto
24 71 lineto
24 88 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 72 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 88 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 88 moveto 7.00000000000001 0 rlineto 0 -1 rlineto -7.00000000000001 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 84 [
[(+~ 129)]
] 13 -0 0 0 false DrawText
grestore
gsave
24 46 moveto
68 46 lineto
68 29 lineto
24 29 lineto
24 46 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 30 moveto 7 0 rlineto 0 -0.999999999999972 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 46 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 46 moveto 7.00000000000001 0 rlineto 0 -1 rlineto -7.00000000000001 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 42 [
[(hip~ 5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
81 208 [
[(<- index)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
24 28 [
[(|  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
11 16 [
[(\050OUT\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
44 178 moveto
44 174 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
44 199 moveto
44 195 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
27 114 moveto
27 109 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
26 221 moveto
27 131 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
44 157 moveto
44 153 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
44 136 moveto
43 131 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
27 92 moveto
27 88 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
27 50 moveto
27 46 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
27 71 moveto
27 67 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
