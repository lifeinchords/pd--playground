%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8f14128.c
%%CreationDate: Mon Dec 25 10:14:01 2006
%%BoundingBox: 146 312 466 480
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-187 -99 translate
-1 198 moveto 375 198 lineto 375 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
52 167 [
[(real)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 68 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
161 69 [
[(5  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
358 66 [
[(k  )]
] 13 -0 0 0 false DrawText
grestore
gsave
56 75.842888 moveto
57 75.841522 lineto
58 75.853149 lineto
59 75.877296 lineto
60 75.912193 lineto
61 75.95491 lineto
62 76.001526 lineto
63 76.047493 lineto
64 76.088036 lineto
65 76.118614 lineto
66 76.135384 lineto
67 76.135651 lineto
68 76.118164 lineto
69 76.083366 lineto
70 76.03347 lineto
71 75.972343 lineto
72 75.905228 lineto
73 75.838333 lineto
74 75.778282 lineto
75 75.731468 lineto
76 75.703415 lineto
77 75.698174 lineto
78 75.717789 lineto
79 75.761955 lineto
80 75.827873 lineto
81 75.910324 lineto
82 76.002014 lineto
83 76.094147 lineto
84 76.177109 lineto
85 76.241447 lineto
86 76.278763 lineto
87 76.282639 lineto
88 76.249451 lineto
89 76.178993 lineto
90 76.074738 lineto
91 75.943863 lineto
92 75.79686 lineto
93 75.64679 lineto
94 75.508232 lineto
95 75.395981 lineto
96 75.323601 lineto
97 75.301964 lineto
98 75.337891 lineto
99 75.433067 lineto
100 75.583359 lineto
101 75.778549 lineto
102 76.002754 lineto
103 76.235291 lineto
104 76.452232 lineto
106 76.628357 lineto
107 76.739433 lineto
108 76.764786 lineto
109 76.689659 lineto
110 76.507446 lineto
111 76.221336 lineto
112 75.845291 lineto
113 75.404099 lineto
114 74.932442 lineto
115 74.472931 lineto
115 74.07312 lineto
116 73.78167 lineto
117 73.643806 lineto
117 73.696503 lineto
118 73.963562 lineto
119 74.451172 lineto
121 75.144234 lineto
122 76.003876 lineto
124 76.966537 lineto
126 77.944832 lineto
128 78.830368 lineto
130 79.498573 lineto
132 79.815338 lineto
134 79.645363 lineto
136 78.861557 lineto
138 77.35527 lineto
139 75.046402 lineto
139 71.893044 lineto
139 67.899612 lineto
139 63.123199 lineto
137 57.6768 lineto
135 51.7304 lineto
132 45.507301 lineto
128 39.2784 lineto
123 33.351601 lineto
118 28.059502 lineto
113 23.743 lineto
108 20.734798 lineto
104 19.340199 lineto
99 19.819302 lineto
96 22.369598 lineto
94 27.111 lineto
93 34.074001 lineto
94 43.191502 lineto
97 54.296303 lineto
101 67.121971 lineto
107 81.311073 lineto
115 96.425903 lineto
125 111.966499 lineto
136 127.389999 lineto
148 142.135193 lineto
160 155.645996 lineto
173 167.398895 lineto
186 176.925995 lineto
199 183.838989 lineto
210 187.847 lineto
221 188.769989 lineto
229 186.550995 lineto
236 181.255997 lineto
241 173.07489 lineto
243 162.309097 lineto
244 149.360809 lineto
242 134.712006 lineto
238 118.903702 lineto
233 102.509499 lineto
226 86.111099 lineto
218 70.270592 lineto
209 55.507999 lineto
199 42.277802 lineto
190 30.952499 lineto
181 21.808899 lineto
173 15.019798 lineto
165 10.651497 lineto
159 8.66719800000001 lineto
154 8.933502 lineto
151 11.233597 lineto
149 15.282299 lineto
148 20.744202 lineto
149 27.2533 lineto
151 34.432499 lineto
154 41.913502 lineto
158 49.352501 lineto
162 56.446198 lineto
167 62.942299 lineto
171 68.647263 lineto
176 73.430191 lineto
181 77.222992 lineto
185 80.016647 lineto
188 81.855087 lineto
191 82.826309 lineto
194 83.052017 lineto
196 82.676399 lineto
198 81.854668 lineto
199 80.742447 lineto
200 79.486122 lineto
201 78.215103 lineto
201 77.036011 lineto
202 76.029053 lineto
202 75.246674 lineto
203 74.71418 lineto
204 74.432182 lineto
204 74.380508 lineto
205 74.52301 lineto
206 74.812927 lineto
207 75.198318 lineto
208 75.627167 lineto
210 76.051735 lineto
211 76.432014 lineto
212 76.738083 lineto
213 76.951241 lineto
215 77.064049 lineto
216 77.079399 lineto
217 77.008774 lineto
218 76.869965 lineto
219 76.684494 lineto
220 76.475037 lineto
221 76.263077 lineto
222 76.066948 lineto
223 75.900497 lineto
224 75.772346 lineto
225 75.685722 lineto
226 75.639061 lineto
226 75.626877 lineto
227 75.641113 lineto
228 75.672546 lineto
229 75.712212 lineto
230 75.752617 lineto
231 75.788666 lineto
232 75.818115 lineto
233 75.84156 lineto
234 75.862061 lineto
235 75.884254 lineto
236 75.913254 lineto
237 75.953392 lineto
238 76.006973 lineto
239 76.073235 lineto
241 76.147598 lineto
242 76.221428 lineto
243 76.282326 lineto
244 76.314957 lineto
245 76.302483 lineto
246 76.228401 lineto
247 76.078712 lineto
248 75.844261 lineto
249 75.522949 lineto
249 75.121666 lineto
250 74.657738 lineto
251 74.159576 lineto
251 73.666519 lineto
252 73.227768 lineto
252 72.900192 lineto
252 72.745377 lineto
253 72.825798 lineto
253 73.200417 lineto
254 73.919991 lineto
255 75.022255 lineto
256 76.527718 lineto
257 78.435699 lineto
259 80.721687 lineto
261 83.335747 lineto
264 86.202599 lineto
266 89.223 lineto
270 92.276596 lineto
273 95.226997 lineto
277 97.927299 lineto
281 100.227097 lineto
284 101.980301 lineto
288 103.053101 lineto
292 103.331398 lineto
295 102.7286 lineto
298 101.190903 lineto
300 98.702698 lineto
301 95.289001 lineto
302 91.016403 lineto
302 85.991974 lineto
301 80.359451 lineto
300 74.294472 lineto
298 67.997101 lineto
295 61.683399 lineto
292 55.576099 lineto
288 49.893997 lineto
285 44.843002 lineto
281 40.606098 lineto
277 37.334801 lineto
274 35.142899 lineto
271 34.1012 lineto
269 34.234402 lineto
268 35.520401 lineto
267 37.8923 lineto
267 41.2416 lineto
267 45.423901 lineto
269 50.266399 lineto
271 55.576099 lineto
274 61.148899 lineto
278 66.778969 lineto
282 72.268417 lineto
286 77.434952 lineto
290 82.119789 lineto
294 86.193298 lineto
299 89.559502 lineto
303 92.158005 lineto
307 93.9646 lineto
310 94.990295 lineto
313 95.277901 lineto
316 94.897797 lineto
318 93.942299 lineto
320 92.520096 lineto
321 90.748802 lineto
322 88.748802 lineto
322 86.637398 lineto
323 84.523003 lineto
323 82.500381 lineto
323 80.647781 lineto
323 79.024368 lineto
323 77.669357 lineto
323 76.602234 lineto
323 75.824127 lineto
323 75.32003 lineto
324 75.061722 lineto
324 75.011139 lineto
325 75.123985 lineto
326 75.353271 lineto
327 75.652626 lineto
328 75.97921 lineto
329 76.295944 lineto
330 76.573235 lineto
331 76.789871 lineto
333 76.933311 lineto
334 76.99929 lineto
335 76.990944 lineto
336 76.917473 lineto
337 76.792534 lineto
338 76.632545 lineto
339 76.454948 lineto
340 76.276604 lineto
340 76.11248 lineto
341 75.974602 lineto
342 75.871361 lineto
343 75.80722 lineto
344 75.782776 lineto
345 75.795113 lineto
346 75.838425 lineto
347 75.904839 lineto
348 75.98526 lineto
349 76.070328 lineto
350 76.151215 lineto
351 76.220375 lineto
352 76.272087 lineto
353 76.30275 lineto
354 76.311012 lineto
355 76.297722 lineto
356 76.265617 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
356 75 moveto
56 75 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
356 75 moveto
353 78 lineto
356 75 lineto
353 72 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
56 155 moveto
56 75 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
56 155 moveto
59 152 lineto
56 155 lineto
53 152 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
136 75 moveto
134 51 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
156 75 moveto
160 155 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
176 75 moveto
172 15 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
196 75 moveto
196 82 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
256 75 moveto
252 72 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
276 75 moveto
299 98 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
296 75 moveto
269 50 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
316 75 moveto
322 82 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
56 69 moveto
56 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
76 69 moveto
76 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
96 69 moveto
96 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
116 69 moveto
116 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
136 69 moveto
136 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
156 69 moveto
156 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
176 69 moveto
176 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
196 69 moveto
196 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
216 69 moveto
216 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
236 69 moveto
236 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
256 69 moveto
256 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
276 69 moveto
276 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
296 69 moveto
296 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
316 69 moveto
316 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
336 69 moveto
336 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
251 64 [
[(10 )]
] 13 -0 0 0 false DrawText
grestore
gsave
8 28 moveto
55 75 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
9 28 moveto
16 28 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
8 28 moveto
8 35 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 41 [
[(imagi-)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
29 30 [
[(nary)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
