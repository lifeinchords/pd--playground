%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x99e4528.c
%%CreationDate: Sun Sep 17 14:01:00 2006
%%BoundingBox: 179 251 433 541
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-149 -171 translate
-1 342 moveto 299 342 lineto 299 0 lineto -1 0 lineto closepath clip newpath
gsave
54 100 moveto
54 20 lineto
254 20 lineto
254 100 lineto
54 100 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 112 [
[(output)]
] 13 -0 0 0 false DrawText
grestore
gsave
54 97.320694 moveto
55 98.365845 lineto
56 97.961533 lineto
57 94.615158 lineto
58 89.83992 lineto
59 83.469604 lineto
60 73.789307 lineto
61 65.175171 lineto
62 54.074158 lineto
63 45.50531 lineto
64 37.711243 lineto
65 29.686707 lineto
66 25.060699 lineto
67 21.924255 lineto
68 21.538452 lineto
69 21.538452 lineto
70 21.538452 lineto
71 21.538452 lineto
72 21.538452 lineto
73 21.538452 lineto
74 21.538452 lineto
75 21.538452 lineto
76 21.538452 lineto
77 21.538452 lineto
78 21.538452 lineto
79 21.538452 lineto
80 21.538452 lineto
81 21.538452 lineto
82 21.538452 lineto
83 21.538452 lineto
84 21.538452 lineto
85 21.538452 lineto
86 21.538452 lineto
87 21.538452 lineto
88 21.538452 lineto
89 21.538452 lineto
90 21.538452 lineto
91 21.538452 lineto
92 21.538452 lineto
93 21.538452 lineto
94 21.538452 lineto
95 21.538452 lineto
96 21.538452 lineto
97 21.538452 lineto
98 21.538452 lineto
99 21.538452 lineto
100 21.538452 lineto
101 21.538452 lineto
102 21.538452 lineto
103 21.538452 lineto
104 21.538452 lineto
105 21.538452 lineto
106 21.538452 lineto
107 21.538452 lineto
108 21.538452 lineto
109 21.538452 lineto
110 21.538452 lineto
111 21.538452 lineto
112 21.538452 lineto
113 21.538452 lineto
114 21.538452 lineto
115 21.538452 lineto
116 21.538452 lineto
117 21.538452 lineto
118 21.538452 lineto
119 21.538452 lineto
120 21.538452 lineto
121 21.538452 lineto
122 21.538452 lineto
123 21.538452 lineto
124 21.538452 lineto
125 21.538452 lineto
126 21.538452 lineto
127 21.538452 lineto
128 21.538452 lineto
129 21.538452 lineto
130 21.538452 lineto
131 21.538452 lineto
132 21.538452 lineto
133 21.538452 lineto
134 21.538452 lineto
135 21.538452 lineto
136 21.538452 lineto
137 21.763428 lineto
138 24.541748 lineto
139 28.910797 lineto
140 36.673004 lineto
141 44.319305 lineto
142 52.803833 lineto
143 63.894836 lineto
144 72.578156 lineto
145 82.435394 lineto
146 89.009918 lineto
147 94.033768 lineto
148 97.733231 lineto
149 98.435471 lineto
150 96.429153 lineto
151 92.62262 lineto
152 87.072388 lineto
153 78.14209 lineto
154 69.868622 lineto
155 58.839996 lineto
156 50.042236 lineto
157 39.846161 lineto
158 32.861908 lineto
159 27.328369 lineto
160 22.89328 lineto
161 21.561707 lineto
162 21.538452 lineto
163 21.538452 lineto
164 21.538452 lineto
165 21.538452 lineto
166 21.538452 lineto
167 21.538452 lineto
168 21.538452 lineto
169 21.538452 lineto
170 21.538452 lineto
171 21.538452 lineto
172 21.538452 lineto
173 21.538452 lineto
174 21.538452 lineto
175 21.538452 lineto
176 21.538452 lineto
177 21.538452 lineto
178 21.538452 lineto
179 21.538452 lineto
180 21.538452 lineto
181 21.538452 lineto
182 21.538452 lineto
183 21.538452 lineto
184 21.538452 lineto
185 21.538452 lineto
186 21.538452 lineto
187 21.538452 lineto
188 21.538452 lineto
189 21.538452 lineto
190 21.538452 lineto
191 21.538452 lineto
192 21.538452 lineto
193 21.538452 lineto
194 21.538452 lineto
195 21.538452 lineto
196 21.538452 lineto
197 21.538452 lineto
198 21.538452 lineto
199 21.538452 lineto
200 21.538452 lineto
201 21.538452 lineto
202 21.538452 lineto
203 21.538452 lineto
204 21.538452 lineto
205 21.538452 lineto
206 21.538452 lineto
207 21.538452 lineto
208 21.538452 lineto
209 21.538452 lineto
210 21.538452 lineto
211 21.538452 lineto
212 21.538452 lineto
213 21.538452 lineto
214 21.538452 lineto
215 21.538452 lineto
216 21.538452 lineto
217 21.538452 lineto
218 21.538452 lineto
219 21.538452 lineto
220 21.538452 lineto
221 21.538452 lineto
222 21.538452 lineto
223 21.538452 lineto
224 21.538452 lineto
225 21.538452 lineto
226 21.538452 lineto
227 21.538452 lineto
228 21.538452 lineto
229 21.538452 lineto
230 21.538452 lineto
231 22.96582 lineto
232 26.338989 lineto
233 33.055695 lineto
234 40.078918 lineto
235 50.305603 lineto
236 59.112305 lineto
237 67.966553 lineto
238 78.381531 lineto
239 85.648849 lineto
240 92.766617 lineto
241 96.516235 lineto
242 98.313461 lineto
243 97.679077 lineto
244 94.900314 lineto
245 88.830688 lineto
246 82.213623 lineto
247 74.409149 lineto
248 63.623688 lineto
249 54.733398 lineto
250 44.071014 lineto
251 36.457245 lineto
252 30.101929 lineto
253 24.436829 lineto
254 22.023438 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
55 310 moveto
55 250 lineto
255 250 lineto
255 310 lineto
55 310 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
56 322 [
[(phase)]
] 13 -0 0 0 false DrawText
grestore
gsave
55 278.857098 moveto
56 279.670624 lineto
57 280.755325 lineto
58 282.111198 lineto
59 283.195911 lineto
60 284.28059 lineto
61 285.636471 lineto
62 286.721176 lineto
63 288.077061 lineto
64 289.161766 lineto
65 290.246441 lineto
66 291.602325 lineto
67 292.687031 lineto
68 294.042912 lineto
69 295.127621 lineto
70 296.212322 lineto
71 297.568176 lineto
72 298.652882 lineto
73 300.008762 lineto
74 301.093472 lineto
75 302.178146 lineto
76 303.534031 lineto
77 304.618736 lineto
78 305.974617 lineto
79 307.059322 lineto
80 308.415176 lineto
81 309.500002 lineto
82 310.584707 lineto
83 311.94059 lineto
84 313.025293 lineto
85 314.381176 lineto
86 315.465883 lineto
87 316.550295 lineto
88 317.906178 lineto
89 318.990885 lineto
90 320.346767 lineto
91 321.431469 lineto
92 322.516176 lineto
93 323.872059 lineto
94 324.956766 lineto
95 326.312649 lineto
96 327.397355 lineto
97 328.753238 lineto
98 329.837941 lineto
99 330.922647 lineto
100 332.27853 lineto
101 333.363236 lineto
102 334.71912 lineto
103 335.803826 lineto
104 225.123825 lineto
105 226.479706 lineto
106 227.564415 lineto
107 228.920296 lineto
108 230.004997 lineto
109 231.089706 lineto
110 232.445587 lineto
111 233.530296 lineto
112 234.886177 lineto
113 235.970886 lineto
114 237.055588 lineto
115 238.411469 lineto
116 239.496178 lineto
117 240.852058 lineto
118 241.936768 lineto
119 243.292648 lineto
120 244.37735 lineto
121 245.462059 lineto
122 246.81794 lineto
123 247.902649 lineto
124 249.25853 lineto
125 250.343239 lineto
126 251.427849 lineto
127 252.783737 lineto
128 253.868439 lineto
129 255.224319 lineto
130 256.308998 lineto
131 257.393707 lineto
132 258.749588 lineto
133 259.83429 lineto
134 261.190178 lineto
135 262.274857 lineto
136 263.630737 lineto
137 264.715439 lineto
138 265.800148 lineto
139 267.155998 lineto
140 268.240707 lineto
141 269.596588 lineto
142 270.681297 lineto
143 271.765999 lineto
144 273.12188 lineto
145 274.206558 lineto
146 275.562439 lineto
147 276.647148 lineto
148 277.731846 lineto
149 279.087719 lineto
150 280.172424 lineto
151 281.528301 lineto
152 282.612999 lineto
153 283.697704 lineto
154 285.053589 lineto
155 286.138264 lineto
156 287.494148 lineto
157 288.578854 lineto
158 289.934734 lineto
159 291.019413 lineto
160 292.104118 lineto
161 293.459999 lineto
162 294.544708 lineto
163 295.900589 lineto
164 296.985264 lineto
165 298.069969 lineto
166 299.425854 lineto
167 300.510559 lineto
168 301.86644 lineto
169 302.951149 lineto
170 304.035824 lineto
171 305.391708 lineto
172 306.47641 lineto
173 307.832294 lineto
174 308.917 lineto
175 310.001764 lineto
176 311.357647 lineto
177 312.442352 lineto
178 313.798237 lineto
179 314.882942 lineto
180 316.238825 lineto
181 317.323532 lineto
182 318.408234 lineto
183 319.764118 lineto
184 320.848824 lineto
185 322.204706 lineto
186 323.289413 lineto
187 324.373825 lineto
188 325.729708 lineto
189 326.814411 lineto
190 328.170294 lineto
191 329.255 lineto
192 330.339706 lineto
193 331.69559 lineto
194 332.780296 lineto
195 334.136179 lineto
196 335.220882 lineto
197 224.812057 lineto
198 225.896767 lineto
199 226.981468 lineto
200 228.337349 lineto
201 229.422058 lineto
202 230.777939 lineto
203 231.862648 lineto
204 232.94735 lineto
205 234.303238 lineto
206 235.387939 lineto
207 236.74382 lineto
208 237.828529 lineto
209 238.913231 lineto
210 240.269119 lineto
211 241.353821 lineto
212 242.709709 lineto
213 243.794411 lineto
214 244.879112 lineto
215 246.235001 lineto
216 247.319702 lineto
217 248.675591 lineto
218 249.760292 lineto
219 251.116119 lineto
220 252.200821 lineto
221 253.28553 lineto
222 254.641411 lineto
223 255.72612 lineto
224 257.082001 lineto
225 258.166679 lineto
226 259.251381 lineto
227 260.607262 lineto
228 261.691971 lineto
229 263.047821 lineto
230 264.13253 lineto
231 265.217232 lineto
232 266.57312 lineto
233 267.657822 lineto
234 269.01368 lineto
235 270.098381 lineto
236 271.454262 lineto
237 272.538971 lineto
238 273.62368 lineto
239 274.97953 lineto
240 276.064232 lineto
241 277.420116 lineto
242 278.504822 lineto
243 279.58952 lineto
244 280.945393 lineto
245 282.030098 lineto
246 283.385971 lineto
247 284.470676 lineto
248 285.555382 lineto
249 286.911236 lineto
250 287.995941 lineto
251 289.351822 lineto
252 290.436531 lineto
253 291.521236 lineto
254 292.877117 lineto
255 293.961796 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 204 moveto
54 124 lineto
254 124 lineto
254 204 lineto
54 204 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 216 [
[(clipped)]
] 13 -0 0 0 false DrawText
grestore
gsave
54 161.409424 moveto
55 163.253418 lineto
56 165.712067 lineto
57 168.785385 lineto
58 171.244064 lineto
59 173.702667 lineto
60 176.776001 lineto
61 179.234665 lineto
62 182.307999 lineto
63 184.766663 lineto
64 187.225266 lineto
65 190.298599 lineto
66 192.757263 lineto
67 195.830597 lineto
68 197.333328 lineto
69 197.333328 lineto
70 197.333328 lineto
71 197.333328 lineto
72 197.333328 lineto
73 197.333328 lineto
74 197.333328 lineto
75 197.333328 lineto
76 197.333328 lineto
77 197.333328 lineto
78 197.333328 lineto
79 197.333328 lineto
80 197.333328 lineto
81 197.333328 lineto
82 197.333328 lineto
83 197.333328 lineto
84 197.333328 lineto
85 197.333328 lineto
86 197.333328 lineto
87 197.333328 lineto
88 197.333328 lineto
89 197.333328 lineto
90 197.333328 lineto
91 197.333328 lineto
92 197.333328 lineto
93 197.333328 lineto
94 197.333328 lineto
95 197.333328 lineto
96 197.333328 lineto
97 197.333328 lineto
98 197.333328 lineto
99 197.333328 lineto
100 197.333328 lineto
101 197.333328 lineto
102 197.333328 lineto
103 130.666672 lineto
104 130.666672 lineto
105 130.666672 lineto
106 130.666672 lineto
107 130.666672 lineto
108 130.666672 lineto
109 130.666672 lineto
110 130.666672 lineto
111 130.666672 lineto
112 130.666672 lineto
113 130.666672 lineto
114 130.666672 lineto
115 130.666672 lineto
116 130.666672 lineto
117 130.666672 lineto
118 130.666672 lineto
119 130.666672 lineto
120 130.666672 lineto
121 130.666672 lineto
122 130.666672 lineto
123 130.666672 lineto
124 130.666672 lineto
125 130.666672 lineto
126 130.666672 lineto
127 130.666672 lineto
128 130.666672 lineto
129 130.666672 lineto
130 130.666672 lineto
131 130.666672 lineto
132 130.666672 lineto
133 130.666672 lineto
134 130.666672 lineto
135 130.666672 lineto
136 130.666672 lineto
137 131.813675 lineto
138 134.886932 lineto
139 137.345596 lineto
140 140.41893 lineto
141 142.877594 lineto
142 145.336273 lineto
143 148.409607 lineto
144 150.868195 lineto
145 153.941528 lineto
146 156.400208 lineto
147 158.858856 lineto
148 161.932159 lineto
149 164.390823 lineto
150 167.464142 lineto
151 169.922791 lineto
152 172.38147 lineto
153 175.454803 lineto
154 177.913406 lineto
155 180.98674 lineto
156 183.445404 lineto
157 186.518738 lineto
158 188.977325 lineto
159 191.436005 lineto
160 194.509338 lineto
161 196.968002 lineto
162 197.333328 lineto
163 197.333328 lineto
164 197.333328 lineto
165 197.333328 lineto
166 197.333328 lineto
167 197.333328 lineto
168 197.333328 lineto
169 197.333328 lineto
170 197.333328 lineto
171 197.333328 lineto
172 197.333328 lineto
173 197.333328 lineto
174 197.333328 lineto
175 197.333328 lineto
176 197.333328 lineto
177 197.333328 lineto
178 197.333328 lineto
179 197.333328 lineto
180 197.333328 lineto
181 197.333328 lineto
182 197.333328 lineto
183 197.333328 lineto
184 197.333328 lineto
185 197.333328 lineto
186 197.333328 lineto
187 197.333328 lineto
188 197.333328 lineto
189 197.333328 lineto
190 197.333328 lineto
191 197.333328 lineto
192 197.333328 lineto
193 197.333328 lineto
194 197.333328 lineto
195 197.333328 lineto
196 130.666672 lineto
197 130.666672 lineto
198 130.666672 lineto
199 130.666672 lineto
200 130.666672 lineto
201 130.666672 lineto
202 130.666672 lineto
203 130.666672 lineto
204 130.666672 lineto
205 130.666672 lineto
206 130.666672 lineto
207 130.666672 lineto
208 130.666672 lineto
209 130.666672 lineto
210 130.666672 lineto
211 130.666672 lineto
212 130.666672 lineto
213 130.666672 lineto
214 130.666672 lineto
215 130.666672 lineto
216 130.666672 lineto
217 130.666672 lineto
218 130.666672 lineto
219 130.666672 lineto
220 130.666672 lineto
221 130.666672 lineto
222 130.666672 lineto
223 130.666672 lineto
224 130.666672 lineto
225 130.666672 lineto
226 130.666672 lineto
227 130.666672 lineto
228 130.666672 lineto
229 130.666672 lineto
230 130.666672 lineto
231 133.565735 lineto
232 136.024399 lineto
233 139.097672 lineto
234 141.556335 lineto
235 144.629669 lineto
236 147.088333 lineto
237 149.546997 lineto
238 152.62027 lineto
239 155.078934 lineto
240 158.152267 lineto
241 160.610931 lineto
242 163.06958 lineto
243 166.142899 lineto
244 168.601547 lineto
245 171.674866 lineto
246 174.13353 lineto
247 176.592194 lineto
248 179.665466 lineto
249 182.12413 lineto
250 185.197464 lineto
251 187.656128 lineto
252 190.114792 lineto
253 193.188126 lineto
254 195.646729 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
260 296 [
[(0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
259 269 [
[(-0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
261 94 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
260 194 [
[(0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
258 136 [
[(-0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
260 28 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 308 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
24 192 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
25 68 [
[(\050c\051)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
