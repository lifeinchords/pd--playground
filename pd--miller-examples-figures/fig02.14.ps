%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8902248.c
%%CreationDate: Sat Sep 16 16:48:57 2006
%%BoundingBox: 174 238 439 555
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-155 -186 translate
-1 373 moveto 312 373 lineto 312 0 lineto -1 0 lineto closepath clip newpath
gsave
25 251 moveto
69 251 lineto
69 234 lineto
25 234 lineto
25 251 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 235 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 251 moveto 7 0 rlineto 0 -0.999999999999986 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
62 251 moveto 7 0 rlineto 0 -0.999999999999986 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 247 [
[(hip~ 5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
89 246 [
[(high pass filter to cut DC)]
] 13 -0 0 0 false DrawText
grestore
gsave
45 165 moveto
45 35 lineto
245 35 lineto
245 165 lineto
45 165 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
46 177 [
[(sample-table)]
] 13 -0 0 0 false DrawText
grestore
gsave
45 100.029175 moveto
46 99.66745 lineto
47 100.101135 lineto
48 99.972778 lineto
49 99.955261 lineto
50 105.079681 lineto
51 97.141235 lineto
52 104.389282 lineto
53 99.574097 lineto
54 101.289368 lineto
55 100.563965 lineto
56 99.474915 lineto
57 100.772064 lineto
58 100.565918 lineto
59 81.90802 lineto
60 102.495117 lineto
61 78.170197 lineto
62 101.950592 lineto
63 77.602325 lineto
64 96.079376 lineto
65 76.235168 lineto
66 93.912933 lineto
67 76.878937 lineto
68 99.8172 lineto
69 80.844238 lineto
70 103.103821 lineto
71 93.630951 lineto
72 108.943878 lineto
73 101.157135 lineto
74 100.388947 lineto
75 101.604431 lineto
76 99.169586 lineto
77 100.818726 lineto
78 99.873596 lineto
79 102.584564 lineto
80 98.671753 lineto
81 98.274994 lineto
82 93.899323 lineto
83 103.105774 lineto
84 100.910126 lineto
85 102.677917 lineto
86 100.70401 lineto
87 100.239197 lineto
88 104.696564 lineto
89 93.183655 lineto
90 122.370453 lineto
91 105.571716 lineto
92 110.733093 lineto
93 95.974365 lineto
94 71.114624 lineto
95 109.885162 lineto
96 98.79425 lineto
97 75.929871 lineto
98 113.973022 lineto
99 100.845947 lineto
100 112.409454 lineto
101 94.212433 lineto
102 84.40509 lineto
103 116.720932 lineto
104 99.012085 lineto
105 89.714264 lineto
106 106.898041 lineto
107 97.191772 lineto
108 109.369812 lineto
109 101.001556 lineto
110 85.90448 lineto
111 112.578644 lineto
112 107.749847 lineto
113 100.740936 lineto
114 88.306244 lineto
115 93.156464 lineto
116 107.905396 lineto
117 89.128876 lineto
118 116.427292 lineto
119 100.649536 lineto
120 107.36673 lineto
121 106.190125 lineto
122 105.478363 lineto
123 107.314209 lineto
124 99.846375 lineto
125 104.727692 lineto
126 93.749573 lineto
127 83.880005 lineto
128 100.097229 lineto
129 118.426483 lineto
130 92.421326 lineto
131 108.640533 lineto
132 99.183197 lineto
133 102.226746 lineto
134 111.122009 lineto
135 106.738525 lineto
136 108.978912 lineto
137 97.123718 lineto
138 104.509857 lineto
139 91.375061 lineto
140 106.203735 lineto
141 97.431 lineto
142 97.923004 lineto
143 101.487732 lineto
144 99.280457 lineto
145 97.823822 lineto
146 99.500214 lineto
147 105.865356 lineto
148 100.511475 lineto
149 102.761536 lineto
150 108.976959 lineto
151 102.463989 lineto
152 96.590851 lineto
153 99.38739 lineto
154 99.756897 lineto
155 93.397583 lineto
156 101.839722 lineto
157 101.444946 lineto
158 103.75531 lineto
159 96.357483 lineto
160 105.980103 lineto
161 98.586182 lineto
162 96.77951 lineto
163 99.949432 lineto
164 98.304169 lineto
165 101.304932 lineto
166 96.135803 lineto
167 73.506714 lineto
168 113.360443 lineto
169 82.623657 lineto
170 96.423615 lineto
171 103.741699 lineto
172 80.081909 lineto
173 116.328125 lineto
174 88.014496 lineto
175 104.416534 lineto
176 94.212433 lineto
177 105.9198 lineto
178 100.88681 lineto
179 102.687653 lineto
180 108.953613 lineto
181 91.645325 lineto
182 70.842407 lineto
183 106.868835 lineto
184 97.434875 lineto
185 117.757492 lineto
186 105.768127 lineto
187 92.368805 lineto
188 108.502441 lineto
189 95.882965 lineto
190 100.175018 lineto
191 110.937256 lineto
192 89.716187 lineto
193 109.144226 lineto
194 97.219025 lineto
195 99.441864 lineto
196 105.221649 lineto
197 99.455475 lineto
198 101.907806 lineto
199 101.143524 lineto
200 99.062622 lineto
201 99.616882 lineto
202 102.572906 lineto
203 99.216278 lineto
204 100.464783 lineto
205 99.097626 lineto
206 100.136139 lineto
207 100.246979 lineto
208 100.367554 lineto
209 99.98056 lineto
210 99.77829 lineto
211 99.788025 lineto
212 100.476471 lineto
213 97.294861 lineto
214 98.856476 lineto
215 96.796997 lineto
216 97.02066 lineto
217 101.295197 lineto
218 101.281586 lineto
219 116.623688 lineto
220 87.147156 lineto
221 105.707825 lineto
222 94.541107 lineto
223 109.414551 lineto
224 105.213867 lineto
225 86.307037 lineto
226 98.790375 lineto
227 110.910065 lineto
228 105.036896 lineto
229 102.769318 lineto
230 92.60025 lineto
231 109.607056 lineto
232 98.529785 lineto
233 81.237061 lineto
234 106.21347 lineto
235 110.320801 lineto
236 94.519714 lineto
237 98.2789 lineto
238 104.929932 lineto
239 107.957916 lineto
240 100.488129 lineto
241 90.136261 lineto
242 106.915558 lineto
243 99.381561 lineto
244 89.696747 lineto
245 105.56781 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 274 moveto
181 274 lineto
181 257 lineto
25 257 lineto
25 274 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 258 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 274 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 270 [
[(tabread4~ sample-table)]
] 13 -0 0 0 false DrawText
grestore
gsave
25 297 moveto
62 297 lineto
62 280 lineto
25 280 lineto
25 297 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 281 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 297 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
55 297 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 293 [
[(line~)]
] 13 -0 0 0 false DrawText
grestore
gsave
25 343 moveto
62 343 lineto
62 326 lineto
25 326 lineto
25 343 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 327 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 343 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
55 343 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 339 [
[(* 441)]
] 13 -0 0 0 false DrawText
grestore
gsave
25 366 moveto
44 366 lineto
48 362 lineto
48 349 lineto
25 349 lineto
25 366 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 350 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 366 moveto 7 0 rlineto 0 -0.999999999999999 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 362 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
25 320 moveto
97 320 lineto
97 303 lineto
25 303 lineto
25 320 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 304 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 320 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
90 320 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 316 [
[(pack 0 100)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
69 29 [
[(--- 44103 samples ---)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
84 339 [
[(convert to SAMPLES)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 361 [
[(<-- read point, 0-100)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
25 234 [
[(|  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
13 221 [
[(\050OUT\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
28 257 moveto
28 251 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 280 moveto
28 274 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 326 moveto
28 320 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 349 moveto
28 343 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 303 moveto
28 297 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
