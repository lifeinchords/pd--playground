%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x894b790.c
%%CreationDate: Fri Jul  8 10:33:40 2005
%%BoundingBox: 142 347 471 445
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-192 -57 translate
-1 114 moveto 386 114 lineto 386 0 lineto -1 0 lineto closepath clip newpath
gsave
23 55 moveto
373 55 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
373 55 moveto
370 58 lineto
373 55 lineto
370 52 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
23 55 moveto
26 58 lineto
23 55 lineto
26 52 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
48 25 moveto
48 85 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
48 25 moveto
51 28 lineto
48 25 lineto
45 28 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
48 85 moveto
51 82 lineto
48 85 lineto
45 82 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
48 79 moveto
49 78.058823 lineto
50 77.117645 lineto
51 76.176468 lineto
52 75.235291 lineto
53 74.294121 lineto
54 73.352943 lineto
55 72.411766 lineto
56 71.470589 lineto
57 70.529411 lineto
58 69.588234 lineto
59 68.647057 lineto
60 67.705879 lineto
61 66.764709 lineto
62 65.823532 lineto
63 64.882355 lineto
64 63.941177 lineto
65 63 lineto
66 62.058823 lineto
67 61.117645 lineto
68 60.176472 lineto
69 59.235294 lineto
70 58.294117 lineto
71 57.35294 lineto
72 56.411766 lineto
73 55.470589 lineto
74 54.529411 lineto
75 53.588234 lineto
76 52.647057 lineto
77 51.705879 lineto
78 50.764706 lineto
79 49.823528 lineto
80 48.882351 lineto
81 47.941174 lineto
82 47 lineto
83 46.058823 lineto
84 45.117645 lineto
85 44.176468 lineto
86 43.235294 lineto
87 42.294117 lineto
88 41.35294 lineto
89 40.411766 lineto
90 39.470589 lineto
91 38.529411 lineto
92 37.588234 lineto
93 36.647057 lineto
94 35.705879 lineto
95 34.764706 lineto
96 33.823528 lineto
97 32.882353 lineto
98 31 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 31 moveto
99 31.941175 lineto
100 32.882353 lineto
101 33.823528 lineto
102 34.764706 lineto
103 35.705879 lineto
104 36.647057 lineto
105 37.588234 lineto
106 38.529411 lineto
107 39.470589 lineto
108 40.411766 lineto
109 41.352943 lineto
110 42.294117 lineto
111 43.235294 lineto
112 44.176472 lineto
113 45.117645 lineto
114 46.058823 lineto
115 47 lineto
116 47.941177 lineto
117 48.882355 lineto
118 49.823528 lineto
119 50.764706 lineto
120 51.705883 lineto
121 52.64706 lineto
122 53.588234 lineto
123 54.529411 lineto
124 55.470589 lineto
125 56.411766 lineto
126 57.352943 lineto
127 58.294121 lineto
128 59.235294 lineto
129 60.176472 lineto
130 61.117649 lineto
131 62.058826 lineto
132 63 lineto
133 63.941177 lineto
134 64.882355 lineto
135 65.823532 lineto
136 66.764709 lineto
137 67.705887 lineto
138 68.647057 lineto
139 69.588234 lineto
140 70.529411 lineto
141 71.470589 lineto
142 72.411766 lineto
143 73.352943 lineto
144 74.294121 lineto
145 75.235291 lineto
146 76.176468 lineto
147 77.117645 lineto
148 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
148 79 moveto
149 78.058823 lineto
150 77.117645 lineto
151 76.176468 lineto
152 75.235291 lineto
153 74.294121 lineto
154 73.352943 lineto
155 72.411766 lineto
156 71.470589 lineto
157 70.529411 lineto
158 69.588234 lineto
159 68.647057 lineto
160 67.705879 lineto
161 66.764709 lineto
162 65.823532 lineto
163 64.882355 lineto
164 63.941177 lineto
165 63 lineto
166 62.058823 lineto
167 61.117645 lineto
168 60.176472 lineto
169 59.235294 lineto
170 58.294117 lineto
171 57.35294 lineto
172 56.411766 lineto
173 55.470589 lineto
174 54.529411 lineto
175 53.588234 lineto
176 52.647057 lineto
177 51.705879 lineto
178 50.764706 lineto
179 49.823528 lineto
180 48.882351 lineto
181 47.941174 lineto
182 47 lineto
183 46.058823 lineto
184 45.117645 lineto
185 44.176468 lineto
186 43.235294 lineto
187 42.294117 lineto
188 41.35294 lineto
189 40.411766 lineto
190 39.470589 lineto
191 38.529411 lineto
192 37.588234 lineto
193 36.647057 lineto
194 35.705879 lineto
195 34.764706 lineto
196 33.823528 lineto
197 32.882353 lineto
198 31 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
198 31 moveto
199 31.941175 lineto
200 32.882353 lineto
201 33.823528 lineto
202 34.764706 lineto
203 35.705879 lineto
204 36.647057 lineto
205 37.588234 lineto
206 38.529411 lineto
207 39.470589 lineto
208 40.411766 lineto
209 41.352943 lineto
210 42.294117 lineto
211 43.235294 lineto
212 44.176472 lineto
213 45.117645 lineto
214 46.058823 lineto
215 47 lineto
216 47.941177 lineto
217 48.882355 lineto
218 49.823528 lineto
219 50.764706 lineto
220 51.705883 lineto
221 52.64706 lineto
222 53.588234 lineto
223 54.529411 lineto
224 55.470589 lineto
225 56.411766 lineto
226 57.352943 lineto
227 58.294121 lineto
228 59.235294 lineto
229 60.176472 lineto
230 61.117649 lineto
231 62.058826 lineto
232 63 lineto
233 63.941177 lineto
234 64.882355 lineto
235 65.823532 lineto
236 66.764709 lineto
237 67.705887 lineto
238 68.647057 lineto
239 69.588234 lineto
240 70.529411 lineto
241 71.470589 lineto
242 72.411766 lineto
243 73.352943 lineto
244 74.294121 lineto
245 75.235291 lineto
246 76.176468 lineto
247 77.117645 lineto
248 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
248 79 moveto
249 78.058823 lineto
250 77.117645 lineto
251 76.176468 lineto
252 75.235291 lineto
253 74.294121 lineto
254 73.352943 lineto
255 72.411766 lineto
256 71.470589 lineto
257 70.529411 lineto
258 69.588234 lineto
259 68.647057 lineto
260 67.705879 lineto
261 66.764709 lineto
262 65.823532 lineto
263 64.882355 lineto
264 63.941177 lineto
265 63 lineto
266 62.058823 lineto
267 61.117645 lineto
268 60.176472 lineto
269 59.235294 lineto
270 58.294117 lineto
271 57.35294 lineto
272 56.411766 lineto
273 55.470589 lineto
274 54.529411 lineto
275 53.588234 lineto
276 52.647057 lineto
277 51.705879 lineto
278 50.764706 lineto
279 49.823528 lineto
280 48.882351 lineto
281 47.941174 lineto
282 47 lineto
283 46.058823 lineto
284 45.117645 lineto
285 44.176468 lineto
286 43.235294 lineto
287 42.294117 lineto
288 41.35294 lineto
289 40.411766 lineto
290 39.470589 lineto
291 38.529411 lineto
292 37.588234 lineto
293 36.647057 lineto
294 35.705879 lineto
295 34.764706 lineto
296 33.823528 lineto
297 32.882353 lineto
298 31 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
298 31 moveto
299 31.941175 lineto
300 32.882353 lineto
301 33.823528 lineto
302 34.764706 lineto
303 35.705879 lineto
304 36.647057 lineto
305 37.588234 lineto
306 38.529411 lineto
307 39.470589 lineto
308 40.411766 lineto
309 41.352943 lineto
310 42.294117 lineto
311 43.235294 lineto
312 44.176472 lineto
313 45.117645 lineto
314 46.058823 lineto
315 47 lineto
316 47.941177 lineto
317 48.882355 lineto
318 49.823528 lineto
319 50.764706 lineto
320 51.705883 lineto
321 52.64706 lineto
322 53.588234 lineto
323 54.529411 lineto
324 55.470589 lineto
325 56.411766 lineto
326 57.352943 lineto
327 58.294121 lineto
328 59.235294 lineto
329 60.176472 lineto
330 61.117649 lineto
331 62.058826 lineto
332 63 lineto
333 63.941177 lineto
334 64.882355 lineto
335 65.823532 lineto
336 66.764709 lineto
337 67.705887 lineto
338 68.647057 lineto
339 69.588234 lineto
340 70.529411 lineto
341 71.470589 lineto
342 72.411766 lineto
343 73.352943 lineto
344 74.294121 lineto
345 75.235291 lineto
346 76.176468 lineto
347 77.117645 lineto
348 79 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
147 53 moveto
147 57 lineto
149 57 lineto
149 53 lineto
147 53 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
147 53 moveto
147 57 lineto
149 57 lineto
149 53 lineto
147 53 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
247 53 moveto
247 57 lineto
249 57 lineto
249 53 lineto
247 53 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
247 53 moveto
247 57 lineto
249 57 lineto
249 53 lineto
247 53 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
347 53 moveto
347 57 lineto
349 57 lineto
349 53 lineto
347 53 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
347 53 moveto
347 57 lineto
349 57 lineto
349 53 lineto
347 53 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
57 87 [
[(\0500,1\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
77 25 [
[(\050N/2, -1\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
148 47 [
[(N  )]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
