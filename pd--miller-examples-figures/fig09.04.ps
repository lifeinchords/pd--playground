%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8f50fb8.c
%%CreationDate: Sat Feb 26 16:35:48 2005
%%BoundingBox: 147 334 466 459
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-186 -73 translate
-1 147 moveto 374 147 lineto 374 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
135 60 [
[(100)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 62 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
236 60 [
[(200)]
] 13 -0 0 0 false DrawText
grestore
gsave
241 109 moveto
242 108.822479 lineto
243 108.291489 lineto
244 107.411751 lineto
245 106.191063 lineto
246 104.640266 lineto
247 102.773125 lineto
248 100.606216 lineto
249 98.15876 lineto
250 95.452492 lineto
251 92.511436 lineto
252 89.361679 lineto
253 86.031204 lineto
254 82.549561 lineto
255 78.947639 lineto
256 75.257423 lineto
257 71.511665 lineto
258 67.743622 lineto
259 63.986717 lineto
260 60.274323 lineto
261 56.639381 lineto
262 53.114151 lineto
263 49.729904 lineto
264 46.516724 lineto
265 43.503098 lineto
266 40.715782 lineto
267 38.17952 lineto
268 35.916824 lineto
269 33.947777 lineto
270 32.289848 lineto
271 30.957764 lineto
272 29.963348 lineto
273 29.315422 lineto
274 29.019745 lineto
275 29.078918 lineto
276 29.492447 lineto
277 30.256653 lineto
278 31.364731 lineto
279 32.80687 lineto
280 34.570251 lineto
281 36.639244 lineto
282 38.995468 lineto
283 41.618019 lineto
284 44.48362 lineto
285 47.566826 lineto
286 50.840256 lineto
287 54.274887 lineto
288 57.840225 lineto
289 61.504593 lineto
290 65.235535 lineto
291 68.999847 lineto
292 72.76416 lineto
293 76.495087 lineto
294 80.15947 lineto
295 83.724831 lineto
296 87.15947 lineto
297 90.432922 lineto
298 93.516144 lineto
299 96.381752 lineto
300 99.004311 lineto
301 101.36058 lineto
302 103.429596 lineto
303 105.193001 lineto
304 106.635162 lineto
305 107.743279 lineto
306 108.5075 lineto
307 108.921059 lineto
308 108.98027 lineto
309 108.684616 lineto
310 108.036713 lineto
311 107.04232 lineto
312 105.710281 lineto
313 104.052361 lineto
314 102.083328 lineto
315 99.820679 lineto
316 97.284431 lineto
317 94.497131 lineto
318 91.483551 lineto
319 88.270378 lineto
320 84.886124 lineto
321 81.360924 lineto
322 77.725983 lineto
323 74.01358 lineto
324 70.256683 lineto
325 66.488647 lineto
326 62.742874 lineto
327 59.052643 lineto
328 55.450714 lineto
329 51.969055 lineto
330 48.638557 lineto
331 45.488815 lineto
332 42.547707 lineto
333 39.841446 lineto
334 37.393967 lineto
335 35.227036 lineto
336 33.359863 lineto
337 31.809052 lineto
338 30.588333 lineto
339 29.708557 lineto
340 29.177551 lineto
341 29 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
141 109 moveto
142 108.822479 lineto
143 108.291489 lineto
144 107.411751 lineto
145 106.191063 lineto
146 104.640266 lineto
147 102.773125 lineto
148 100.606216 lineto
149 98.15876 lineto
150 95.452492 lineto
151 92.511436 lineto
152 89.361679 lineto
153 86.031204 lineto
154 82.549561 lineto
155 78.947639 lineto
156 75.257423 lineto
157 71.511665 lineto
158 67.743622 lineto
159 63.986717 lineto
160 60.274323 lineto
161 56.639381 lineto
162 53.114151 lineto
163 49.729904 lineto
164 46.516724 lineto
165 43.503098 lineto
166 40.715782 lineto
167 38.17952 lineto
168 35.916824 lineto
169 33.947777 lineto
170 32.289848 lineto
171 30.957764 lineto
172 29.963348 lineto
173 29.315422 lineto
174 29.019745 lineto
175 29.078918 lineto
176 29.492447 lineto
177 30.256653 lineto
178 31.364731 lineto
179 32.80687 lineto
180 34.570251 lineto
181 36.639244 lineto
182 38.995468 lineto
183 41.618019 lineto
184 44.48362 lineto
185 47.566826 lineto
186 50.840256 lineto
187 54.274887 lineto
188 57.840225 lineto
189 61.504593 lineto
190 65.235535 lineto
191 68.999847 lineto
192 72.76416 lineto
193 76.495087 lineto
194 80.15947 lineto
195 83.724831 lineto
196 87.15947 lineto
197 90.432922 lineto
198 93.516144 lineto
199 96.381752 lineto
200 99.004311 lineto
201 101.36058 lineto
202 103.429596 lineto
203 105.193001 lineto
204 106.635162 lineto
205 107.743279 lineto
206 108.5075 lineto
207 108.921059 lineto
208 108.98027 lineto
209 108.684616 lineto
210 108.036713 lineto
211 107.04232 lineto
212 105.710281 lineto
213 104.052361 lineto
214 102.083328 lineto
215 99.820679 lineto
216 97.284431 lineto
217 94.497131 lineto
218 91.483551 lineto
219 88.270378 lineto
220 84.886124 lineto
221 81.360924 lineto
222 77.725983 lineto
223 74.01358 lineto
224 70.256683 lineto
225 66.488647 lineto
226 62.742874 lineto
227 59.052643 lineto
228 55.450714 lineto
229 51.969055 lineto
230 48.638557 lineto
231 45.488815 lineto
232 42.547707 lineto
233 39.841446 lineto
234 37.393967 lineto
235 35.227036 lineto
236 33.359863 lineto
237 31.809052 lineto
238 30.588333 lineto
239 29.708557 lineto
240 29.177551 lineto
241 29 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 109 moveto
42 108.822479 lineto
43 108.291489 lineto
44 107.411751 lineto
45 106.191063 lineto
46 104.640266 lineto
47 102.773125 lineto
48 100.606216 lineto
49 98.15876 lineto
50 95.452492 lineto
51 92.511436 lineto
52 89.361679 lineto
53 86.031204 lineto
54 82.549561 lineto
55 78.947639 lineto
56 75.257423 lineto
57 71.511665 lineto
58 67.743622 lineto
59 63.986717 lineto
60 60.274323 lineto
61 56.639381 lineto
62 53.114151 lineto
63 49.729904 lineto
64 46.516724 lineto
65 43.503098 lineto
66 40.715782 lineto
67 38.17952 lineto
68 35.916824 lineto
69 33.947777 lineto
70 32.289848 lineto
71 30.957764 lineto
72 29.963348 lineto
73 29.315422 lineto
74 29.019745 lineto
75 29.078918 lineto
76 29.492447 lineto
77 30.256653 lineto
78 31.364731 lineto
79 32.80687 lineto
80 34.570251 lineto
81 36.639244 lineto
82 38.995468 lineto
83 41.618019 lineto
84 44.48362 lineto
85 47.566826 lineto
86 50.840256 lineto
87 54.274887 lineto
88 57.840225 lineto
89 61.504593 lineto
90 65.235535 lineto
91 68.999847 lineto
92 72.76416 lineto
93 76.495087 lineto
94 80.15947 lineto
95 83.724831 lineto
96 87.15947 lineto
97 90.432922 lineto
98 93.516144 lineto
99 96.381752 lineto
100 99.004311 lineto
101 101.36058 lineto
102 103.429596 lineto
103 105.193001 lineto
104 106.635162 lineto
105 107.743279 lineto
106 108.5075 lineto
107 108.921059 lineto
108 108.98027 lineto
109 108.684616 lineto
110 108.036713 lineto
111 107.04232 lineto
112 105.710281 lineto
113 104.052361 lineto
114 102.083328 lineto
115 99.820679 lineto
116 97.284431 lineto
117 94.497131 lineto
118 91.483551 lineto
119 88.270378 lineto
120 84.886124 lineto
121 81.360924 lineto
122 77.725983 lineto
123 74.01358 lineto
124 70.256683 lineto
125 66.488647 lineto
126 62.742874 lineto
127 59.052643 lineto
128 55.450714 lineto
129 51.969055 lineto
130 48.638557 lineto
131 45.488815 lineto
132 42.547707 lineto
133 39.841446 lineto
134 37.393967 lineto
135 35.227036 lineto
136 33.359863 lineto
137 31.809052 lineto
138 30.588333 lineto
139 29.708557 lineto
140 29.177551 lineto
141 29 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 19 moveto
41 119 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 19 moveto
44 22 lineto
41 19 lineto
38 22 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 119 moveto
44 116 lineto
41 119 lineto
38 116 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
16 69 moveto
316 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
316 69 moveto
313 72 lineto
316 69 lineto
313 66 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
16 69 moveto
19 72 lineto
16 69 lineto
19 66 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
241 67 moveto
241 71 lineto
243 71 lineto
243 67 lineto
241 67 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
241 67 moveto
241 71 lineto
243 71 lineto
243 67 lineto
241 67 lineto
1 setlinejoin 1 setlinecap
0 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
141 67 moveto
141 71 lineto
143 71 lineto
143 67 lineto
141 67 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
141 67 moveto
141 71 lineto
143 71 lineto
143 67 lineto
141 67 lineto
1 setlinejoin 1 setlinecap
0 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
