%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x88431b0.c
%%CreationDate: Sat Feb 12 11:29:05 2005
%%BoundingBox: 131 271 482 521
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-205 -147 translate
-1 294 moveto 412 294 lineto 412 0 lineto -1 0 lineto closepath clip newpath
gsave
115 151 moveto
122 158 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
115 158 moveto
122 151 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
36 18 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
99 152.5 moveto
99.666 153.499 99.666 154.501 99 155.5 curveto
98.333 156.5005 97.5005 157.333 96.5 158 curveto
95.4995 158.667 94.5005 158.667 93.5 158 curveto
92.4995 157.333 91.667 156.5005 91 155.5 curveto
90.333 154.4995 90.333 153.5005 91 152.5 curveto
91.667 151.4995 92.4995 150.667 93.5 150 curveto
94.5005 149.333 95.4995 149.333 96.5 150 curveto
97.5005 150.667 98.333 151.4995 99 152.5 curveto
1.000 1.000 1.000 setrgbcolor AdjustColor
eofill
99 152.5 moveto
99.666 153.499 99.666 154.501 99 155.5 curveto
98.333 156.5005 97.5005 157.333 96.5 158 curveto
95.4995 158.667 94.5005 158.667 93.5 158 curveto
92.4995 157.333 91.667 156.5005 91 155.5 curveto
90.333 154.4995 90.333 153.5005 91 152.5 curveto
91.667 151.4995 92.4995 150.667 93.5 150 curveto
94.5005 149.333 95.4995 149.333 96.5 150 curveto
97.5005 150.667 98.333 151.4995 99 152.5 curveto
1 setlinejoin 1 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
18 6 moveto
18 286 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
18 6 moveto
21 9 lineto
18 6 lineto
15 9 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
18 286 moveto
21 283 lineto
18 286 lineto
15 283 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
5 154 moveto
155 154 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
155 154 moveto
152 157 lineto
155 154 lineto
152 151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
5 154 moveto
8 157 lineto
5 154 lineto
8 151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 34 moveto
31.673 34.98515233 40.997 36.2089258315 47 37.6749955 curveto
53.003 39.1410651685 58.8305 41.0728014985 64.5 43.4760055 curveto
70.1695 45.8792095015 75.8305 48.7172016685 81.5 51.9985045 curveto
87.1695 55.2798073315 92.331 58.9541612995 97 63.0326005 curveto
101.669 67.1110397005 105.998 71.531246902 110 76.306496 curveto
114.002 81.081745098 117.665 86.139014766 121 91.493492 curveto
124.335 96.847969234 127.1655 102.4177620325 129.5 108.2195965 curveto
131.8345 114.0214309675 133.8325 119.966598349 135.5 126.072952 curveto
137.1675 132.179305651 138.1665 138.3534588175 138.5 144.6139525 curveto
138.8335 150.8744461825 138.8335 157.1255538175 138.5 163.3860475 curveto
138.1665 169.6465411825 137.1675 175.820694349 135.5 181.927048 curveto
133.8325 188.033401651 131.8345 193.9785690325 129.5 199.7804035 curveto
127.1655 205.5822379675 124.335 211.152030766 121 216.506508 curveto
117.665 221.860985234 114.002 226.918254902 110 231.693504 curveto
105.998 236.468753098 101.669 240.8889602995 97 244.9673995 curveto
92.331 249.0458387005 87.1695 252.7201926685 81.5 256.0014955 curveto
75.8305 259.2827983315 70.1695 262.120792996 64.5 264.524002 curveto
58.8305 266.927211004 53.003 268.858947334 47 270.325012 curveto
40.997 271.791076666 31.673 273.01484767 19 274 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
144 151 [
[(real)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
32 286 [
[(imaginary)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
121 148 [
[(p  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
100 148 [
[(q  )]
] 13 -0 0 0 false DrawText
grestore
gsave
109 156 moveto
109 178.011 114.8275 193.1625 126.5 201.5 curveto
138.1725 209.8375 144 216.331 144 221 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
109 156 moveto
106 159 lineto
109 156 lineto
112 159 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
193 67 moveto
393 67 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
193 187 moveto
193 67 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
193 187 moveto
196 184 lineto
193 187 lineto
190 184 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
393 187 moveto
393 67 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
393 187 moveto
396 184 lineto
393 187 lineto
390 184 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
193 180.119003 moveto
197 175.770004 lineto
201 165.895996 lineto
205 155.533005 lineto
209 146.919006 lineto
213 140.39801 lineto
217 135.609009 lineto
221 131.985992 lineto
225 129.300003 lineto
229 127.300995 lineto
233 125.674591 lineto
237 124.433289 lineto
241 123.445007 lineto
245 122.647308 lineto
249 121.995392 lineto
253 121.457306 lineto
257 121.009201 lineto
261 120.630402 lineto
265 120.309692 lineto
269 120.037689 lineto
273 119.799591 lineto
277 119.595306 lineto
281 119.421204 lineto
285 119.261505 lineto
289 119.124603 lineto
293 119.004395 lineto
297 118.896698 lineto
301 118.801605 lineto
305 118.716797 lineto
309 118.641403 lineto
313 118.573303 lineto
317 118.512497 lineto
321 118.458405 lineto
325 118.408997 lineto
329 118.36499 lineto
333 118.327209 lineto
337 118.290009 lineto
341 118.258102 lineto
345 118.229706 lineto
349 118.204498 lineto
353 118.182007 lineto
357 118.162201 lineto
361 118.144989 lineto
365 118.130096 lineto
369 118.11731 lineto
373 118.107101 lineto
377 118.098206 lineto
381 118.091492 lineto
385 118.093597 lineto
389 118.084 lineto
393 118.099701 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
388 57 moveto
389.334 58.334 390.333 59.333 391 60 curveto
391.667 60.667 392.333 60.667 393 60 curveto
393.667 59.333 394.333 58.667 395 58 curveto
395.667 57.333 396.333 57.333 397 58 curveto
397.667 58.667 398.666 59.666 400 61 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
391 52 moveto
391 59 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
396 52 moveto
396 57 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
193 61 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
287 35 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
398 121 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
144 234 [
[(1-d)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
215 61 [
[(d  )]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
