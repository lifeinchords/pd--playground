%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x84e7230.c
%%CreationDate: Wed Aug 23 08:38:31 2006
%%BoundingBox: 146 267 466 526
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-187 -152 translate
-1 305 moveto 376 305 lineto 376 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 277 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
165 157 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
282 77 [
[(\050c\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
14 287 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
7 223 [
[(-1 )]
] 13 -0 0 0 false DrawText
grestore
gsave
48 151 moveto
148 151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
148 151 moveto
145 154 lineto
148 151 lineto
145 148 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
48 151 moveto
51 154 lineto
48 151 lineto
51 148 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 116 moveto
98 196 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 116 moveto
101 119 lineto
98 116 lineto
95 119 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 196 moveto
101 193 lineto
98 196 lineto
95 193 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
68 181 moveto
69 179.033295 lineto
70 177.133301 lineto
71 175.300003 lineto
72 173.533295 lineto
73 171.833298 lineto
74 170.199997 lineto
75 168.633301 lineto
76 167.133301 lineto
77 165.699997 lineto
78 164.333298 lineto
79 163.033295 lineto
80 161.800003 lineto
81 160.633331 lineto
82 159.533325 lineto
83 158.5 lineto
84 157.533325 lineto
85 156.633331 lineto
86 155.800003 lineto
87 155.033325 lineto
88 154.333328 lineto
89 153.699997 lineto
90 153.133331 lineto
91 152.633331 lineto
92 152.199997 lineto
93 151.833328 lineto
94 151.53334 lineto
95 151.300003 lineto
96 151.133331 lineto
97 151.03334 lineto
98 151 lineto
99 151.03334 lineto
100 151.133331 lineto
101 151.300003 lineto
102 151.53334 lineto
103 151.833328 lineto
104 152.199997 lineto
105 152.633331 lineto
106 153.133331 lineto
107 153.699997 lineto
108 154.333328 lineto
109 155.033325 lineto
110 155.800003 lineto
111 156.633331 lineto
112 157.533325 lineto
113 158.5 lineto
114 159.533325 lineto
115 160.633331 lineto
116 161.800003 lineto
117 163.033295 lineto
118 164.333298 lineto
119 165.699997 lineto
120 167.133301 lineto
121 168.633301 lineto
122 170.199997 lineto
123 171.833298 lineto
124 173.533295 lineto
125 175.300003 lineto
126 177.133301 lineto
127 179.033295 lineto
128 181 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 251 moveto
28 251 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 251 moveto
355 254 lineto
358 251 lineto
355 248 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 211 moveto
28 291 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 211 moveto
31 214 lineto
28 211 lineto
25 214 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 291 moveto
31 288 lineto
28 291 lineto
25 288 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 251 moveto
29 260.380432 lineto
30 269.059814 lineto
31 278.37439 lineto
32 283.006104 lineto
33 285.41571 lineto
34 284.242706 lineto
35 278.8992 lineto
36 272.4599 lineto
37 261.560089 lineto
38 252.44632 lineto
39 243.279892 lineto
40 232.145508 lineto
41 225.407196 lineto
42 219.503098 lineto
43 217.794601 lineto
44 219.356705 lineto
45 223.275299 lineto
46 231.5867 lineto
47 239.519592 lineto
48 248.255035 lineto
49 260.019836 lineto
50 268.083191 lineto
51 276.696808 lineto
52 280.944092 lineto
53 283.083588 lineto
54 281.909607 lineto
55 276.833191 lineto
56 270.776611 lineto
57 263.292297 lineto
58 252.077271 lineto
59 243.553635 lineto
60 233.236206 lineto
61 227.021698 lineto
62 221.622604 lineto
63 220.112305 lineto
64 221.668198 lineto
65 225.381195 lineto
66 230.968796 lineto
67 240.582306 lineto
68 248.709991 lineto
69 259.620087 lineto
70 267.071198 lineto
71 274.992615 lineto
72 278.864899 lineto
73 280.747986 lineto
74 279.58429 lineto
75 276.30899 lineto
76 269.123108 lineto
77 262.153107 lineto
78 251.748077 lineto
79 243.866669 lineto
80 234.360992 lineto
81 228.663208 lineto
82 223.757095 lineto
83 222.434097 lineto
84 223.2379 lineto
85 227.466492 lineto
86 232.6828 lineto
87 241.608078 lineto
88 249.125275 lineto
89 259.181519 lineto
90 266.023987 lineto
91 273.263092 lineto
92 276.769012 lineto
93 278.339508 lineto
94 277.26709 lineto
95 274.185608 lineto
96 267.49939 lineto
97 261.049896 lineto
98 251.458786 lineto
99 244.218964 lineto
100 235.520096 lineto
101 230.331604 lineto
102 226.714905 lineto
103 224.759705 lineto
104 225.566696 lineto
105 229.531204 lineto
106 234.367401 lineto
107 242.596817 lineto
108 249.500793 lineto
109 258.704224 lineto
110 264.942413 lineto
111 270.097809 lineto
112 274.65741 lineto
113 276.02829 lineto
114 274.95929 lineto
115 272.081207 lineto
116 265.906494 lineto
117 259.98291 lineto
118 251.209427 lineto
119 244.610535 lineto
120 238.539703 lineto
121 232.026901 lineto
122 228.785995 lineto
123 227.089294 lineto
124 227.888 lineto
125 231.575302 lineto
126 236.022598 lineto
127 243.548569 lineto
128 249.836517 lineto
129 256.156189 lineto
130 263.826385 lineto
131 268.464905 lineto
132 272.530487 lineto
133 273.712494 lineto
134 272.661194 lineto
135 269.996704 lineto
136 264.344513 lineto
137 258.952637 lineto
138 253.020874 lineto
139 245.041061 lineto
140 239.578201 lineto
141 233.748108 lineto
142 230.874405 lineto
143 229.421402 lineto
144 230.201797 lineto
145 233.597702 lineto
146 237.6483 lineto
147 242.648895 lineto
148 250.132431 lineto
149 255.811722 lineto
150 262.675903 lineto
151 266.80481 lineto
152 270.387909 lineto
153 271.392303 lineto
154 270.372589 lineto
155 267.932495 lineto
156 262.813202 lineto
157 257.959198 lineto
158 252.638916 lineto
159 245.510437 lineto
160 240.651398 lineto
161 235.494705 lineto
162 232.979004 lineto
163 231.755707 lineto
164 232.506805 lineto
165 235.597992 lineto
166 239.243607 lineto
167 243.720337 lineto
168 250.388474 lineto
169 255.427902 lineto
170 261.491608 lineto
171 265.117401 lineto
172 268.23111 lineto
173 269.067596 lineto
174 268.094696 lineto
175 265.888306 lineto
176 262.605194 lineto
177 257.002533 lineto
178 252.296677 lineto
179 246.018753 lineto
180 241.759323 lineto
181 237.267197 lineto
182 235.099503 lineto
183 234.092499 lineto
184 234.802597 lineto
185 236.703201 lineto
186 240.808502 lineto
187 244.755356 lineto
188 250.604584 lineto
189 255.00499 lineto
190 260.273834 lineto
191 263.403687 lineto
192 266.060303 lineto
193 266.739685 lineto
194 266.246399 lineto
195 263.865387 lineto
196 260.976868 lineto
197 256.083054 lineto
198 251.994156 lineto
199 246.565689 lineto
200 242.901978 lineto
201 239.064499 lineto
202 237.236099 lineto
203 236.450394 lineto
204 237.0896 lineto
205 238.767899 lineto
206 242.342865 lineto
207 245.753784 lineto
208 250.780792 lineto
209 254.543106 lineto
210 259.022461 lineto
211 261.664001 lineto
212 263.477814 lineto
213 264.409088 lineto
214 263.943207 lineto
215 261.863892 lineto
216 259.378418 lineto
217 255.200958 lineto
218 251.731476 lineto
219 247.151077 lineto
220 244.078674 lineto
221 241.566833 lineto
222 239.387497 lineto
223 238.771194 lineto
224 239.366302 lineto
225 240.812805 lineto
226 243.846024 lineto
227 246.715637 lineto
228 250.917053 lineto
229 254.042206 lineto
230 256.888214 lineto
231 259.898163 lineto
232 261.362701 lineto
233 262.075714 lineto
234 261.648499 lineto
235 259.884094 lineto
236 257.81012 lineto
237 254.356277 lineto
238 251.508652 lineto
239 248.678055 lineto
240 245.289185 lineto
241 243.273926 lineto
242 241.553375 lineto
243 241.095779 lineto
244 241.632355 lineto
245 242.837158 lineto
246 245.317688 lineto
247 247.640503 lineto
248 250.161758 lineto
249 253.502563 lineto
250 255.752823 lineto
251 258.107147 lineto
252 259.231201 lineto
253 259.740417 lineto
254 259.362518 lineto
255 257.926575 lineto
256 256.272064 lineto
257 254.268234 lineto
258 251.325699 lineto
259 249.132736 lineto
260 246.533478 lineto
261 245.007477 lineto
262 243.733566 lineto
263 243.423737 lineto
264 243.88765 lineto
265 244.840408 lineto
266 246.221359 lineto
267 248.528214 lineto
268 250.431046 lineto
269 252.924316 lineto
270 254.583084 lineto
271 256.291306 lineto
272 257.08432 lineto
273 257.403931 lineto
274 257.08609 lineto
275 256.330002 lineto
276 254.764832 lineto
277 253.300888 lineto
278 251.182663 lineto
279 249.626495 lineto
280 247.811066 lineto
281 246.767303 lineto
282 245.927307 lineto
283 245.754807 lineto
284 246.131454 lineto
285 246.822403 lineto
286 247.793655 lineto
287 249.378677 lineto
288 250.660538 lineto
289 252.30751 lineto
290 253.379196 lineto
291 254.450836 lineto
292 254.922379 lineto
293 255.066452 lineto
294 254.819687 lineto
295 254.303543 lineto
296 253.288696 lineto
297 252.370285 lineto
298 251.079575 lineto
299 250.159119 lineto
300 249.121658 lineto
301 248.552841 lineto
302 248.134155 lineto
303 248.088287 lineto
304 248.261307 lineto
305 248.782562 lineto
306 249.335983 lineto
307 250.191635 lineto
308 250.850189 lineto
309 251.652344 lineto
310 252.141342 lineto
311 252.586243 lineto
312 252.745758 lineto
313 252.756195 lineto
314 252.563644 lineto
315 252.297592 lineto
316 251.843903 lineto
317 251.476608 lineto
318 251.016418 lineto
319 250.730515 lineto
320 250.465073 lineto
321 250.363724 lineto
322 250.343933 lineto
323 250.423691 lineto
324 250.538452 lineto
325 250.720459 lineto
326 250.8479 lineto
327 250.966934 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 51 moveto
28 51 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 51 moveto
355 54 lineto
358 51 lineto
355 48 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 19 moveto
28 99 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 19 moveto
31 22 lineto
28 19 lineto
25 22 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 99 moveto
31 96 lineto
28 99 lineto
25 96 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
28 51 moveto
29 53.514069 lineto
30 60.318741 lineto
31 72.410301 lineto
32 80.268204 lineto
33 84.841202 lineto
34 82.5737 lineto
35 73.238899 lineto
36 64.157898 lineto
37 54.186142 lineto
38 51.059769 lineto
39 52.702862 lineto
40 61.156898 lineto
41 69.714096 lineto
42 79.344398 lineto
43 82.5028 lineto
44 79.608498 lineto
45 72.961601 lineto
46 61.767899 lineto
47 54.76569 lineto
48 51.215282 lineto
49 53.324501 lineto
50 59.338131 lineto
51 69.866402 lineto
52 76.6185 lineto
53 80.410202 lineto
54 78.297195 lineto
55 70.067299 lineto
56 62.174698 lineto
57 55.317181 lineto
58 51.033157 lineto
59 52.584229 lineto
60 60.0158 lineto
61 67.427399 lineto
62 75.658005 lineto
63 78.258499 lineto
64 75.581497 lineto
65 69.752098 lineto
66 62.464302 lineto
67 54.1008 lineto
68 51.149834 lineto
69 53.123032 lineto
70 58.379501 lineto
71 67.446999 lineto
72 73.184402 lineto
73 76.284103 lineto
74 74.344604 lineto
75 69.3013 lineto
76 60.384178 lineto
77 54.55402 lineto
78 51.015991 lineto
79 52.453838 lineto
80 58.910179 lineto
81 65.255203 lineto
82 72.205002 lineto
83 74.314598 lineto
84 73.020996 lineto
85 66.823601 lineto
86 60.58633 lineto
87 53.520229 lineto
88 51.100418 lineto
89 52.912498 lineto
90 57.449188 lineto
91 65.161301 lineto
92 69.972603 lineto
93 72.355598 lineto
94 70.713104 lineto
95 66.3592 lineto
96 58.77803 lineto
97 53.885719 lineto
98 51.006012 lineto
99 52.313782 lineto
100 57.846539 lineto
101 63.2052 lineto
102 67.850502 lineto
103 70.672897 lineto
104 69.481499 lineto
105 64.1688 lineto
106 58.90411 lineto
107 53.017529 lineto
108 51.064217 lineto
109 52.69585 lineto
110 56.554008 lineto
111 61.4207 lineto
112 66.9907 lineto
113 68.897598 lineto
114 67.401398 lineto
115 63.697601 lineto
116 57.348671 lineto
117 53.305511 lineto
118 51.001255 lineto
119 52.166431 lineto
120 55.435982 lineto
121 61.285099 lineto
122 65.0989 lineto
123 67.3349 lineto
124 66.261803 lineto
125 61.780502 lineto
126 57.409241 lineto
127 52.586391 lineto
128 51.038677 lineto
129 51.759609 lineto
130 55.700451 lineto
131 59.714951 lineto
132 64.244598 lineto
133 65.738701 lineto
134 64.405998 lineto
135 61.310699 lineto
136 56.087879 lineto
137 52.806992 lineto
138 51.116684 lineto
139 52.014542 lineto
140 54.727379 lineto
141 59.5037 lineto
142 62.572502 lineto
143 64.303799 lineto
144 63.359001 lineto
145 59.65255 lineto
146 56.093391 lineto
147 52.992592 lineto
148 51.021503 lineto
149 51.661503 lineto
150 54.89502 lineto
151 58.136902 lineto
152 61.739799 lineto
153 62.881302 lineto
154 61.722801 lineto
155 59.191681 lineto
156 54.987221 lineto
157 52.383732 lineto
158 51.076744 lineto
159 51.861012 lineto
160 54.059799 lineto
161 57.86895 lineto
162 60.278709 lineto
163 61.5812 lineto
164 60.771362 lineto
165 57.77774 lineto
166 54.94891 lineto
167 52.514099 lineto
168 51.010685 lineto
169 51.560181 lineto
170 54.14497 lineto
171 56.694321 lineto
172 59.483139 lineto
173 60.326809 lineto
174 59.349411 lineto
175 57.333221 lineto
176 54.848049 lineto
177 52.029442 lineto
178 51.048038 lineto
179 51.708935 lineto
180 53.439709 lineto
181 56.388248 lineto
182 58.223572 lineto
183 59.167519 lineto
184 58.495842 lineto
185 56.84 lineto
186 53.96764 lineto
187 52.114159 lineto
188 51.004467 lineto
189 51.458282 lineto
190 53.45726 lineto
191 55.39576 lineto
192 57.480362 lineto
193 58.07827 lineto
194 57.641541 lineto
195 55.72908 lineto
196 53.843948 lineto
197 51.738213 lineto
198 51.02824 lineto
199 51.561806 lineto
200 52.873661 lineto
201 55.070171 lineto
202 56.41272 lineto
203 57.048321 lineto
204 56.528591 lineto
205 55.275009 lineto
206 53.141319 lineto
207 51.786366 lineto
208 51.001373 lineto
209 51.358673 lineto
210 52.83886 lineto
211 54.249142 lineto
212 55.448441 lineto
213 56.137249 lineto
214 55.786461 lineto
215 54.37215 lineto
216 53.00565 lineto
217 51.50423 lineto
218 51.015289 lineto
219 51.423264 lineto
220 52.36871 lineto
221 53.542419 lineto
222 54.852859 lineto
223 55.272678 lineto
224 54.86697 lineto
225 53.965092 lineto
226 52.462269 lineto
227 51.524448 lineto
228 51.000198 lineto
229 51.264427 lineto
230 51.990604 lineto
231 53.262211 lineto
232 54.06815 lineto
233 54.50486 lineto
234 54.239738 lineto
235 53.255058 lineto
236 52.325081 lineto
237 51.321842 lineto
238 51.007393 lineto
239 51.154041 lineto
240 51.931808 lineto
241 52.70549 lineto
242 53.549679 lineto
243 53.80267 lineto
244 53.507229 lineto
245 52.90377 lineto
246 51.922531 lineto
247 51.32246 lineto
248 51.020077 lineto
249 51.17894 lineto
250 51.645412 lineto
251 52.443192 lineto
252 52.935791 lineto
253 53.182709 lineto
254 52.998039 lineto
255 52.370789 lineto
256 51.794132 lineto
257 51.305183 lineto
258 51.003033 lineto
259 51.099617 lineto
260 51.569996 lineto
261 52.026009 lineto
262 52.508598 lineto
263 52.639999 lineto
264 52.445301 lineto
265 52.084011 lineto
266 51.652439 lineto
267 51.174564 lineto
268 51.009247 lineto
269 51.105801 lineto
270 51.366814 lineto
271 51.799942 lineto
272 52.057678 lineto
273 52.171719 lineto
274 52.0583 lineto
275 51.811684 lineto
276 51.404968 lineto
277 51.15126 lineto
278 51.000954 lineto
279 51.053902 lineto
280 51.290554 lineto
281 51.511879 lineto
282 51.735207 lineto
283 51.78606 lineto
284 51.677223 lineto
285 51.498634 lineto
286 51.293732 lineto
287 51.075108 lineto
288 51.003292 lineto
289 51.048847 lineto
290 51.161732 lineto
291 51.340237 lineto
292 51.439575 lineto
293 51.472458 lineto
294 51.416855 lineto
295 51.31181 lineto
296 51.149662 lineto
297 51.05365 lineto
298 51.000179 lineto
299 51.020203 lineto
300 51.100803 lineto
301 51.171101 lineto
302 51.234657 lineto
303 51.242229 lineto
304 51.214298 lineto
305 51.140488 lineto
306 51.079113 lineto
307 51.018669 lineto
308 51.000641 lineto
309 51.012157 lineto
310 51.03722 lineto
311 51.071892 lineto
312 51.087078 lineto
313 51.08812 lineto
314 51.069855 lineto
315 51.048107 lineto
316 51.020348 lineto
317 51.006489 lineto
318 51.000008 lineto
319 51.002075 lineto
320 51.008175 lineto
321 51.011566 lineto
322 51.012299 lineto
323 51.009491 lineto
324 51.006088 lineto
325 51.002232 lineto
326 51.00066 lineto
327 51.000031 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
124 146 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
88 186 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
59 146 [
[(-1 )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
16 86 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
