%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x94f43b8.c
%%CreationDate: Mon Dec 25 18:38:57 2006
%%BoundingBox: 150 297 463 495
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-183 -116 translate
-1 232 moveto 368 232 lineto 368 0 lineto -1 0 lineto closepath clip newpath
gsave
358 73 moveto
58 73 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 73 moveto
355 76 lineto
358 73 lineto
355 70 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
58 153 moveto
58 73 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
58 153 moveto
61 150 lineto
58 153 lineto
55 150 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
58 73.999908 moveto
59 72.72821 lineto
59 71.292007 lineto
59 69.82502 lineto
59 68.466637 lineto
59 67.34848 lineto
59 66.581398 lineto
59 66.244308 lineto
59 66.375778 lineto
60 66.96946 lineto
61 67.973717 lineto
62 69.29567 lineto
64 70.809288 lineto
66 72.366959 lineto
68 73.813293 lineto
70 75.000069 lineto
72 75.800858 lineto
74 76.123749 lineto
76 75.921143 lineto
77 75.195419 lineto
78 73.999908 lineto
79 72.434952 lineto
79 70.639343 lineto
79 68.777679 lineto
79 67.02523 lineto
78 65.550972 lineto
78 64.501091 lineto
78 63.9842 lineto
78 64.059662 lineto
78 64.730671 lineto
79 65.942192 lineto
80 67.584778 lineto
82 69.503632 lineto
84 71.512329 lineto
86 73.409912 lineto
89 75.000069 lineto
91 76.110199 lineto
93 76.608932 lineto
95 76.420097 lineto
97 75.531883 lineto
98 73.999908 lineto
99 71.94416 lineto
99 69.53936 lineto
98 66.999901 lineto
98 64.560421 lineto
97 62.4538 lineto
96 60.888599 lineto
95 60.027802 lineto
95 59.9716 lineto
95 60.7453 lineto
95 62.2939 lineto
97 64.48431 lineto
98 67.115311 lineto
101 69.933838 lineto
103 72.65744 lineto
106 75.000076 lineto
109 76.699524 lineto
112 77.54351 lineto
115 77.392288 lineto
117 76.195251 lineto
118 73.999916 lineto
118 70.95192 lineto
118 67.28582 lineto
117 63.307098 lineto
115 59.366501 lineto
113 55.829102 lineto
111 53.0401 lineto
109 51.2911 lineto
108 50.789299 lineto
107 51.632797 lineto
107 53.795097 lineto
108 57.119202 lineto
110 61.3242 lineto
113 66.022911 lineto
116 70.750183 lineto
121 75.000069 lineto
125 78.268768 lineto
130 80.099808 lineto
134 80.128273 lineto
136 78.119614 lineto
138 73.999916 lineto
138 67.874641 lineto
136 60.033501 lineto
133 50.940399 lineto
128 41.2094 lineto
121 31.566399 lineto
114 22.801201 lineto
106 15.710899 lineto
98 11.041 lineto
90 9.42720000000003 lineto
84 11.3433 lineto
80 17.058701 lineto
78 26.609699 lineto
79 39.787102 lineto
83 56.140198 lineto
90 75.000076 lineto
99 95.516701 lineto
112 116.712296 lineto
126 137.542099 lineto
142 156.962997 lineto
158 174 lineto
174 187.811996 lineto
190 197.746002 lineto
204 203.376999 lineto
217 204.537994 lineto
226 201.320999 lineto
233 194.075989 lineto
237 183.375 lineto
238 169.971405 lineto
236 154.749496 lineto
232 138.656891 lineto
226 122.641495 lineto
218 107.588898 lineto
210 94.264297 lineto
202 83.267624 lineto
195 75.000076 lineto
188 69.648178 lineto
183 67.182632 lineto
180 67.374229 lineto
178 69.823189 lineto
178 73.999924 lineto
180 79.293747 lineto
182 85.064697 lineto
186 90.695496 lineto
191 95.637802 lineto
195 99.451599 lineto
200 101.832901 lineto
203 102.628998 lineto
206 101.840401 lineto
208 99.610901 lineto
209 96.205002 lineto
209 91.977402 lineto
208 87.336098 lineto
207 82.70359 lineto
205 78.478218 lineto
203 75.000076 lineto
201 72.523956 lineto
199 71.200798 lineto
198 71.069481 lineto
198 72.058929 lineto
198 73.999924 lineto
199 76.645119 lineto
201 79.695061 lineto
204 82.82798 lineto
207 85.729996 lineto
210 88.123497 lineto
213 89.790901 lineto
215 90.5923 lineto
218 90.4748 lineto
219 89.473801 lineto
221 87.706299 lineto
221 85.356796 lineto
221 82.657471 lineto
221 79.864891 lineto
220 77.235123 lineto
219 75.000076 lineto
218 73.346619 lineto
218 72.400681 lineto
217 72.217712 lineto
217 72.779839 lineto
218 73.999924 lineto
219 75.732063 lineto
221 77.787079 lineto
223 79.951683 lineto
225 82.009163 lineto
227 83.76001 lineto
230 85.039902 lineto
232 85.7342 lineto
234 85.787399 lineto
236 85.206299 lineto
237 84.057999 lineto
238 82.461243 lineto
238 80.574532 lineto
238 78.579391 lineto
238 76.662971 lineto
238 75.000092 lineto
237 73.737015 lineto
237 72.978317 lineto
237 72.778183 lineto
237 73.136436 lineto
238 73.999931 lineto
239 75.268967 lineto
240 76.807808 lineto
242 78.458427 lineto
244 80.056061 lineto
246 81.445 lineto
248 82.493141 lineto
250 83.103958 lineto
252 83.224953 lineto
254 82.851532 lineto
255 82.026443 lineto
256 80.834671 lineto
257 79.394409 lineto
257 77.845032 lineto
257 76.333481 lineto
257 75.000092 lineto
257 73.965317 lineto
257 73.318619 lineto
257 73.110741 lineto
257 73.349503 lineto
258 73.999931 lineto
259 74.988533 lineto
260 76.210953 lineto
262 77.542603 lineto
264 78.850807 lineto
266 80.007874 lineto
267 80.902924 lineto
269 81.45224 lineto
271 81.60685 lineto
272 81.356468 lineto
274 80.729813 lineto
275 79.791122 lineto
275 78.633453 lineto
276 77.369148 lineto
276 76.11895 lineto
276 75.000092 lineto
276 74.115349 lineto
277 73.543289 lineto
277 73.331284 lineto
277 73.491409 lineto
278 73.999939 lineto
279 74.800179 lineto
280 75.808441 lineto
282 76.922462 lineto
283 78.031548 lineto
285 79.027237 lineto
287 79.813721 lineto
289 80.316742 lineto
290 80.49044 lineto
292 80.321289 lineto
293 79.82888 lineto
294 79.063568 lineto
295 78.10112 lineto
295 77.035172 lineto
296 75.967873 lineto
296 75.000092 lineto
296 74.221664 lineto
296 73.702988 lineto
297 73.48851 lineto
297 73.592873 lineto
298 73.999939 lineto
299 74.664719 lineto
300 75.51815 lineto
301 76.473991 lineto
303 77.437439 lineto
305 78.314201 lineto
306 79.019653 lineto
308 79.48674 lineto
310 79.67231 lineto
311 79.560783 lineto
312 79.165367 lineto
313 78.526421 lineto
314 77.707169 lineto
315 76.787399 lineto
315 75.85553 lineto
316 75.000099 lineto
316 74.301086 lineto
316 73.82254 lineto
317 73.606468 lineto
317 73.669174 lineto
318 73.999939 lineto
319 74.562439 lineto
320 75.298508 lineto
321 76.13398 lineto
323 76.986092 lineto
324 77.771423 lineto
326 78.414001 lineto
328 78.852478 lineto
329 79.045921 lineto
330 78.977409 lineto
332 78.655441 lineto
333 78.112862 lineto
334 77.403313 lineto
334 76.595947 lineto
335 75.768593 lineto
335 75.000099 lineto
336 74.362778 lineto
336 73.91555 lineto
337 73.698402 lineto
337 73.728729 lineto
338 73.999947 lineto
339 74.482346 lineto
340 75.126221 lineto
341 75.866859 lineto
343 76.630943 lineto
344 77.343674 lineto
346 77.935982 lineto
347 78.351128 lineto
349 78.550056 lineto
350 78.514923 lineto
351 78.25061 lineto
352 77.78405 lineto
353 77.161377 lineto
354 76.443321 lineto
355 75.699181 lineto
355 75.000099 lineto
356 74.412155 lineto
356 73.990112 lineto
357 73.772194 lineto
357 73.776604 lineto
358 73.999947 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
58 67 moveto
58 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
78 67 moveto
78 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 67 moveto
98 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
118 67 moveto
118 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 67 moveto
138 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 67 moveto
158 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
178 67 moveto
178 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
198 67 moveto
198 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
218 67 moveto
218 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
238 67 moveto
238 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
258 67 moveto
258 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
278 67 moveto
278 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
298 67 moveto
298 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
318 67 moveto
318 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
338 67 moveto
338 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 67 moveto
358 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 165 [
[(real)]
] 13 -0 0 0 false DrawText
grestore
gsave
11 26 moveto
58 73 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
12 26 moveto
19 26 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
11 26 moveto
11 33 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 63 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 61 [
[(-5 )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
258 63 [
[(5  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
346 57 [
[(k  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
25 34 [
[(imagi-)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
27 23 [
[(nary)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
