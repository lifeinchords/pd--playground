%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .xa069950.c
%%CreationDate: Wed Aug 30 14:16:11 2006
%%BoundingBox: 184 315 429 478
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-143 -95 translate
-1 191 moveto 288 191 lineto 288 0 lineto -1 0 lineto closepath clip newpath
gsave
20 125.147003 moveto
22 126.802002 lineto
24 128.373001 lineto
26 129.856995 lineto
28 131.253998 lineto
30 132.561996 lineto
32 133.774994 lineto
34 134.906006 lineto
36 135.938995 lineto
38 136.867996 lineto
40 137.723999 lineto
42 138.473007 lineto
44 139.110992 lineto
46 139.682999 lineto
48 140.141998 lineto
50 140.503998 lineto
52 140.766998 lineto
54 140.931 lineto
56 140.998001 lineto
58 140.964996 lineto
60 140.832993 lineto
62 140.604004 lineto
64 140.276993 lineto
66 139.848999 lineto
68 139.326004 lineto
70 138.718994 lineto
72 137.988007 lineto
74 137.175003 lineto
76 136.266998 lineto
78 135.266006 lineto
80 134.171005 lineto
82 132.983994 lineto
84 131.709 lineto
86 130.339005 lineto
88 128.884003 lineto
90 127.353996 lineto
92 125.714996 lineto
94 124.003998 lineto
96 122.247002 lineto
98 120.338997 lineto
100 118.388 lineto
102 116.360001 lineto
104 114.259003 lineto
106 112.084 lineto
108 109.839996 lineto
110 107.531998 lineto
112 105.150002 lineto
114 102.709 lineto
116 100.223198 lineto
118 97.646004 lineto
120 95.030197 lineto
122 92.408302 lineto
124 89.639397 lineto
126 86.871002 lineto
128 84.057198 lineto
130 81.2015 lineto
132 78.305199 lineto
134 75.372498 lineto
136 72.411797 lineto
138 69.408203 lineto
140 66.382599 lineto
142 63.356998 lineto
144 60.259201 lineto
146 57.1675 lineto
148 54.136398 lineto
150 50.939201 lineto
152 47.8088 lineto
154 44.6717 lineto
156 41.5383 lineto
158 43.610298 lineto
160 46.749001 lineto
162 49.882999 lineto
164 53.006199 lineto
166 56.118599 lineto
168 59.2029 lineto
170 62.295799 lineto
172 65.354103 lineto
174 68.3452 lineto
176 71.396004 lineto
178 74.373398 lineto
180 77.317902 lineto
182 80.226402 lineto
184 83.096397 lineto
186 85.924698 lineto
188 88.706497 lineto
190 91.445801 lineto
192 94.133003 lineto
194 96.754402 lineto
196 99.347504 lineto
198 101.870003 lineto
200 104.301003 lineto
202 106.731003 lineto
204 109.066002 lineto
206 111.333 lineto
208 113.531998 lineto
210 115.657997 lineto
212 117.710999 lineto
214 119.686996 lineto
216 121.587997 lineto
218 123.406998 lineto
220 125.139999 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
20 161 moveto
20 41 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
20 161 moveto
23 158 lineto
20 161 lineto
17 158 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
20 105.540001 moveto
22 106.620003 lineto
24 107.648003 lineto
26 108.622002 lineto
28 109.540001 lineto
30 110.403 lineto
32 111.207001 lineto
34 111.946999 lineto
36 112.636002 lineto
38 113.259003 lineto
40 113.810997 lineto
42 114.318001 lineto
44 114.751999 lineto
46 115.123001 lineto
48 115.428001 lineto
50 115.668999 lineto
52 115.845001 lineto
54 115.954002 lineto
56 115.998001 lineto
58 115.975998 lineto
60 115.889 lineto
62 115.736 lineto
64 115.516998 lineto
66 115.237 lineto
68 114.885002 lineto
70 114.473 lineto
72 113.995003 lineto
74 113.456001 lineto
76 112.852997 lineto
78 112.190002 lineto
80 111.466003 lineto
82 110.681999 lineto
84 109.838997 lineto
86 108.943001 lineto
88 107.984001 lineto
90 106.973 lineto
92 105.922997 lineto
94 104.794998 lineto
96 103.630997 lineto
98 102.418999 lineto
100 101.162003 lineto
102 99.860603 lineto
104 98.5186 lineto
106 97.139 lineto
108 95.721703 lineto
110 94.272499 lineto
112 92.800301 lineto
114 91.288803 lineto
116 89.761597 lineto
118 88.236099 lineto
120 86.6577 lineto
122 85.089699 lineto
124 83.519203 lineto
126 81.951897 lineto
128 80.394798 lineto
130 78.855698 lineto
132 77.344002 lineto
134 75.867203 lineto
136 74.438797 lineto
138 73.075104 lineto
140 71.775497 lineto
142 70.569298 lineto
144 69.479897 lineto
146 68.489601 lineto
148 67.650803 lineto
150 66.986603 lineto
152 66.459099 lineto
154 66.134201 lineto
156 66.002502 lineto
158 66.0681 lineto
160 66.328102 lineto
162 66.776604 lineto
164 67.400101 lineto
166 68.189598 lineto
168 69.122902 lineto
170 70.176399 lineto
172 71.357002 lineto
174 72.623596 lineto
176 73.941498 lineto
178 75.378403 lineto
180 76.8396 lineto
182 78.340897 lineto
184 79.871902 lineto
186 81.424103 lineto
188 82.9888 lineto
190 84.555901 lineto
192 86.128098 lineto
194 87.690598 lineto
196 89.228401 lineto
198 90.774902 lineto
200 92.287903 lineto
202 93.746696 lineto
204 95.235298 lineto
206 96.663101 lineto
208 98.056099 lineto
210 99.411301 lineto
212 100.7267 lineto
214 101.999001 lineto
216 103.223999 lineto
218 104.406998 lineto
220 105.539001 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
20 91 moveto
22 90.999496 lineto
24 90.999496 lineto
26 90.999496 lineto
28 90.999397 lineto
30 90.999496 lineto
32 90.999496 lineto
34 90.999496 lineto
36 90.999397 lineto
38 90.999496 lineto
40 90.999496 lineto
42 90.999496 lineto
44 90.999397 lineto
46 90.999496 lineto
48 90.999397 lineto
50 90.999496 lineto
52 90.999496 lineto
54 90.999397 lineto
56 90.999496 lineto
58 90.999496 lineto
60 90.999397 lineto
62 90.999496 lineto
64 90.999397 lineto
66 90.999496 lineto
68 90.999397 lineto
70 91 lineto
72 90.999496 lineto
74 90.999397 lineto
76 90.999496 lineto
78 90.999397 lineto
80 90.999496 lineto
82 90.999496 lineto
84 90.999397 lineto
86 90.999496 lineto
88 90.999397 lineto
90 90.999397 lineto
92 90.999397 lineto
94 90.999496 lineto
96 90.999397 lineto
98 90.999496 lineto
100 90.999397 lineto
102 90.999496 lineto
104 90.999496 lineto
106 90.999397 lineto
108 90.999496 lineto
110 90.999496 lineto
112 90.999397 lineto
114 90.999397 lineto
116 90.999496 lineto
118 90.999397 lineto
120 90.999901 lineto
122 90.999496 lineto
124 90.999397 lineto
126 90.999496 lineto
128 90.999496 lineto
130 90.999496 lineto
132 90.999397 lineto
134 90.999496 lineto
136 90.999397 lineto
138 90.999496 lineto
140 90.999496 lineto
142 90.999397 lineto
144 90.999496 lineto
146 90.999496 lineto
148 90.999397 lineto
150 90.999496 lineto
152 90.999397 lineto
154 90.999496 lineto
156 90.999496 lineto
158 90.999397 lineto
160 90.999496 lineto
162 90.999397 lineto
164 90.999397 lineto
166 90.999496 lineto
168 90.999496 lineto
170 90.999901 lineto
172 90.999397 lineto
174 90.999397 lineto
176 90.999496 lineto
178 90.999496 lineto
180 90.999397 lineto
182 90.999496 lineto
184 90.999496 lineto
186 90.999496 lineto
188 90.999496 lineto
190 90.999496 lineto
192 90.999496 lineto
194 90.999397 lineto
196 90.999496 lineto
198 90.999397 lineto
200 90.999496 lineto
202 90.999496 lineto
204 90.999397 lineto
206 90.999397 lineto
208 90.999496 lineto
210 90.999397 lineto
212 90.999496 lineto
214 90.999496 lineto
216 90.999397 lineto
218 90.999496 lineto
220 90.999901 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
225 93 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
225 108 [
[(0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
94 31 [
[(frequency)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
17 36 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
18 178 [
[(gain)]
] 13 -0 0 0 false DrawText
grestore
gsave
222 30 moveto
223.334 31.334 224.333 32.333 225 33 curveto
225.667 33.667 226.333 33.667 227 33 curveto
227.667 32.333 228.333 31.667 229 31 curveto
229.667 30.333 230.333 30.333 231 31 curveto
231.667 31.667 232.666 32.666 234 34 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
225 25 moveto
225 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
230 25 moveto
230 30 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
214 32 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
21 42 moveto
220 42 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
219 161 moveto
219 41 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
219 161 moveto
222 158 lineto
219 161 lineto
216 158 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
223 128 [
[(|Q|=1)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
