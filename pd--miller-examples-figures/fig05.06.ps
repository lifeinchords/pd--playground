%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8481360.c
%%CreationDate: Wed Aug 23 08:37:29 2006
%%BoundingBox: 143 267 469 526
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-191 -152 translate
-1 305 moveto 383 305 lineto 383 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
304 277 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
200 150 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
372 247 moveto
42 247 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
372 247 moveto
369 250 lineto
372 247 lineto
369 244 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 207 moveto
42 287 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 207 moveto
45 210 lineto
42 207 lineto
39 210 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 287 moveto
45 284 lineto
42 287 lineto
39 284 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 247 moveto
43 256.380417 lineto
44 265.059814 lineto
45 274.37439 lineto
46 279.006104 lineto
47 281.41571 lineto
48 280.242706 lineto
49 274.8992 lineto
50 268.4599 lineto
51 257.560089 lineto
52 248.44632 lineto
53 239.279892 lineto
54 228.145508 lineto
55 221.407196 lineto
56 215.503098 lineto
57 213.794601 lineto
58 215.356705 lineto
59 219.275299 lineto
60 227.5867 lineto
61 235.519592 lineto
62 244.255035 lineto
63 256.019852 lineto
64 264.083191 lineto
65 272.696808 lineto
66 276.944092 lineto
67 279.083588 lineto
68 277.909607 lineto
69 272.833191 lineto
70 266.776611 lineto
71 259.292297 lineto
72 248.077271 lineto
73 239.553635 lineto
74 229.236206 lineto
75 223.021698 lineto
76 217.622604 lineto
77 216.112305 lineto
78 217.668198 lineto
79 221.381195 lineto
80 226.968796 lineto
81 236.582306 lineto
82 244.709991 lineto
83 255.620102 lineto
84 263.071198 lineto
85 270.992615 lineto
86 274.864899 lineto
87 276.747986 lineto
88 275.58429 lineto
89 272.30899 lineto
90 265.123108 lineto
91 258.153107 lineto
92 247.748077 lineto
93 239.866669 lineto
94 230.360992 lineto
95 224.663208 lineto
96 219.757095 lineto
97 218.434097 lineto
98 219.2379 lineto
99 223.466492 lineto
100 228.6828 lineto
101 237.608078 lineto
102 245.125275 lineto
103 255.181534 lineto
104 262.023987 lineto
105 269.263092 lineto
106 272.769012 lineto
107 274.339508 lineto
108 273.26709 lineto
109 270.185608 lineto
110 263.49939 lineto
111 257.049896 lineto
112 247.458786 lineto
113 240.218964 lineto
114 231.520096 lineto
115 226.331604 lineto
116 222.714905 lineto
117 220.759705 lineto
118 221.566696 lineto
119 225.531204 lineto
120 230.367401 lineto
121 238.596817 lineto
122 245.500793 lineto
123 254.704208 lineto
124 260.942413 lineto
125 266.097809 lineto
126 270.65741 lineto
127 272.02829 lineto
128 270.95929 lineto
129 268.081207 lineto
130 261.906494 lineto
131 255.982925 lineto
132 247.209427 lineto
133 240.610535 lineto
134 234.539703 lineto
135 228.026901 lineto
136 224.785995 lineto
137 223.089294 lineto
138 223.888 lineto
139 227.575302 lineto
140 232.022598 lineto
141 239.548569 lineto
142 245.836517 lineto
143 252.156189 lineto
144 259.826385 lineto
145 264.464905 lineto
146 268.530487 lineto
147 269.712494 lineto
148 268.661194 lineto
149 265.996704 lineto
150 260.344513 lineto
151 254.952652 lineto
152 249.020874 lineto
153 241.041061 lineto
154 235.578201 lineto
155 229.748108 lineto
156 226.874405 lineto
157 225.421402 lineto
158 226.201797 lineto
159 229.597702 lineto
160 233.6483 lineto
161 238.648895 lineto
162 246.132431 lineto
163 251.811722 lineto
164 258.675903 lineto
165 262.80481 lineto
166 266.387909 lineto
167 267.392303 lineto
168 266.372589 lineto
169 263.932495 lineto
170 258.813202 lineto
171 253.959213 lineto
172 248.638916 lineto
173 241.510437 lineto
174 236.651398 lineto
175 231.494705 lineto
176 228.979004 lineto
177 227.755707 lineto
178 228.506805 lineto
179 231.597992 lineto
180 235.243607 lineto
181 239.720337 lineto
182 246.388474 lineto
183 251.427902 lineto
184 257.491608 lineto
185 261.117401 lineto
186 264.23111 lineto
187 265.067596 lineto
188 264.094696 lineto
189 261.888306 lineto
190 258.605194 lineto
191 253.002518 lineto
192 248.296677 lineto
193 242.018753 lineto
194 237.759323 lineto
195 233.267197 lineto
196 231.099503 lineto
197 230.092499 lineto
198 230.802597 lineto
199 232.703201 lineto
200 236.808502 lineto
201 240.755356 lineto
202 246.604584 lineto
203 251.00499 lineto
204 256.273834 lineto
205 259.403687 lineto
206 262.060303 lineto
207 262.739685 lineto
208 262.246399 lineto
209 259.865387 lineto
210 256.976883 lineto
211 252.083054 lineto
212 247.994156 lineto
213 242.565689 lineto
214 238.901978 lineto
215 235.064499 lineto
216 233.236099 lineto
217 232.450394 lineto
218 233.0896 lineto
219 234.767899 lineto
220 238.342865 lineto
221 241.753784 lineto
222 246.780792 lineto
223 250.543106 lineto
224 255.022476 lineto
225 257.664001 lineto
226 259.477814 lineto
227 260.409088 lineto
228 259.943207 lineto
229 257.863892 lineto
230 255.378418 lineto
231 251.200958 lineto
232 247.731476 lineto
233 243.151077 lineto
234 240.078674 lineto
235 237.566833 lineto
236 235.387497 lineto
237 234.771194 lineto
238 235.366302 lineto
239 236.812805 lineto
240 239.846024 lineto
241 242.715637 lineto
242 246.917053 lineto
243 250.042206 lineto
244 252.888214 lineto
245 255.898163 lineto
246 257.362701 lineto
247 258.075714 lineto
248 257.648499 lineto
249 255.884094 lineto
250 253.81012 lineto
251 250.356277 lineto
252 247.508652 lineto
253 244.678055 lineto
254 241.289185 lineto
255 239.273926 lineto
256 237.553375 lineto
257 237.095779 lineto
258 237.632355 lineto
259 238.837158 lineto
260 241.317688 lineto
261 243.640503 lineto
262 246.161758 lineto
263 249.502563 lineto
264 251.752823 lineto
265 254.107162 lineto
266 255.231201 lineto
267 255.740417 lineto
268 255.362503 lineto
269 253.92659 lineto
270 252.272064 lineto
271 250.268234 lineto
272 247.325699 lineto
273 245.132736 lineto
274 242.533478 lineto
275 241.007477 lineto
276 239.733566 lineto
277 239.423737 lineto
278 239.88765 lineto
279 240.840408 lineto
280 242.221359 lineto
281 244.528214 lineto
282 246.431046 lineto
283 248.924316 lineto
284 250.583084 lineto
285 252.291306 lineto
286 253.084305 lineto
287 253.403931 lineto
288 253.08609 lineto
289 252.330002 lineto
290 250.764832 lineto
291 249.300888 lineto
292 247.182663 lineto
293 245.626495 lineto
294 243.811066 lineto
295 242.767303 lineto
296 241.927307 lineto
297 241.754807 lineto
298 242.131454 lineto
299 242.822403 lineto
300 243.793655 lineto
301 245.378677 lineto
302 246.660538 lineto
303 248.30751 lineto
304 249.379196 lineto
305 250.450836 lineto
306 250.922379 lineto
307 251.066452 lineto
308 250.819687 lineto
309 250.303543 lineto
310 249.288696 lineto
311 248.370285 lineto
312 247.079575 lineto
313 246.159119 lineto
314 245.121658 lineto
315 244.552841 lineto
316 244.134155 lineto
317 244.088287 lineto
318 244.261307 lineto
319 244.782562 lineto
320 245.335983 lineto
321 246.191635 lineto
322 246.850189 lineto
323 247.652344 lineto
324 248.141342 lineto
325 248.586243 lineto
326 248.745758 lineto
327 248.756195 lineto
328 248.563644 lineto
329 248.297592 lineto
330 247.843903 lineto
331 247.476608 lineto
332 247.016418 lineto
333 246.730515 lineto
334 246.465073 lineto
335 246.363724 lineto
336 246.343933 lineto
337 246.423691 lineto
338 246.538452 lineto
339 246.720459 lineto
340 246.8479 lineto
341 246.966934 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
372 47 moveto
42 47 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
372 47 moveto
369 50 lineto
372 47 lineto
369 44 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 17 moveto
42 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 17 moveto
45 20 lineto
42 17 lineto
39 20 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 77 moveto
45 74 lineto
42 77 lineto
39 74 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 47 moveto
43 56.380421 lineto
44 57.5 lineto
45 57.5 lineto
46 57.5 lineto
47 57.5 lineto
48 57.5 lineto
49 57.5 lineto
50 57.5 lineto
51 57.5 lineto
52 48.44632 lineto
53 39.279892 lineto
54 36.5 lineto
55 36.5 lineto
56 36.5 lineto
57 36.5 lineto
58 36.5 lineto
59 36.5 lineto
60 36.5 lineto
61 36.5 lineto
62 44.255032 lineto
63 56.019852 lineto
64 57.5 lineto
65 57.5 lineto
66 57.5 lineto
67 57.5 lineto
68 57.5 lineto
69 57.5 lineto
70 57.5 lineto
71 57.5 lineto
72 48.077271 lineto
73 39.553638 lineto
74 36.5 lineto
75 36.5 lineto
76 36.5 lineto
77 36.5 lineto
78 36.5 lineto
79 36.5 lineto
80 36.5 lineto
81 36.582298 lineto
82 44.709991 lineto
83 55.620102 lineto
84 57.5 lineto
85 57.5 lineto
86 57.5 lineto
87 57.5 lineto
88 57.5 lineto
89 57.5 lineto
90 57.5 lineto
91 57.5 lineto
92 47.748085 lineto
93 39.866669 lineto
94 36.5 lineto
95 36.5 lineto
96 36.5 lineto
97 36.5 lineto
98 36.5 lineto
99 36.5 lineto
100 36.5 lineto
101 37.608078 lineto
102 45.125278 lineto
103 55.18153 lineto
104 57.5 lineto
105 57.5 lineto
106 57.5 lineto
107 57.5 lineto
108 57.5 lineto
109 57.5 lineto
110 57.5 lineto
111 57.0499 lineto
112 47.458786 lineto
113 40.218971 lineto
114 36.5 lineto
115 36.5 lineto
116 36.5 lineto
117 36.5 lineto
118 36.5 lineto
119 36.5 lineto
120 36.5 lineto
121 38.596809 lineto
122 45.50079 lineto
123 54.704208 lineto
124 57.5 lineto
125 57.5 lineto
126 57.5 lineto
127 57.5 lineto
128 57.5 lineto
129 57.5 lineto
130 57.5 lineto
131 55.982918 lineto
132 47.209427 lineto
133 40.610538 lineto
134 36.5 lineto
135 36.5 lineto
136 36.5 lineto
137 36.5 lineto
138 36.5 lineto
139 36.5 lineto
140 36.5 lineto
141 39.548569 lineto
142 45.836521 lineto
143 52.156189 lineto
144 57.5 lineto
145 57.5 lineto
146 57.5 lineto
147 57.5 lineto
148 57.5 lineto
149 57.5 lineto
150 57.5 lineto
151 54.952652 lineto
152 49.02087 lineto
153 41.041061 lineto
154 36.5 lineto
155 36.5 lineto
156 36.5 lineto
157 36.5 lineto
158 36.5 lineto
159 36.5 lineto
160 36.5 lineto
161 38.648899 lineto
162 46.132439 lineto
163 51.811722 lineto
164 57.5 lineto
165 57.5 lineto
166 57.5 lineto
167 57.5 lineto
168 57.5 lineto
169 57.5 lineto
170 57.5 lineto
171 53.959209 lineto
172 48.638908 lineto
173 41.510429 lineto
174 36.651398 lineto
175 36.5 lineto
176 36.5 lineto
177 36.5 lineto
178 36.5 lineto
179 36.5 lineto
180 36.5 lineto
181 39.720329 lineto
182 46.388466 lineto
183 51.427898 lineto
184 57.4916 lineto
185 57.5 lineto
186 57.5 lineto
187 57.5 lineto
188 57.5 lineto
189 57.5 lineto
190 57.5 lineto
191 53.002522 lineto
192 48.296669 lineto
193 42.018761 lineto
194 37.759331 lineto
195 36.5 lineto
196 36.5 lineto
197 36.5 lineto
198 36.5 lineto
199 36.5 lineto
200 36.808502 lineto
201 40.755348 lineto
202 46.604591 lineto
203 51.00499 lineto
204 56.273842 lineto
205 57.5 lineto
206 57.5 lineto
207 57.5 lineto
208 57.5 lineto
209 57.5 lineto
210 56.976879 lineto
211 52.08305 lineto
212 47.99416 lineto
213 42.565689 lineto
214 38.90197 lineto
215 36.5 lineto
216 36.5 lineto
217 36.5 lineto
218 36.5 lineto
219 36.5 lineto
220 38.342861 lineto
221 41.75378 lineto
222 46.7808 lineto
223 50.543098 lineto
224 55.022469 lineto
225 57.5 lineto
226 57.5 lineto
227 57.5 lineto
228 57.5 lineto
229 57.5 lineto
230 55.37841 lineto
231 51.200958 lineto
232 47.731476 lineto
233 43.151081 lineto
234 40.078671 lineto
235 37.56683 lineto
236 36.5 lineto
237 36.5 lineto
238 36.5 lineto
239 36.812801 lineto
240 39.84602 lineto
241 42.715641 lineto
242 46.917053 lineto
243 50.042198 lineto
244 52.888222 lineto
245 55.89817 lineto
246 57.362701 lineto
247 57.5 lineto
248 57.5 lineto
249 55.88409 lineto
250 53.81012 lineto
251 50.35627 lineto
252 47.508652 lineto
253 44.678059 lineto
254 41.289188 lineto
255 39.27393 lineto
256 37.553379 lineto
257 37.095779 lineto
258 37.632351 lineto
259 38.837158 lineto
260 41.317688 lineto
261 43.640511 lineto
262 46.161766 lineto
263 49.50256 lineto
264 51.752831 lineto
265 54.107159 lineto
266 55.231201 lineto
267 55.740421 lineto
268 55.362511 lineto
269 53.92659 lineto
270 52.27206 lineto
271 50.268242 lineto
272 47.325699 lineto
273 45.13274 lineto
274 42.53347 lineto
275 41.007469 lineto
276 39.733559 lineto
277 39.423729 lineto
278 39.88765 lineto
279 40.840408 lineto
280 42.221359 lineto
281 44.528221 lineto
282 46.431049 lineto
283 48.924309 lineto
284 50.58308 lineto
285 52.291309 lineto
286 53.084309 lineto
287 53.403931 lineto
288 53.08609 lineto
289 52.330002 lineto
290 50.764832 lineto
291 49.300888 lineto
292 47.182663 lineto
293 45.626492 lineto
294 43.811058 lineto
295 42.7673 lineto
296 41.927311 lineto
297 41.754799 lineto
298 42.131451 lineto
299 42.822411 lineto
300 43.793659 lineto
301 45.37867 lineto
302 46.660534 lineto
303 48.30751 lineto
304 49.379189 lineto
305 50.45084 lineto
306 50.922379 lineto
307 51.066452 lineto
308 50.819679 lineto
309 50.303539 lineto
310 49.2887 lineto
311 48.370289 lineto
312 47.079567 lineto
313 46.159115 lineto
314 45.121658 lineto
315 44.552841 lineto
316 44.134159 lineto
317 44.088291 lineto
318 44.261311 lineto
319 44.78257 lineto
320 45.335991 lineto
321 46.191631 lineto
322 46.850189 lineto
323 47.652348 lineto
324 48.141338 lineto
325 48.586239 lineto
326 48.745758 lineto
327 48.756191 lineto
328 48.563641 lineto
329 48.297588 lineto
330 47.843906 lineto
331 47.476601 lineto
332 47.016422 lineto
333 46.730515 lineto
334 46.465069 lineto
335 46.36372 lineto
336 46.343941 lineto
337 46.423691 lineto
338 46.538452 lineto
339 46.720459 lineto
340 46.8479 lineto
341 46.96693 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 147 moveto
182 147 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
182 147 moveto
179 150 lineto
182 147 lineto
179 144 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42 147 moveto
45 150 lineto
42 147 lineto
45 144 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
112 117 moveto
112 177 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
112 117 moveto
115 120 lineto
112 117 lineto
109 120 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
112 177 moveto
115 174 lineto
112 177 lineto
109 174 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
297 77 [
[(\050c\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
13 60 [
[(0.3)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
6 40 [
[(-0.3)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 282 [
[(1  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
18 222 [
[(-1 )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
167 170 [
[(0.3)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
28 131 [
[(-0.3)]
] 13 -0 0 0 false DrawText
grestore
gsave
63 127 moveto
64 127 lineto
65 127 lineto
66 127 lineto
67 127 lineto
68 127 lineto
69 127 lineto
70 127 lineto
71 127 lineto
72 127 lineto
73 127 lineto
74 127 lineto
75 127 lineto
76 127 lineto
77 127 lineto
78 127 lineto
79 127 lineto
80 127 lineto
81 127 lineto
82 127 lineto
83 127 lineto
84 127 lineto
85 127 lineto
86 127 lineto
87 127 lineto
88 127 lineto
89 127 lineto
90 127 lineto
91 127 lineto
92 127 lineto
93 127 lineto
94 128 lineto
95 129 lineto
96 130 lineto
97 131 lineto
98 132 lineto
99 133 lineto
100 134 lineto
101 135 lineto
102 136 lineto
103 137 lineto
104 138 lineto
105 139 lineto
106 140 lineto
107 141 lineto
108 142 lineto
109 143 lineto
110 144 lineto
111 145 lineto
112 146 lineto
113 147 lineto
114 148 lineto
115 149 lineto
116 150 lineto
117 151 lineto
118 152 lineto
119 153 lineto
120 154 lineto
121 155 lineto
122 156 lineto
123 157 lineto
124 158 lineto
125 159 lineto
126 160 lineto
127 161 lineto
128 162 lineto
129 163 lineto
130 164 lineto
131 165 lineto
132 166 lineto
133 167 lineto
134 167 lineto
135 167 lineto
136 167 lineto
137 167 lineto
138 167 lineto
139 167 lineto
140 167 lineto
141 167 lineto
142 167 lineto
143 167 lineto
144 167 lineto
145 167 lineto
146 167 lineto
147 167 lineto
148 167 lineto
149 167 lineto
150 167 lineto
151 167 lineto
152 167 lineto
153 167 lineto
154 167 lineto
155 167 lineto
156 167 lineto
157 167 lineto
158 167 lineto
159 167 lineto
160 167 lineto
161 167 lineto
162 167 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
