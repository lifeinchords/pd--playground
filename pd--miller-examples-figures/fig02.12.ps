%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x9abf1d0.c
%%CreationDate: Sun Aug 27 16:03:09 2006
%%BoundingBox: 123 321 490 471
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-215 -88 translate
-1 176 moveto 432 176 lineto 432 0 lineto -1 0 lineto closepath clip newpath
gsave
19 151 moveto
38 151 lineto
42 147 lineto
42 134 lineto
19 134 lineto
19 151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 135 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 151 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
21 147 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
19 124 moveto
49 124 lineto
49 107 lineto
19 107 lineto
19 124 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 108 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 124 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
21 120 [
[(mtof)]
] 13 -0 0 0 false DrawText
grestore
gsave
19 97 moveto
38 97 lineto
42 93 lineto
42 80 lineto
19 80 lineto
19 97 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 81 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 97 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
21 93 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
19 71 moveto
133 71 lineto
133 54 lineto
19 54 lineto
19 71 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 55 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
19 71 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
126 71 moveto 7 0 rlineto 0 -1 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
21 67 [
[(tabosc4~ table10)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
6 42 [
[(\050OUT\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 54 [
[(|  )]
] 13 -0 0 0 false DrawText
grestore
gsave
22 134 moveto
22 124 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
22 107 moveto
22 97 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
22 80 moveto
22 71 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 152 moveto
161 22 lineto
419 22 lineto
419 152 lineto
161 152 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
162 164 [
[(table10)]
] 13 -0 0 0 false DrawText
grestore
gsave
161 87 moveto
162 87 lineto
163 87 lineto
164 87 lineto
165 87 lineto
166 87 lineto
167 87 lineto
168 87 lineto
169 87 lineto
170 87 lineto
171 87 lineto
172 87 lineto
173 87 lineto
174 87 lineto
175 87 lineto
176 87 lineto
177 87 lineto
178 87 lineto
179 87 lineto
180 87 lineto
181 87 lineto
182 87 lineto
183 87 lineto
184 87 lineto
185 87 lineto
186 87 lineto
187 87 lineto
188 87 lineto
189 87 lineto
190 87 lineto
191 87 lineto
192 87 lineto
193 87 lineto
194 126 lineto
195 126 lineto
196 126 lineto
197 126 lineto
198 126 lineto
199 126.99998 lineto
200 87 lineto
201 87 lineto
202 87 lineto
203 87 lineto
204 87 lineto
205 87 lineto
206 87 lineto
207 87 lineto
208 87 lineto
209 87 lineto
210 87 lineto
211 87 lineto
212 87 lineto
213 87 lineto
214 87 lineto
215 87 lineto
216 87 lineto
217 87 lineto
218 87 lineto
219 87 lineto
220 87 lineto
221 87 lineto
222 87 lineto
223 87 lineto
224 87 lineto
225 57.000015 lineto
226 57.000015 lineto
227 57.000015 lineto
228 57.000015 lineto
229 57.000015 lineto
230 57.000015 lineto
231 57.000015 lineto
232 87 lineto
233 87 lineto
234 87 lineto
235 87 lineto
236 87 lineto
237 87 lineto
238 87 lineto
239 87 lineto
240 87 lineto
241 87 lineto
242 87 lineto
243 87 lineto
244 87 lineto
245 87 lineto
246 87 lineto
247 87 lineto
248 87 lineto
249 87 lineto
250 87 lineto
251 87 lineto
252 87 lineto
253 87 lineto
254 87 lineto
255 87 lineto
256 87 lineto
257 87 lineto
258 87 lineto
259 87 lineto
260 87 lineto
261 87 lineto
262 87 lineto
263 87 lineto
264 87 lineto
265 87 lineto
266 87 lineto
267 87 lineto
268 87 lineto
269 87 lineto
270 87 lineto
271 87 lineto
272 87 lineto
273 87 lineto
274 87 lineto
275 87 lineto
276 87 lineto
277 87 lineto
278 87 lineto
279 87 lineto
280 87 lineto
281 87 lineto
282 87 lineto
283 87 lineto
284 87 lineto
285 87 lineto
286 87 lineto
287 87 lineto
288 87 lineto
289 87 lineto
290 87 lineto
291 87 lineto
292 87 lineto
293 87 lineto
294 87 lineto
295 87 lineto
296 87 lineto
297 87 lineto
298 87 lineto
299 126.99998 lineto
300 126.99998 lineto
301 126.99998 lineto
302 128.000025 lineto
303 128.000025 lineto
304 128.000025 lineto
305 129.000005 lineto
306 87 lineto
307 54.99999 lineto
308 54.99999 lineto
309 54.99999 lineto
310 55.99997 lineto
311 55.99997 lineto
312 87 lineto
313 87 lineto
314 87 lineto
315 87 lineto
316 87 lineto
317 87 lineto
318 87 lineto
319 87 lineto
320 87 lineto
321 87 lineto
322 87 lineto
323 87 lineto
324 87 lineto
325 87 lineto
326 87 lineto
327 87 lineto
328 87 lineto
329 87 lineto
330 87 lineto
331 87 lineto
332 87 lineto
333 87 lineto
334 87 lineto
335 87 lineto
336 87 lineto
337 87 lineto
338 87 lineto
339 87 lineto
340 87 lineto
341 87 lineto
342 87 lineto
343 87 lineto
344 87 lineto
345 87 lineto
346 87 lineto
347 87 lineto
348 87 lineto
349 87 lineto
350 87 lineto
351 87 lineto
352 87 lineto
353 87 lineto
354 87 lineto
355 87 lineto
356 87 lineto
357 87 lineto
358 87 lineto
359 87 lineto
360 87 lineto
361 87 lineto
362 123.999975 lineto
363 125.00002 lineto
364 125.00002 lineto
365 125.00002 lineto
366 125.00002 lineto
367 87 lineto
368 87 lineto
369 87 lineto
370 87 lineto
371 87 lineto
372 87 lineto
373 87 lineto
374 87 lineto
375 87 lineto
376 87 lineto
377 87 lineto
378 87 lineto
379 87 lineto
380 87 lineto
381 87 lineto
382 87 lineto
383 87 lineto
384 87 lineto
385 87 lineto
386 87 lineto
387 87 lineto
388 87 lineto
389 87 lineto
390 87 lineto
391 87 lineto
392 87 lineto
393 87 lineto
394 87 lineto
395 87 lineto
396 87 lineto
397 87 lineto
398 87 lineto
399 87 lineto
400 87 lineto
401 87 lineto
402 87 lineto
403 87 lineto
404 87 lineto
405 87 lineto
406 87 lineto
407 87 lineto
408 87 lineto
409 87 lineto
410 87 lineto
411 87 lineto
412 87 lineto
413 87 lineto
414 87 lineto
415 87 lineto
416 87 lineto
417 87 lineto
418 87 lineto
419 87 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
