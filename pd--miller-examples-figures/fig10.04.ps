%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8eb8700.c
%%CreationDate: Wed Jul  6 11:32:07 2005
%%BoundingBox: 143 352 470 440
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-191 -51 translate
-1 102 moveto 384 102 lineto 384 0 lineto -1 0 lineto closepath clip newpath
gsave
14 56 moveto
364 56 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
364 56 moveto
361 59 lineto
364 56 lineto
361 53 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
14 56 moveto
17 59 lineto
14 56 lineto
17 53 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 16 moveto
39 96 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 16 moveto
42 19 lineto
39 16 lineto
36 19 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 96 moveto
42 93 lineto
39 96 lineto
36 93 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 76 moveto
40 74.812004 lineto
41 73.647995 lineto
42 72.507996 lineto
43 71.391998 lineto
44 70.299995 lineto
45 69.232002 lineto
46 68.188004 lineto
47 67.167999 lineto
48 66.171997 lineto
49 65.199997 lineto
50 64.251999 lineto
51 63.327999 lineto
52 62.428001 lineto
53 61.552002 lineto
54 60.699997 lineto
55 59.872002 lineto
56 59.068001 lineto
57 58.287998 lineto
58 57.532001 lineto
59 56.799999 lineto
60 56.092003 lineto
61 55.408001 lineto
62 54.747997 lineto
63 54.112 lineto
64 53.5 lineto
65 52.911999 lineto
66 52.348 lineto
67 51.807999 lineto
68 51.292 lineto
69 50.799999 lineto
70 50.332001 lineto
71 49.888 lineto
72 49.468002 lineto
73 49.071999 lineto
74 48.700001 lineto
75 48.351997 lineto
76 48.028 lineto
77 47.728001 lineto
78 47.452 lineto
79 47.200001 lineto
80 46.972 lineto
81 46.768002 lineto
82 46.587997 lineto
83 46.431999 lineto
84 46.299999 lineto
85 46.192001 lineto
86 46.108002 lineto
87 46.048 lineto
88 46.012001 lineto
89 46 lineto
90 46.012001 lineto
91 46.048 lineto
92 46.108002 lineto
93 46.192001 lineto
94 46.299999 lineto
95 46.431999 lineto
96 46.587997 lineto
97 46.767998 lineto
98 46.972 lineto
99 47.200001 lineto
100 47.452 lineto
101 47.728001 lineto
102 48.028 lineto
103 48.351997 lineto
104 48.699997 lineto
105 49.071999 lineto
106 49.467999 lineto
107 49.887997 lineto
108 50.332001 lineto
109 50.799999 lineto
110 51.292 lineto
111 51.808002 lineto
112 52.348 lineto
113 52.911999 lineto
114 53.5 lineto
115 54.112 lineto
116 54.747997 lineto
117 55.407997 lineto
118 56.092003 lineto
119 56.799999 lineto
120 57.532001 lineto
121 58.287998 lineto
122 59.067997 lineto
123 59.871998 lineto
124 60.699997 lineto
125 61.551998 lineto
126 62.427994 lineto
127 63.327999 lineto
128 64.251999 lineto
129 65.199997 lineto
130 66.172005 lineto
131 67.167999 lineto
132 68.188004 lineto
133 69.232002 lineto
134 70.299995 lineto
135 71.391998 lineto
136 72.508003 lineto
137 73.648003 lineto
138 74.812004 lineto
139 77.211998 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
139 76 moveto
140 74.812004 lineto
141 73.647995 lineto
142 72.507996 lineto
143 71.391998 lineto
144 70.299995 lineto
145 69.232002 lineto
146 68.188004 lineto
147 67.167999 lineto
148 66.171997 lineto
149 65.199997 lineto
150 64.251999 lineto
151 63.327999 lineto
152 62.428001 lineto
153 61.552002 lineto
154 60.699997 lineto
155 59.872002 lineto
156 59.068001 lineto
157 58.287998 lineto
158 57.532001 lineto
159 56.799999 lineto
160 56.092003 lineto
161 55.408001 lineto
162 54.747997 lineto
163 54.112 lineto
164 53.5 lineto
165 52.911999 lineto
166 52.348 lineto
167 51.807999 lineto
168 51.292 lineto
169 50.799999 lineto
170 50.332001 lineto
171 49.888 lineto
172 49.468002 lineto
173 49.071999 lineto
174 48.700001 lineto
175 48.351997 lineto
176 48.028 lineto
177 47.728001 lineto
178 47.452 lineto
179 47.200001 lineto
180 46.972 lineto
181 46.768002 lineto
182 46.587997 lineto
183 46.431999 lineto
184 46.299999 lineto
185 46.192001 lineto
186 46.108002 lineto
187 46.048 lineto
188 46.012001 lineto
189 46 lineto
190 46.012001 lineto
191 46.048 lineto
192 46.108002 lineto
193 46.192001 lineto
194 46.299999 lineto
195 46.431999 lineto
196 46.587997 lineto
197 46.767998 lineto
198 46.972 lineto
199 47.200001 lineto
200 47.452 lineto
201 47.728001 lineto
202 48.028 lineto
203 48.351997 lineto
204 48.699997 lineto
205 49.071999 lineto
206 49.467999 lineto
207 49.887997 lineto
208 50.332001 lineto
209 50.799999 lineto
210 51.292 lineto
211 51.808002 lineto
212 52.348 lineto
213 52.911999 lineto
214 53.5 lineto
215 54.112 lineto
216 54.747997 lineto
217 55.407997 lineto
218 56.092003 lineto
219 56.799999 lineto
220 57.532001 lineto
221 58.287998 lineto
222 59.067997 lineto
223 59.871998 lineto
224 60.699997 lineto
225 61.551998 lineto
226 62.427994 lineto
227 63.327999 lineto
228 64.251999 lineto
229 65.199997 lineto
230 66.172005 lineto
231 67.167999 lineto
232 68.188004 lineto
233 69.232002 lineto
234 70.299995 lineto
235 71.391998 lineto
236 72.508003 lineto
237 73.648003 lineto
238 74.812004 lineto
239 77.211998 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
239 76 moveto
240 74.812004 lineto
241 73.647995 lineto
242 72.507996 lineto
243 71.391998 lineto
244 70.299995 lineto
245 69.232002 lineto
246 68.188004 lineto
247 67.167999 lineto
248 66.171997 lineto
249 65.199997 lineto
250 64.251999 lineto
251 63.327999 lineto
252 62.428001 lineto
253 61.552002 lineto
254 60.699997 lineto
255 59.872002 lineto
256 59.068001 lineto
257 58.287998 lineto
258 57.532001 lineto
259 56.799999 lineto
260 56.092003 lineto
261 55.408001 lineto
262 54.747997 lineto
263 54.112 lineto
264 53.5 lineto
265 52.911999 lineto
266 52.348 lineto
267 51.807999 lineto
268 51.292 lineto
269 50.799999 lineto
270 50.332001 lineto
271 49.888 lineto
272 49.468002 lineto
273 49.071999 lineto
274 48.700001 lineto
275 48.351997 lineto
276 48.028 lineto
277 47.728001 lineto
278 47.452 lineto
279 47.200001 lineto
280 46.972 lineto
281 46.768002 lineto
282 46.587997 lineto
283 46.431999 lineto
284 46.299999 lineto
285 46.192001 lineto
286 46.108002 lineto
287 46.048 lineto
288 46.012001 lineto
289 46 lineto
290 46.012001 lineto
291 46.048 lineto
292 46.108002 lineto
293 46.192001 lineto
294 46.299999 lineto
295 46.431999 lineto
296 46.587997 lineto
297 46.767998 lineto
298 46.972 lineto
299 47.200001 lineto
300 47.452 lineto
301 47.728001 lineto
302 48.028 lineto
303 48.351997 lineto
304 48.699997 lineto
305 49.071999 lineto
306 49.467999 lineto
307 49.887997 lineto
308 50.332001 lineto
309 50.799999 lineto
310 51.292 lineto
311 51.808002 lineto
312 52.348 lineto
313 52.911999 lineto
314 53.5 lineto
315 54.112 lineto
316 54.747997 lineto
317 55.407997 lineto
318 56.092003 lineto
319 56.799999 lineto
320 57.532001 lineto
321 58.287998 lineto
322 59.067997 lineto
323 59.871998 lineto
324 60.699997 lineto
325 61.551998 lineto
326 62.427994 lineto
327 63.327999 lineto
328 64.251999 lineto
329 65.199997 lineto
330 66.172005 lineto
331 67.167999 lineto
332 68.188004 lineto
333 69.232002 lineto
334 70.299995 lineto
335 71.391998 lineto
336 72.508003 lineto
337 73.648003 lineto
338 74.812004 lineto
339 77.211998 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
138 54 moveto
138 58 lineto
140 58 lineto
140 54 lineto
138 54 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
138 54 moveto
138 58 lineto
140 58 lineto
140 54 lineto
138 54 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
238 54 moveto
238 58 lineto
240 58 lineto
240 54 lineto
238 54 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
238 54 moveto
238 58 lineto
240 58 lineto
240 54 lineto
238 54 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
338 54 moveto
338 58 lineto
340 58 lineto
340 54 lineto
338 54 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
338 54 moveto
338 58 lineto
340 58 lineto
340 54 lineto
338 54 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 50 [
[(N  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 79 [
[(1/12)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
86 33 [
[(\050N/2, -1/24\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
88 44 moveto
88 48 lineto
90 48 lineto
90 44 lineto
88 44 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
88 44 moveto
88 48 lineto
90 48 lineto
90 44 lineto
88 44 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
