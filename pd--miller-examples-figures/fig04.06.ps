%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x8481488.c
%%CreationDate: Wed Aug 23 08:35:52 2006
%%BoundingBox: 190 341 422 451
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-135 -64 translate
-1 128 moveto 272 128 lineto 272 0 lineto -1 0 lineto closepath clip newpath
gsave
35 25 moveto
36 25 lineto
37 25 lineto
38 25 lineto
39 25 lineto
40 25 lineto
41 25 lineto
42 25 lineto
43 25 lineto
44 25 lineto
45 25 lineto
46 25 lineto
47 25 lineto
48 25 lineto
49 25 lineto
50 25 lineto
51 25 lineto
52 25 lineto
53 25 lineto
54 25 lineto
55 25 lineto
56 25 lineto
57 25 lineto
58 25 lineto
59 25 lineto
60 25 lineto
61 25 lineto
62 25 lineto
63 25 lineto
64 25 lineto
65 25 lineto
66 25 lineto
67 25 lineto
68 25 lineto
69 25 lineto
70 25 lineto
71 25 lineto
72 25 lineto
73 25 lineto
74 25 lineto
75 25 lineto
76 25 lineto
77 25 lineto
78 25 lineto
79 25 lineto
80 25 lineto
81 25 lineto
82 25 lineto
83 25 lineto
84 25 lineto
85 25 lineto
86 25 lineto
87 25 lineto
88 25 lineto
89 25 lineto
90 25 lineto
91 25 lineto
92 25 lineto
93 25 lineto
94 25 lineto
95 25 lineto
96 25 lineto
97 25 lineto
98 25 lineto
99 25 lineto
100 25 lineto
101 25 lineto
102 25 lineto
103 25 lineto
104 25 lineto
105 25 lineto
106 25 lineto
107 25 lineto
108 25 lineto
109 25 lineto
110 25 lineto
111 25 lineto
112 25 lineto
113 25 lineto
114 25 lineto
115 25 lineto
116 38.857201 lineto
117 38.651501 lineto
118 38.445702 lineto
119 38.171299 lineto
120 37.9655 lineto
121 37.691101 lineto
122 37.485298 lineto
123 37.210999 lineto
124 37.005199 lineto
125 36.730801 lineto
126 36.525002 lineto
127 36.319199 lineto
128 36.0448 lineto
129 35.8391 lineto
130 35.564701 lineto
131 35.358902 lineto
132 35.084499 lineto
133 34.878731 lineto
134 34.604351 lineto
135 34.398571 lineto
136 34.19278 lineto
137 33.9184 lineto
138 33.71262 lineto
139 33.43824 lineto
140 33.23246 lineto
141 32.95808 lineto
142 32.752289 lineto
143 32.477909 lineto
144 32.272129 lineto
145 32.066339 lineto
146 31.79196 lineto
147 31.58618 lineto
148 31.3118 lineto
149 31.10601 lineto
150 30.831631 lineto
151 30.625851 lineto
152 30.351471 lineto
153 30.145679 lineto
154 29.939899 lineto
155 29.66552 lineto
156 29.45973 lineto
157 29.18535 lineto
158 28.97957 lineto
159 28.7052 lineto
160 28.49942 lineto
161 28.22504 lineto
162 28.01926 lineto
163 27.744881 lineto
164 27.539089 lineto
165 27.333309 lineto
166 27.058929 lineto
167 26.85313 lineto
168 26.578751 lineto
169 26.372971 lineto
170 26.098591 lineto
171 25.892805 lineto
172 25.618425 lineto
173 25.41264 lineto
174 25.206856 lineto
175 25 lineto
176 25 lineto
177 25 lineto
178 25 lineto
179 25 lineto
180 25 lineto
181 25 lineto
182 25 lineto
183 25 lineto
184 25 lineto
185 25 lineto
186 25 lineto
187 25 lineto
188 25 lineto
189 25 lineto
190 25 lineto
191 25 lineto
192 25 lineto
193 25 lineto
194 25 lineto
195 25 lineto
196 25 lineto
197 25 lineto
198 25 lineto
199 25 lineto
200 25 lineto
201 25 lineto
202 25 lineto
203 25 lineto
204 25 lineto
205 25 lineto
206 25 lineto
207 25 lineto
208 25 lineto
209 25 lineto
210 25 lineto
211 25 lineto
212 25 lineto
213 25 lineto
214 25 lineto
215 25 lineto
216 25 lineto
217 25 lineto
218 25 lineto
219 25 lineto
220 25 lineto
221 25 lineto
222 25 lineto
223 25 lineto
224 25 lineto
225 25 lineto
226 25 lineto
227 25 lineto
228 25 lineto
229 25 lineto
230 25 lineto
231 25 lineto
232 25 lineto
233 25 lineto
234 25 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
34 77 moveto
35 80.711853 lineto
36 84.326897 lineto
37 88.827896 lineto
38 91.867798 lineto
39 95.347702 lineto
40 97.455902 lineto
41 99.514801 lineto
42 100.454803 lineto
43 100.872002 lineto
44 100.555099 lineto
45 99.709999 lineto
46 97.805 lineto
47 95.8405 lineto
48 92.5989 lineto
49 89.776497 lineto
50 85.619217 lineto
51 82.299789 lineto
52 77.750259 lineto
53 74.346359 lineto
54 71.034767 lineto
55 66.890099 lineto
56 64.073502 lineto
57 60.822998 lineto
58 58.8311 lineto
59 56.848602 lineto
60 55.904198 lineto
61 55.399902 lineto
62 55.593498 lineto
63 56.2672 lineto
64 57.876301 lineto
65 59.575199 lineto
66 62.415802 lineto
67 64.91 lineto
68 68.608231 lineto
69 71.577019 lineto
70 75.664803 lineto
71 78.736969 lineto
72 81.73735 lineto
73 85.510918 lineto
74 88.090202 lineto
75 91.088501 lineto
76 92.944702 lineto
77 94.824097 lineto
78 95.751198 lineto
79 96.312202 lineto
80 96.221298 lineto
81 95.698502 lineto
82 94.3592 lineto
83 92.908699 lineto
84 90.450798 lineto
85 88.273102 lineto
86 85.02327 lineto
87 82.401222 lineto
88 78.77459 lineto
89 76.03759 lineto
90 73.354942 lineto
91 69.965729 lineto
92 67.63726 lineto
93 64.912701 lineto
94 63.210201 lineto
95 61.461098 lineto
96 60.5732 lineto
97 59.983498 lineto
98 59.993599 lineto
99 60.387199 lineto
100 61.482601 lineto
101 62.7019 lineto
102 64.798 lineto
103 66.671402 lineto
104 69.484192 lineto
105 71.764877 lineto
106 74.932381 lineto
107 77.331841 lineto
108 79.691208 lineto
109 82.683617 lineto
110 84.748886 lineto
111 87.179398 lineto
112 88.710098 lineto
113 90.302299 lineto
114 77 lineto
115 84.123077 lineto
116 89.069801 lineto
117 93.399498 lineto
118 97.872002 lineto
119 100.053604 lineto
120 101.218903 lineto
121 100.744598 lineto
122 98.377098 lineto
123 95.422401 lineto
124 90.194199 lineto
125 85.557831 lineto
126 80.557373 lineto
127 73.741287 lineto
128 68.833679 lineto
129 63.001801 lineto
130 59.4259 lineto
131 56.031601 lineto
132 54.662201 lineto
133 54.509701 lineto
134 55.644199 lineto
135 57.782799 lineto
136 61.9972 lineto
137 65.974304 lineto
138 71.994293 lineto
139 76.763268 lineto
140 83.026848 lineto
141 87.364502 lineto
142 92.283096 lineto
143 95.1035 lineto
144 97.035202 lineto
145 98.091995 lineto
146 97.709297 lineto
147 95.6866 lineto
148 93.141701 lineto
149 88.624603 lineto
150 84.612213 lineto
151 78.80159 lineto
152 74.370819 lineto
153 70.112343 lineto
154 65.046402 lineto
155 61.934601 lineto
156 58.970802 lineto
157 57.762901 lineto
158 57.596199 lineto
159 58.548401 lineto
160 61.149101 lineto
161 63.965599 lineto
162 68.605858 lineto
163 72.526863 lineto
164 76.615303 lineto
165 81.988068 lineto
166 85.711304 lineto
167 89.937401 lineto
168 92.365501 lineto
169 94.409897 lineto
170 94.965797 lineto
171 94.372696 lineto
172 92.967697 lineto
173 90.821701 lineto
174 87.003998 lineto
175 83.60955 lineto
176 78.691696 lineto
177 74.940628 lineto
178 70.194817 lineto
179 67.043648 lineto
180 63.661598 lineto
181 61.887001 lineto
182 60.853302 lineto
183 60.6898 lineto
184 61.472599 lineto
185 63.6334 lineto
186 65.979698 lineto
187 69.848587 lineto
188 73.118561 lineto
189 77.666832 lineto
190 81.007042 lineto
191 84.110512 lineto
192 87.633499 lineto
193 89.658897 lineto
194 91.368896 lineto
195 91.841499 lineto
196 91.368202 lineto
197 90.220901 lineto
198 87.7565 lineto
199 85.332909 lineto
200 82.550407 lineto
201 78.521439 lineto
202 75.450623 lineto
203 71.568558 lineto
204 68.992897 lineto
205 66.229904 lineto
206 64.7798 lineto
207 63.790501 lineto
208 63.789902 lineto
209 64.4161 lineto
210 66.152603 lineto
211 68.038658 lineto
212 71.146019 lineto
213 73.769211 lineto
214 77.412621 lineto
215 80.084068 lineto
216 83.325737 lineto
217 85.371689 lineto
218 86.984146 lineto
219 88.343796 lineto
220 88.7201 lineto
221 88.348999 lineto
222 87.446701 lineto
223 85.511467 lineto
224 83.611816 lineto
225 80.666512 lineto
226 78.290932 lineto
227 75.900703 lineto
228 72.887192 lineto
229 70.893738 lineto
230 68.762222 lineto
231 67.648003 lineto
232 66.892502 lineto
233 66.895699 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
201 19 [
[(time)]
] 13 -0 0 0 false DrawText
grestore
gsave
24 76 moveto
244 76 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
244 76 moveto
239 79 lineto
244 76 lineto
239 73 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 76 moveto
27 79 lineto
24 76 lineto
27 73 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 24 moveto
244 24 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
244 24 moveto
239 27 lineto
244 24 lineto
239 21 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24 24 moveto
27 27 lineto
24 24 lineto
27 21 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
