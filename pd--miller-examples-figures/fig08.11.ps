%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x96f8a20.c
%%CreationDate: Sat Sep  2 14:42:27 2006
%%BoundingBox: 145 300 468 492
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-189 -113 translate
-1 226 moveto 380 226 lineto 380 0 lineto -1 0 lineto closepath clip newpath
gsave
158 65 moveto
358 65 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 185 moveto
158 65 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 185 moveto
161 182 lineto
158 185 lineto
155 182 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 185 moveto
358 65 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
358 185 moveto
361 182 lineto
358 185 lineto
355 182 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 100.611 moveto
160 101.985199 lineto
162 103.458099 lineto
164 105.0317 lineto
166 106.7062 lineto
168 108.477203 lineto
170 110.332802 lineto
172 112.266197 lineto
174 114.242798 lineto
176 116.216003 lineto
178 118.1754 lineto
180 120.018303 lineto
182 121.654198 lineto
184 123.086998 lineto
186 124.149696 lineto
188 124.801804 lineto
190 124.997597 lineto
192 124.722801 lineto
194 123.997299 lineto
196 122.873398 lineto
198 121.417503 lineto
200 119.717201 lineto
202 117.860802 lineto
204 115.894699 lineto
206 113.906998 lineto
208 111.965897 lineto
210 110.016197 lineto
212 108.171303 lineto
214 106.416199 lineto
216 104.758904 lineto
218 103.202202 lineto
220 101.746002 lineto
222 100.389503 lineto
224 99.123398 lineto
226 97.948097 lineto
228 96.862503 lineto
230 95.843399 lineto
232 94.903297 lineto
234 94.0448 lineto
236 93.222099 lineto
238 92.471703 lineto
240 91.775703 lineto
242 91.130302 lineto
244 90.531898 lineto
246 89.977203 lineto
248 89.463898 lineto
250 88.987801 lineto
252 88.547798 lineto
254 88.143097 lineto
256 87.766296 lineto
258 87.421097 lineto
260 87.107605 lineto
262 86.812897 lineto
264 86.547302 lineto
266 86.305901 lineto
268 86.087402 lineto
270 85.890999 lineto
272 85.715805 lineto
274 85.561203 lineto
276 85.425995 lineto
278 85.310303 lineto
280 85.214096 lineto
282 85.134995 lineto
284 85.074501 lineto
286 85.033295 lineto
288 85.007202 lineto
290 84.999901 lineto
292 85.010101 lineto
294 85.037903 lineto
296 85.083496 lineto
298 85.146896 lineto
300 85.2286 lineto
302 85.328598 lineto
304 85.447495 lineto
306 85.585403 lineto
308 85.744095 lineto
310 85.922699 lineto
312 86.120697 lineto
314 86.345001 lineto
316 86.5905 lineto
318 86.854095 lineto
320 87.155304 lineto
322 87.477295 lineto
324 87.827499 lineto
326 88.207703 lineto
328 88.619705 lineto
330 89.065598 lineto
332 89.546097 lineto
334 90.068001 lineto
336 90.629799 lineto
338 91.230797 lineto
340 91.889702 lineto
342 92.594597 lineto
344 93.339798 lineto
346 94.174004 lineto
348 95.057297 lineto
350 96.009399 lineto
352 97.035301 lineto
354 98.140701 lineto
356 99.330803 lineto
358 100.6082 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 99.593803 moveto
160 101.514999 lineto
162 103.721603 lineto
164 106.212097 lineto
166 109.002098 lineto
168 112.334999 lineto
170 116.125999 lineto
172 120.539803 lineto
174 125.704002 lineto
176 131.766998 lineto
178 138.871002 lineto
180 147.102997 lineto
182 156.427994 lineto
184 166.360992 lineto
186 175.705002 lineto
188 182.686005 lineto
190 184.977997 lineto
192 181.839996 lineto
194 174.291 lineto
196 164.677002 lineto
198 154.791 lineto
200 145.640991 lineto
202 137.59201 lineto
204 130.673004 lineto
206 124.7827 lineto
208 119.745399 lineto
210 115.444702 lineto
212 111.774101 lineto
214 108.550301 lineto
216 105.767799 lineto
218 103.374001 lineto
220 101.186798 lineto
222 99.2883 lineto
224 97.599503 lineto
226 96.090897 lineto
228 94.737297 lineto
230 93.5187 lineto
232 92.419197 lineto
234 91.420898 lineto
236 90.515198 lineto
238 89.695702 lineto
240 88.938797 lineto
242 88.251801 lineto
244 87.635803 lineto
246 87.047897 lineto
248 86.5205 lineto
250 86.037003 lineto
252 85.593796 lineto
254 85.187401 lineto
256 84.8153 lineto
258 84.475296 lineto
260 84.163696 lineto
262 83.880203 lineto
264 83.625198 lineto
266 83.389198 lineto
268 83.178802 lineto
270 82.994797 lineto
272 82.8228 lineto
274 82.675095 lineto
276 82.5466 lineto
278 82.436798 lineto
280 82.344894 lineto
282 82.2705 lineto
284 82.213402 lineto
286 82.173096 lineto
288 82.149597 lineto
290 82.143097 lineto
292 82.152405 lineto
294 82.178696 lineto
296 82.223297 lineto
298 82.281898 lineto
300 82.3591 lineto
302 82.453995 lineto
304 82.567001 lineto
306 82.6987 lineto
308 82.8498 lineto
310 83.020599 lineto
312 83.212799 lineto
314 83.427002 lineto
316 83.664001 lineto
318 83.926201 lineto
320 84.214294 lineto
322 84.528999 lineto
324 84.875801 lineto
326 85.253601 lineto
328 85.666 lineto
330 86.115799 lineto
332 86.606499 lineto
334 87.141701 lineto
336 87.725494 lineto
338 88.363701 lineto
340 89.061096 lineto
342 89.822998 lineto
344 90.6623 lineto
346 91.582703 lineto
348 92.588501 lineto
350 93.715897 lineto
352 94.956001 lineto
354 96.304001 lineto
356 97.871498 lineto
358 99.593697 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
158 95 moveto
160 94.999702 lineto
162 94.999702 lineto
164 94.999702 lineto
166 94.999702 lineto
168 94.999702 lineto
170 94.999702 lineto
172 94.999702 lineto
174 94.999702 lineto
176 94.999702 lineto
178 94.999702 lineto
180 94.999702 lineto
182 94.999702 lineto
184 94.999702 lineto
186 94.999702 lineto
188 94.999702 lineto
190 94.999702 lineto
192 94.999702 lineto
194 94.999702 lineto
196 94.999702 lineto
198 94.999702 lineto
200 94.999702 lineto
202 94.999702 lineto
204 94.999702 lineto
206 94.999702 lineto
208 95 lineto
210 94.999702 lineto
212 94.999702 lineto
214 94.999702 lineto
216 94.999702 lineto
218 94.999702 lineto
220 94.999702 lineto
222 94.999702 lineto
224 94.999702 lineto
226 94.999702 lineto
228 94.999702 lineto
230 94.999702 lineto
232 94.999702 lineto
234 94.999702 lineto
236 94.999702 lineto
238 94.999702 lineto
240 94.999702 lineto
242 94.999702 lineto
244 94.999702 lineto
246 94.999702 lineto
248 94.999702 lineto
250 94.999702 lineto
252 94.999702 lineto
254 94.999702 lineto
256 94.999702 lineto
258 94.999901 lineto
260 94.999702 lineto
262 94.999702 lineto
264 94.999702 lineto
266 94.999702 lineto
268 94.999702 lineto
270 94.999702 lineto
272 94.999702 lineto
274 94.999702 lineto
276 94.999702 lineto
278 94.999702 lineto
280 94.999702 lineto
282 94.999702 lineto
284 94.999702 lineto
286 94.999702 lineto
288 94.999702 lineto
290 94.999702 lineto
292 94.999702 lineto
294 94.999702 lineto
296 94.999702 lineto
298 94.999702 lineto
300 94.999702 lineto
302 94.999702 lineto
304 94.999702 lineto
306 94.999702 lineto
308 94.999901 lineto
310 94.999702 lineto
312 94.999702 lineto
314 94.999702 lineto
316 94.999702 lineto
318 94.999702 lineto
320 94.999702 lineto
322 94.999702 lineto
324 94.999702 lineto
326 94.999702 lineto
328 94.999702 lineto
330 94.999702 lineto
332 94.999702 lineto
334 94.999702 lineto
336 94.999702 lineto
338 94.999702 lineto
340 94.999702 lineto
342 94.999702 lineto
344 94.999702 lineto
346 94.999702 lineto
348 94.999702 lineto
350 94.999702 lineto
352 94.999702 lineto
354 94.999702 lineto
356 94.999702 lineto
358 94.999901 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
224 59 [
[(frequency)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
156 59 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
357 55 moveto
358.334 56.334 359.333 57.333 360 58 curveto
360.667 58.667 361.333 58.667 362 58 curveto
362.667 57.333 363.333 56.667 364 56 curveto
364.667 55.333 365.333 55.333 366 56 curveto
366.667 56.667 367.666 57.666 369 59 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
360 50 moveto
360 57 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
365 50 moveto
365 55 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
350 58 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
51 27 [
[(\050a\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
251 26 [
[(\050b\051)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
217 176 [
[(0.5)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
188 107 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
192 132 moveto
192 139.337 197.661 144.998 209 149 curveto
220.339 153.002 226 157.331 226 162 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
192 132 moveto
189 135 lineto
192 132 lineto
195 135 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 181 moveto
59 194 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
59 181 moveto
62 184 lineto
59 181 lineto
56 184 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
54 209 [
[(IN )]
] 13 -0 0 0 false DrawText
grestore
gsave
60 148 moveto
60 162 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
60 148 moveto
63 151 lineto
60 148 lineto
57 151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
35 77 moveto
62 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
94 159 [
[(OUT)]
] 13 -0 0 0 false DrawText
grestore
gsave
61 77 moveto
61 83 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
89 155 moveto
61 155 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
89 155 moveto
86 158 lineto
89 155 lineto
86 152 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
87 96 [
[(P  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
179 202 [
[(|P|=0.75)]
] 13 -0 0 0 false DrawText
grestore
gsave
54 115 moveto
54 147 lineto
68 147 lineto
68 115 lineto
54 115 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
72 93 moveto
75 96 lineto
72 93 lineto
75 90 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
72 93 moveto
84 93 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 104 moveto
61 114 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 104 moveto
64 107 lineto
61 104 lineto
58 107 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
71 136 [
[(d=1)]
] 13 -0 0 0 false DrawText
grestore
gsave
51 84 moveto
51 103 lineto
71 103 lineto
71 84 lineto
51 84 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
57 89 moveto
66 98 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
57 98 moveto
66 89 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
60 166 moveto
60 176 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
55 171 moveto
65 171 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
51 163 moveto
51 180 lineto
69 180 lineto
69 163 lineto
51 163 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
34 76 moveto
34 173 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
49 173 moveto
34 173 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
49 173 moveto
46 176 lineto
49 173 lineto
46 170 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
