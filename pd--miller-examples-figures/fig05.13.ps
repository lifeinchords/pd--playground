%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: msp
%%Title: Window .x813bcf0.c
%%CreationDate: Fri Aug  8 13:30:31 2003
%%BoundingBox: 162 228 450 565
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: tkCanvPs.c,v 1.7 2000/04/25 01:03:06 hobbs Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-169 -198 translate
-1 397 moveto 339 397 lineto 339 0 lineto -1 0 lineto closepath clip newpath
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
303 293 [
(0  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
303 374 [
(1  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
304 184 [
(0  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
302 263 [
(0.25)
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
74 56 [
(1  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
108 56 [
(2  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 56 [
(3  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
172 56 [
(4  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
205 56 [
(5  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
236 56 [
(6  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
269 56 [
(7  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 56 [
(0  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
85 42 [
(-- partial number --)
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
303 68 [
(0  )
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
302 146 [
(0.25)
] 13 -0 0 0 false DrawText
grestore
gsave
41 267 moveto
41 177 lineto
298 177 lineto
298 267 lineto
41 267 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 180.383459 moveto
43 180.383459 lineto
45 252.098569 lineto
47 180.38346 lineto
49 180.38346 lineto
51 180.38346 lineto
53 180.38346 lineto
55 180.38346 lineto
57 180.38346 lineto
59 180.38346 lineto
61 180.383461 lineto
63 180.383461 lineto
65 180.383461 lineto
67 180.383462 lineto
69 180.383463 lineto
71 180.383464 lineto
73 180.383467 lineto
75 180.383476 lineto
77 242.310948 lineto
79 180.383478 lineto
81 180.383469 lineto
83 180.383466 lineto
86 180.383464 lineto
88 180.383464 lineto
90 180.383463 lineto
92 180.383463 lineto
94 180.383463 lineto
96 180.383463 lineto
98 180.383464 lineto
100 180.383464 lineto
102 180.383465 lineto
104 180.383467 lineto
106 180.383471 lineto
108 180.383483 lineto
110 221.134489 lineto
112 180.383483 lineto
114 180.383471 lineto
116 180.383467 lineto
118 180.383465 lineto
120 180.383464 lineto
122 180.383464 lineto
124 180.383463 lineto
126 180.383463 lineto
128 180.383463 lineto
130 180.383463 lineto
132 180.383464 lineto
134 180.383465 lineto
136 180.383466 lineto
138 180.383469 lineto
140 180.383478 lineto
142 201.559502 lineto
144 180.383477 lineto
146 180.383468 lineto
148 180.383465 lineto
150 180.383463 lineto
152 180.383463 lineto
154 180.383462 lineto
156 180.383462 lineto
158 180.383461 lineto
160 180.383462 lineto
162 180.383461 lineto
164 180.383462 lineto
166 180.383462 lineto
168 180.383463 lineto
171 180.383465 lineto
173 180.38347 lineto
175 189.370101 lineto
177 180.383469 lineto
179 180.383464 lineto
181 180.383462 lineto
183 180.383461 lineto
185 180.383461 lineto
187 180.38346 lineto
189 180.38346 lineto
191 180.38346 lineto
193 180.38346 lineto
195 180.38346 lineto
197 180.38346 lineto
199 180.38346 lineto
201 180.383461 lineto
203 180.383461 lineto
205 180.383464 lineto
207 183.586046 lineto
209 180.383463 lineto
211 180.383461 lineto
213 180.38346 lineto
215 180.38346 lineto
217 180.383459 lineto
219 180.383459 lineto
221 180.383459 lineto
223 180.383459 lineto
225 180.383459 lineto
227 180.383459 lineto
229 180.383459 lineto
231 180.383459 lineto
233 180.383459 lineto
235 180.38346 lineto
237 180.383461 lineto
239 181.363567 lineto
241 180.38346 lineto
243 180.38346 lineto
245 180.383459 lineto
247 180.383459 lineto
249 180.383459 lineto
251 180.383459 lineto
253 180.383459 lineto
256 180.383459 lineto
258 180.383459 lineto
260 180.383459 lineto
262 180.383459 lineto
264 180.383459 lineto
266 180.383459 lineto
268 180.383459 lineto
270 180.383459 lineto
272 180.645706 lineto
274 180.383459 lineto
276 180.383459 lineto
278 180.383459 lineto
280 180.383459 lineto
282 180.383459 lineto
284 180.383459 lineto
286 180.383459 lineto
288 180.383459 lineto
290 180.383459 lineto
292 180.383459 lineto
294 180.383459 lineto
296 180.383459 lineto
298 180.383459 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
36 180.383459 [
(a=4)
] 10 -1 0.5 0 false DrawText
grestore
gsave
41 152 moveto
41 62 lineto
298 62 lineto
298 152 lineto
41 152 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
41 65.383459 moveto
43 65.383459 lineto
45 100.218072 lineto
47 65.38346 lineto
49 65.383459 lineto
51 65.38346 lineto
53 65.38346 lineto
55 65.38346 lineto
57 65.38346 lineto
59 65.38346 lineto
61 65.38346 lineto
63 65.38346 lineto
65 65.38346 lineto
67 65.38346 lineto
69 65.383461 lineto
71 65.383462 lineto
73 65.383463 lineto
75 65.383468 lineto
77 99.111553 lineto
79 65.383469 lineto
81 65.383464 lineto
83 65.383463 lineto
86 65.383462 lineto
88 65.383462 lineto
90 65.383462 lineto
92 65.383461 lineto
94 65.383461 lineto
96 65.383461 lineto
98 65.383462 lineto
100 65.383462 lineto
102 65.383463 lineto
104 65.383465 lineto
106 65.383467 lineto
108 65.383477 lineto
110 96.002737 lineto
112 65.383477 lineto
114 65.383468 lineto
116 65.383466 lineto
118 65.383464 lineto
120 65.383464 lineto
122 65.383463 lineto
124 65.383463 lineto
126 65.383463 lineto
128 65.383463 lineto
130 65.383463 lineto
132 65.383464 lineto
134 65.383465 lineto
136 65.383467 lineto
138 65.38347 lineto
140 65.383482 lineto
142 91.457263 lineto
144 65.383482 lineto
146 65.383471 lineto
148 65.383467 lineto
150 65.383465 lineto
152 65.383465 lineto
154 65.383464 lineto
156 65.383463 lineto
158 65.383463 lineto
160 65.383463 lineto
162 65.383464 lineto
164 65.383465 lineto
166 65.383465 lineto
168 65.383467 lineto
171 65.383471 lineto
173 65.383484 lineto
175 86.224841 lineto
177 65.383484 lineto
179 65.383471 lineto
181 65.383468 lineto
183 65.383466 lineto
185 65.383465 lineto
187 65.383464 lineto
189 65.383463 lineto
191 65.383463 lineto
193 65.383463 lineto
195 65.383464 lineto
197 65.383464 lineto
199 65.383465 lineto
201 65.383467 lineto
203 65.38347 lineto
205 65.383482 lineto
207 81.035929 lineto
209 65.383482 lineto
211 65.38347 lineto
213 65.383467 lineto
215 65.383465 lineto
217 65.383464 lineto
219 65.383463 lineto
221 65.383463 lineto
223 65.383463 lineto
225 65.383463 lineto
227 65.383463 lineto
229 65.383464 lineto
231 65.383464 lineto
233 65.383466 lineto
235 65.383469 lineto
237 65.383479 lineto
239 76.441833 lineto
241 65.383478 lineto
243 65.383469 lineto
245 65.383466 lineto
247 65.383464 lineto
249 65.383463 lineto
251 65.383462 lineto
253 65.383462 lineto
256 65.383462 lineto
258 65.383462 lineto
260 65.383462 lineto
262 65.383463 lineto
264 65.383463 lineto
266 65.383464 lineto
268 65.383466 lineto
270 65.383474 lineto
272 72.742692 lineto
274 65.383474 lineto
276 65.383466 lineto
278 65.383464 lineto
280 65.383463 lineto
282 65.383462 lineto
284 65.383462 lineto
286 65.383461 lineto
288 65.383461 lineto
290 65.383461 lineto
292 65.383461 lineto
294 65.383462 lineto
296 65.383462 lineto
298 65.383463 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
36 65.383459 [
(a=16)
] 10 -1 0.5 0 false DrawText
grestore
gsave
40 377 moveto
40 287 lineto
297 287 lineto
297 377 lineto
40 377 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
40 290.2287 moveto
42 290.2287 lineto
44 372.883408 lineto
46 290.2287 lineto
48 290.2287 lineto
50 290.2287 lineto
52 290.2287 lineto
54 290.2287 lineto
56 290.2287 lineto
58 290.2287 lineto
60 290.2287 lineto
62 290.2287 lineto
64 290.2287 lineto
66 290.2287 lineto
68 290.2287 lineto
70 290.2287 lineto
72 290.2287 lineto
74 290.2287 lineto
76 290.2287 lineto
78 290.2287 lineto
80 290.2287 lineto
82 290.2287 lineto
85 290.2287 lineto
87 290.2287 lineto
89 290.2287 lineto
91 290.2287 lineto
93 290.2287 lineto
95 290.2287 lineto
97 290.2287 lineto
99 290.2287 lineto
101 290.2287 lineto
103 290.2287 lineto
105 290.2287 lineto
107 290.2287 lineto
109 290.2287 lineto
111 290.2287 lineto
113 290.2287 lineto
115 290.2287 lineto
117 290.2287 lineto
119 290.2287 lineto
121 290.2287 lineto
123 290.2287 lineto
125 290.2287 lineto
127 290.2287 lineto
129 290.2287 lineto
131 290.2287 lineto
133 290.2287 lineto
135 290.2287 lineto
137 290.2287 lineto
139 290.2287 lineto
141 290.2287 lineto
143 290.2287 lineto
145 290.2287 lineto
147 290.2287 lineto
149 290.2287 lineto
151 290.2287 lineto
153 290.2287 lineto
155 290.2287 lineto
157 290.2287 lineto
159 290.2287 lineto
161 290.2287 lineto
163 290.2287 lineto
165 290.2287 lineto
167 290.2287 lineto
170 290.2287 lineto
172 290.2287 lineto
174 290.2287 lineto
176 290.2287 lineto
178 290.2287 lineto
180 290.2287 lineto
182 290.2287 lineto
184 290.2287 lineto
186 290.2287 lineto
188 290.2287 lineto
190 290.2287 lineto
192 290.2287 lineto
194 290.2287 lineto
196 290.2287 lineto
198 290.2287 lineto
200 290.2287 lineto
202 290.2287 lineto
204 290.2287 lineto
206 290.2287 lineto
208 290.2287 lineto
210 290.2287 lineto
212 290.2287 lineto
214 290.2287 lineto
216 290.2287 lineto
218 290.2287 lineto
220 290.2287 lineto
222 290.2287 lineto
224 290.2287 lineto
226 290.2287 lineto
228 290.2287 lineto
230 290.2287 lineto
232 290.2287 lineto
234 290.2287 lineto
236 290.2287 lineto
238 290.2287 lineto
240 290.2287 lineto
242 290.2287 lineto
244 290.2287 lineto
246 290.2287 lineto
248 290.2287 lineto
250 290.2287 lineto
252 290.2287 lineto
255 290.2287 lineto
257 290.2287 lineto
259 290.2287 lineto
261 290.2287 lineto
263 290.2287 lineto
265 290.2287 lineto
267 290.2287 lineto
269 290.2287 lineto
271 290.2287 lineto
273 290.2287 lineto
275 290.2287 lineto
277 290.2287 lineto
279 290.2287 lineto
281 290.2287 lineto
283 290.2287 lineto
285 290.2287 lineto
287 290.2287 lineto
289 290.2287 lineto
291 290.2287 lineto
293 290.2287 lineto
295 290.2287 lineto
297 290.2287 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
35 290.2287 [
(a=0)
] 10 -1 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
