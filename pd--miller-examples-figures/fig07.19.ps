%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x9090818.c
%%CreationDate: Wed Aug 30 14:09:41 2006
%%BoundingBox: 172 267 441 525
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-157 -152 translate
-1 304 moveto 316 304 lineto 316 0 lineto -1 0 lineto closepath clip newpath
gsave
9 69 moveto
289 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
289 69 moveto
286 72 lineto
289 69 lineto
286 66 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
9 69 moveto
12 72 lineto
9 69 lineto
12 66 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
46 16 moveto
46 266 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
46 16 moveto
49 19 lineto
46 16 lineto
43 19 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
46 266 moveto
49 263 lineto
46 266 lineto
43 263 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
56 263 [
[(input)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
58 247 [
[(time)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
164 59 [
[(output time)]
] 13 -0 0 0 false DrawText
grestore
gsave
46 69 moveto
246 269 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
45 42 moveto
45 44 lineto
47 44 lineto
47 42 lineto
45 42 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
45 42 moveto
45 44 lineto
47 44 lineto
47 42 lineto
45 42 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
50 50 moveto
50 52 lineto
52 52 lineto
52 50 lineto
50 50 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
50 50 moveto
50 52 lineto
52 52 lineto
52 50 lineto
50 50 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
55 57 moveto
55 59 lineto
57 59 lineto
57 57 lineto
55 57 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
55 57 moveto
55 59 lineto
57 59 lineto
57 57 lineto
55 57 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
60 62 moveto
60 64 lineto
62 64 lineto
62 62 lineto
60 62 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
60 62 moveto
60 64 lineto
62 64 lineto
62 62 lineto
60 62 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
65 67 moveto
65 69 lineto
67 69 lineto
67 67 lineto
65 67 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
65 67 moveto
65 69 lineto
67 69 lineto
67 67 lineto
65 67 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
70 70 moveto
70 72 lineto
72 72 lineto
72 70 lineto
70 70 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
70 70 moveto
70 72 lineto
72 72 lineto
72 70 lineto
70 70 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
75 73 moveto
75 75 lineto
77 75 lineto
77 73 lineto
75 73 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
75 73 moveto
75 75 lineto
77 75 lineto
77 73 lineto
75 73 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
80 76 moveto
80 78 lineto
82 78 lineto
82 76 lineto
80 76 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
80 76 moveto
80 78 lineto
82 78 lineto
82 76 lineto
80 76 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
85 79 moveto
85 81 lineto
87 81 lineto
87 79 lineto
85 79 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
85 79 moveto
85 81 lineto
87 81 lineto
87 79 lineto
85 79 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
90 83 moveto
90 85 lineto
92 85 lineto
92 83 lineto
90 83 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
90 83 moveto
90 85 lineto
92 85 lineto
92 83 lineto
90 83 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
95 88 moveto
95 90 lineto
97 90 lineto
97 88 lineto
95 88 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
95 88 moveto
95 90 lineto
97 90 lineto
97 88 lineto
95 88 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
100 94 moveto
100 96 lineto
102 96 lineto
102 94 lineto
100 94 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
100 94 moveto
100 96 lineto
102 96 lineto
102 94 lineto
100 94 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
105 101 moveto
105 103 lineto
107 103 lineto
107 101 lineto
105 101 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
105 101 moveto
105 103 lineto
107 103 lineto
107 101 lineto
105 101 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
110 109 moveto
110 111 lineto
112 111 lineto
112 109 lineto
110 109 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
110 109 moveto
110 111 lineto
112 111 lineto
112 109 lineto
110 109 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
115 116 moveto
115 118 lineto
117 118 lineto
117 116 lineto
115 116 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
115 116 moveto
115 118 lineto
117 118 lineto
117 116 lineto
115 116 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
120 122 moveto
120 124 lineto
122 124 lineto
122 122 lineto
120 122 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
120 122 moveto
120 124 lineto
122 124 lineto
122 122 lineto
120 122 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
125 127 moveto
125 129 lineto
127 129 lineto
127 127 lineto
125 127 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
125 127 moveto
125 129 lineto
127 129 lineto
127 127 lineto
125 127 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
130 131 moveto
130 133 lineto
132 133 lineto
132 131 lineto
130 131 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
130 131 moveto
130 133 lineto
132 133 lineto
132 131 lineto
130 131 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
135 135 moveto
135 137 lineto
137 137 lineto
137 135 lineto
135 135 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
135 135 moveto
135 137 lineto
137 137 lineto
137 135 lineto
135 135 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
140 137 moveto
140 139 lineto
142 139 lineto
142 137 lineto
140 137 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
140 137 moveto
140 139 lineto
142 139 lineto
142 137 lineto
140 137 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
145 140 moveto
145 142 lineto
147 142 lineto
147 140 lineto
145 140 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
145 140 moveto
145 142 lineto
147 142 lineto
147 140 lineto
145 140 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
150 143 moveto
150 145 lineto
152 145 lineto
152 143 lineto
150 143 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
150 143 moveto
150 145 lineto
152 145 lineto
152 143 lineto
150 143 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
155 147 moveto
155 149 lineto
157 149 lineto
157 147 lineto
155 147 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
155 147 moveto
155 149 lineto
157 149 lineto
157 147 lineto
155 147 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
160 153 moveto
160 155 lineto
162 155 lineto
162 153 lineto
160 153 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
160 153 moveto
160 155 lineto
162 155 lineto
162 153 lineto
160 153 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
165 160 moveto
165 162 lineto
167 162 lineto
167 160 lineto
165 160 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
165 160 moveto
165 162 lineto
167 162 lineto
167 160 lineto
165 160 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
170 167 moveto
170 169 lineto
172 169 lineto
172 167 lineto
170 167 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
170 167 moveto
170 169 lineto
172 169 lineto
172 167 lineto
170 167 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
175 175 moveto
175 177 lineto
177 177 lineto
177 175 lineto
175 175 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
175 175 moveto
175 177 lineto
177 177 lineto
177 175 lineto
175 175 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
180 182 moveto
180 184 lineto
182 184 lineto
182 182 lineto
180 182 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
180 182 moveto
180 184 lineto
182 184 lineto
182 182 lineto
180 182 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
185 187 moveto
185 189 lineto
187 189 lineto
187 187 lineto
185 187 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
185 187 moveto
185 189 lineto
187 189 lineto
187 187 lineto
185 187 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
190 192 moveto
190 194 lineto
192 194 lineto
192 192 lineto
190 192 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
190 192 moveto
190 194 lineto
192 194 lineto
192 192 lineto
190 192 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
195 196 moveto
195 198 lineto
197 198 lineto
197 196 lineto
195 196 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
195 196 moveto
195 198 lineto
197 198 lineto
197 196 lineto
195 196 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
200 199 moveto
200 201 lineto
202 201 lineto
202 199 lineto
200 199 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
200 199 moveto
200 201 lineto
202 201 lineto
202 199 lineto
200 199 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
205 201 moveto
205 203 lineto
207 203 lineto
207 201 lineto
205 201 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
205 201 moveto
205 203 lineto
207 203 lineto
207 201 lineto
205 201 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
210 204 moveto
210 206 lineto
212 206 lineto
212 204 lineto
210 204 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
210 204 moveto
210 206 lineto
212 206 lineto
212 204 lineto
210 204 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
215 208 moveto
215 210 lineto
217 210 lineto
217 208 lineto
215 208 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
215 208 moveto
215 210 lineto
217 210 lineto
217 208 lineto
215 208 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
220 213 moveto
220 215 lineto
222 215 lineto
222 213 lineto
220 213 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
220 213 moveto
220 215 lineto
222 215 lineto
222 213 lineto
220 213 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
225 219 moveto
225 221 lineto
227 221 lineto
227 219 lineto
225 219 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
225 219 moveto
225 221 lineto
227 221 lineto
227 219 lineto
225 219 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
230 226 moveto
230 228 lineto
232 228 lineto
232 226 lineto
230 226 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
230 226 moveto
230 228 lineto
232 228 lineto
232 226 lineto
230 226 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
235 233 moveto
235 235 lineto
237 235 lineto
237 233 lineto
235 233 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
235 233 moveto
235 235 lineto
237 235 lineto
237 233 lineto
235 233 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
240 241 moveto
240 243 lineto
242 243 lineto
242 241 lineto
240 241 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
240 241 moveto
240 243 lineto
242 243 lineto
242 241 lineto
240 241 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
46 22 moveto
246 222 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
