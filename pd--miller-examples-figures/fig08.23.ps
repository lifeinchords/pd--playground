%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Miller Puckette
%%Title: Window .x9670660.c
%%CreationDate: Sun Dec 24 16:59:08 2006
%%BoundingBox: 169 307 443 485
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Courier-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Courier-Bold
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.846 0.846 scale
-160 -105 translate
-1 210 moveto 321 210 lineto 321 0 lineto -1 0 lineto closepath clip newpath
gsave
147 28 moveto
148.334 29.334 149.333 30.333 150 31 curveto
150.667 31.667 151.333 31.667 152 31 curveto
152.667 30.333 153.333 29.667 154 29 curveto
154.667 28.333 155.333 28.333 156 29 curveto
156.667 29.667 157.666 30.666 159 32 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
150 23 moveto
150 30 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
155 23 moveto
155 28 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
249 27 moveto
250.334 28.334 251.333 29.333 252 30 curveto
252.667 30.667 253.333 30.667 254 30 curveto
254.667 29.333 255.333 28.667 256 28 curveto
256.667 27.333 257.333 27.333 258 28 curveto
258.667 28.667 259.666 29.666 261 31 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
252 22 moveto
252 29 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
257 22 moveto
257 27 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 32 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
241 29 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
54 42 moveto
254 42 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 182 moveto
54 42 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 182 moveto
57 179 lineto
54 182 lineto
51 179 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
254 182 moveto
254 42 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
254 182 moveto
257 179 lineto
254 182 lineto
251 179 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 42.000198 moveto
56 53.022099 lineto
58 62.6106 lineto
60 70.197701 lineto
62 75.976303 lineto
64 80.361801 lineto
66 83.734802 lineto
68 86.379402 lineto
70 88.495201 lineto
72 90.220497 lineto
74 91.652 lineto
76 92.857903 lineto
78 93.888 lineto
80 94.778503 lineto
82 95.556801 lineto
84 96.243599 lineto
86 96.854897 lineto
88 97.403297 lineto
90 97.898804 lineto
92 98.349403 lineto
94 98.761703 lineto
96 99.1408 lineto
98 99.491402 lineto
100 99.817101 lineto
102 100.120903 lineto
104 100.405602 lineto
106 100.673302 lineto
108 100.926003 lineto
110 101.165398 lineto
112 101.392899 lineto
114 101.609802 lineto
116 101.817101 lineto
118 102.015999 lineto
120 102.207001 lineto
122 102.391998 lineto
124 102.57 lineto
126 102.741997 lineto
128 102.910004 lineto
130 103.072998 lineto
132 103.233002 lineto
134 103.388 lineto
136 103.541 lineto
138 103.691002 lineto
140 103.838997 lineto
142 103.984001 lineto
144 104.127998 lineto
146 104.271004 lineto
148 104.412003 lineto
150 104.553001 lineto
152 104.681 lineto
154 104.82 lineto
156 104.974998 lineto
158 105.107002 lineto
160 105.248001 lineto
162 105.389 lineto
164 105.531998 lineto
166 105.676003 lineto
168 105.820999 lineto
170 105.969002 lineto
172 106.119003 lineto
174 106.272003 lineto
176 106.427002 lineto
178 106.586998 lineto
180 106.75 lineto
182 106.917999 lineto
184 107.089996 lineto
186 107.267998 lineto
188 107.453003 lineto
190 107.643997 lineto
192 107.843002 lineto
194 108.050003 lineto
196 108.266998 lineto
198 108.495003 lineto
200 108.734001 lineto
202 108.987 lineto
204 109.253998 lineto
206 109.539001 lineto
208 109.843002 lineto
210 110.168999 lineto
212 110.518997 lineto
214 110.898003 lineto
216 111.310997 lineto
218 111.761002 lineto
220 112.257004 lineto
222 112.805 lineto
224 113.416 lineto
226 114.102997 lineto
228 114.880997 lineto
230 115.772003 lineto
232 116.802002 lineto
234 118.008003 lineto
236 119.439003 lineto
238 121.165001 lineto
240 123.280998 lineto
242 125.925003 lineto
244 129.298004 lineto
246 133.684006 lineto
248 139.462006 lineto
250 147.052994 lineto
252 156.638 lineto
254 167.634995 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 42.000198 moveto
56 43.266701 lineto
58 44.513199 lineto
60 45.769501 lineto
62 47.026402 lineto
64 48.283199 lineto
66 49.539799 lineto
68 50.796501 lineto
70 52.053101 lineto
72 53.3097 lineto
74 54.566299 lineto
76 55.823002 lineto
78 57.079601 lineto
80 58.3363 lineto
82 59.592899 lineto
84 60.849602 lineto
86 62.106201 lineto
88 63.362801 lineto
90 64.619499 lineto
92 65.876099 lineto
94 67.132698 lineto
96 68.389397 lineto
98 69.646004 lineto
100 70.902603 lineto
102 72.159302 lineto
104 73.415901 lineto
106 74.6726 lineto
108 75.929199 lineto
110 77.185799 lineto
112 78.442497 lineto
114 79.699203 lineto
116 80.955704 lineto
118 82.212402 lineto
120 83.469002 lineto
122 84.7257 lineto
124 85.9823 lineto
126 87.238899 lineto
128 88.495598 lineto
130 89.752197 lineto
132 91.008904 lineto
134 92.265602 lineto
136 93.522102 lineto
138 94.778702 lineto
140 96.0354 lineto
142 97.292 lineto
144 98.548798 lineto
146 99.805397 lineto
148 101.062302 lineto
150 102.319 lineto
152 103.565002 lineto
154 104.82 lineto
156 106.094002 lineto
158 107.341003 lineto
160 108.598 lineto
162 109.855003 lineto
164 111.111 lineto
166 112.367996 lineto
168 113.625 lineto
170 114.880997 lineto
172 116.138 lineto
174 117.393997 lineto
176 118.651001 lineto
178 119.907997 lineto
180 121.164001 lineto
182 122.420998 lineto
184 123.678001 lineto
186 124.933998 lineto
188 126.191002 lineto
190 127.447998 lineto
192 128.704002 lineto
194 129.960999 lineto
196 131.218002 lineto
198 132.473999 lineto
200 133.731003 lineto
202 134.987 lineto
204 136.244003 lineto
206 137.501007 lineto
208 138.757004 lineto
210 140.014008 lineto
212 141.270996 lineto
214 142.526993 lineto
216 143.783997 lineto
218 145.041 lineto
220 146.296997 lineto
222 147.554001 lineto
224 148.809998 lineto
226 150.067001 lineto
228 151.324005 lineto
230 152.580002 lineto
232 153.837006 lineto
234 155.093994 lineto
236 156.350006 lineto
238 157.606995 lineto
240 158.863998 lineto
242 160.119995 lineto
244 161.376999 lineto
246 162.634003 lineto
248 163.889999 lineto
250 165.147003 lineto
252 166.393005 lineto
254 167.634995 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 42.000198 moveto
56 44.936001 lineto
58 47.830898 lineto
60 50.683399 lineto
62 53.466 lineto
64 56.159901 lineto
66 58.750999 lineto
68 61.2299 lineto
70 63.590199 lineto
72 65.829498 lineto
74 67.947701 lineto
76 69.947601 lineto
78 71.833099 lineto
80 73.609497 lineto
82 75.2827 lineto
84 76.8592 lineto
86 78.345497 lineto
88 79.7481 lineto
90 81.073097 lineto
92 82.3265 lineto
94 83.514198 lineto
96 84.641098 lineto
98 85.712402 lineto
100 86.732597 lineto
102 87.705902 lineto
104 88.6362 lineto
106 89.527 lineto
108 90.381599 lineto
110 91.203102 lineto
112 91.994202 lineto
114 92.7575 lineto
116 93.495201 lineto
118 94.209602 lineto
120 94.902702 lineto
122 95.576302 lineto
124 96.232101 lineto
126 96.871803 lineto
128 97.496803 lineto
130 98.108597 lineto
132 98.708298 lineto
134 99.297501 lineto
136 99.8769 lineto
138 100.447899 lineto
140 101.011597 lineto
142 101.568901 lineto
144 102.121002 lineto
146 102.667999 lineto
148 103.212997 lineto
150 103.753998 lineto
152 104.281998 lineto
154 104.82 lineto
156 105.375 lineto
158 105.905998 lineto
160 106.446999 lineto
162 106.990997 lineto
164 107.539001 lineto
166 108.091003 lineto
168 108.648003 lineto
170 109.211998 lineto
172 109.782997 lineto
174 110.362999 lineto
176 110.952003 lineto
178 111.551003 lineto
180 112.163002 lineto
182 112.788002 lineto
184 113.428001 lineto
186 114.084 lineto
188 114.757004 lineto
190 115.449997 lineto
192 116.165001 lineto
194 116.903 lineto
196 117.666 lineto
198 118.457001 lineto
200 119.278 lineto
202 120.133003 lineto
204 121.024002 lineto
206 121.954002 lineto
208 122.927002 lineto
210 123.947998 lineto
212 125.018997 lineto
214 126.146004 lineto
216 127.333 lineto
218 128.586998 lineto
220 129.912003 lineto
222 131.313995 lineto
224 132.800995 lineto
226 134.376999 lineto
228 136.050995 lineto
230 137.826996 lineto
232 139.712006 lineto
234 141.712006 lineto
236 143.830994 lineto
238 146.070007 lineto
240 148.429993 lineto
242 150.908997 lineto
244 153.5 lineto
246 156.194 lineto
248 158.977005 lineto
250 161.830994 lineto
252 164.723999 lineto
254 167.634995 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54 42.000198 moveto
56 42.150902 lineto
58 42.279202 lineto
60 42.419601 lineto
62 42.561199 lineto
64 42.7038 lineto
66 42.847698 lineto
68 42.993301 lineto
70 43.1408 lineto
72 43.290798 lineto
74 43.443401 lineto
76 43.599201 lineto
78 43.758499 lineto
80 43.921799 lineto
82 44.0895 lineto
84 44.2621 lineto
86 44.4403 lineto
88 44.624699 lineto
90 44.815899 lineto
92 45.014702 lineto
94 45.222099 lineto
96 45.438999 lineto
98 45.6665 lineto
100 45.9058 lineto
102 46.1586 lineto
104 46.4263 lineto
106 46.710899 lineto
108 47.014801 lineto
110 47.340401 lineto
112 47.691002 lineto
114 48.070202 lineto
116 48.482399 lineto
118 48.932999 lineto
120 49.4286 lineto
122 49.976898 lineto
124 50.588299 lineto
126 51.275002 lineto
128 52.053299 lineto
130 52.943901 lineto
132 53.973999 lineto
134 55.179901 lineto
136 56.611401 lineto
138 58.336601 lineto
140 60.452499 lineto
142 63.097 lineto
144 66.469902 lineto
146 70.855499 lineto
148 76.634102 lineto
150 84.221298 lineto
152 93.8097 lineto
154 104.82 lineto
156 115.867996 lineto
158 125.439003 lineto
160 133.026001 lineto
162 138.804001 lineto
164 143.190002 lineto
166 146.563004 lineto
168 149.207993 lineto
170 151.322998 lineto
172 153.048996 lineto
174 154.479996 lineto
176 155.686005 lineto
178 156.716003 lineto
180 157.606995 lineto
182 158.384995 lineto
184 159.072006 lineto
186 159.682999 lineto
188 160.231003 lineto
190 160.727005 lineto
192 161.177994 lineto
194 161.589996 lineto
196 161.968994 lineto
198 162.320007 lineto
200 162.645004 lineto
202 162.949005 lineto
204 163.233994 lineto
206 163.501007 lineto
208 163.753998 lineto
210 163.994003 lineto
212 164.220993 lineto
214 164.438004 lineto
216 164.645004 lineto
218 164.843994 lineto
220 165.035004 lineto
222 165.220001 lineto
224 165.397995 lineto
226 165.570007 lineto
228 165.738007 lineto
230 165.901001 lineto
232 166.061005 lineto
234 166.216995 lineto
236 166.369003 lineto
238 166.518997 lineto
240 166.667007 lineto
242 166.811996 lineto
244 166.955994 lineto
246 167.098999 lineto
248 167.240005 lineto
250 167.380997 lineto
252 167.509003 lineto
254 167.634995 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 46 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
266 169 moveto
267.334 170.334 268.333 171.333 269 172 curveto
269.667 172.667 270.333 172.667 271 172 curveto
271.667 171.333 272.333 170.667 273 170 curveto
273.667 169.333 274.333 169.333 275 170 curveto
275.667 170.667 276.666 171.666 278 173 curveto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
269 164 moveto
269 171 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
274 164 moveto
274 169 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
258 171 [
[(2  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
147 65 [
[(-0.8)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
118 77 [
[(0  )]
] 13 -0 0 0 false DrawText
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 132 [
[(0.4)]
] 13 -0 0 0 false DrawText
grestore
gsave
115 95 moveto
115 121 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
115 95 moveto
118 98 lineto
115 95 lineto
112 98 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier-Bold findfont 11.3 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
67 113 [
[(p=0.8)]
] 13 -0 0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
